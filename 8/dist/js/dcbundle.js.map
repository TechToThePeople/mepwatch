{"version":3,"sources":["iframe-resizer/js/iframeResizer.contentWindow.js","crossfilter2/crossfilter.js","reductio/reductio.js","d3/dist/d3.js","d3-queue/build/d3-queue.js","topojson/dist/topojson.js","d3-tip/dist/index.js","dc/dc.js","dot/doT.js"],"names":["undefined","window","autoResize","base","bodyBackground","bodyMargin","bodyMarginStr","bodyObserver","bodyPadding","calculateWidth","doubleEventList","resize","click","eventCancelTimer","firstRun","height","heightCalcModeDefault","heightCalcMode","initLock","initMsg","inPageLinks","interval","intervalTimer","logging","msgID","msgIdLen","length","myID","resetRequiredMethods","max","min","bodyScroll","documentElementScroll","resizeFrom","sendPermit","target","parent","targetOriginDefault","tolerance","triggerLocked","triggerLockedTimer","throttledTimer","width","widthCalcModeDefault","widthCalcMode","win","messageCallback","warn","readyCallback","pageInfoCallback","customCalcMethods","document","documentElement","offsetHeight","body","scrollWidth","eventHandlersByName","passiveSupported","options","Object","create","passive","get","once","addEventListener","noop","removeEventListener","e","func","context","args","result","timeout","previous","getNow","Date","now","getTime","getHeight","bodyOffset","getComputedStyle","offset","scrollHeight","custom","documentElementOffset","Math","apply","getAllMeasurements","grow","lowestElement","getMaxElement","getAllElements","taggedElement","getTaggedElements","getWidth","offsetWidth","scroll","rightMostElement","sizeIFrameThrottled","sizeIFrame","remaining","this","arguments","clearTimeout","setTimeout","later","receiver","chkLateLoaded","el","evt","attachEvent","detachEvent","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatLogMsg","msg","log","console","init","strBool","str","data","substr","split","Number","enable","readDataFromParent","location","href","setupCustomCalcMethods","calcMode","calcFunc","iFrameResizer","constructor","JSON","stringify","targetOrigin","heightCalculationMethod","widthCalculationMethod","readData","readDataFromPage","setBodyStyle","attr","value","indexOf","chkCSS","setMargin","clearFix","createElement","style","clear","display","appendChild","injectClearFixIntoBodyElement","checkHeightMode","checkWidthMode","parentIFrame","startEventListeners","stopEventListeners","close","sendMsg","getId","getPageInfo","callback","moveToAnchor","hash","findTarget","reset","resetIFrame","scrollTo","x","y","scrollToOffset","sendMessage","setHeightCalculationMethod","setWidthCalculationMethod","setTargetOrigin","size","customHeight","customWidth","sendSize","getElementPosition","elPosition","getBoundingClientRect","pagePosition","pageXOffset","scrollLeft","pageYOffset","scrollTop","parseInt","left","top","jumpPosition","hashData","decodeURIComponent","getElementById","getElementsByName","checkLocationHash","Array","prototype","forEach","querySelectorAll","call","getAttribute","preventDefault","setupInPageLinks","manageTriggerEvent","listener","add","eventName","handleEvent","eventType","remove","eventNames","map","method","manageEventListeners","checkCalcMode","calcModeDefault","modes","type","forceIntervalTimer","MutationObserver","WebKitMutationObserver","initInterval","addImageLoadListners","mutation","addImageLoadListener","element","complete","src","imageLoaded","imageError","elements","push","attributeName","removeImageLoadListener","splice","removeFromArray","imageEventTriggered","event","typeDesc","mutationObserved","mutations","observer","querySelector","observe","attributes","attributeOldValue","characterData","characterDataOldValue","childList","subtree","createMutationObserver","disconnect","setupBodyMutationObserver","setupMutationObserver","clearInterval","setInterval","abs","prop","retVal","defaultView","test","runtimeStyle","currentStyle","pixelLeft","convertUnitsToPxForIE8","side","elementsLength","elVal","maxVal","Side","timer","i","chkEventThottle","dimention","tag","triggerEvent","triggerEventDesc","currentHeight","currentWidth","checkTolarance","a","b","lockTrigger","resetPage","triggerReset","hcm","message","postMessage","processRequestFromParent","source","getData","inPageLink","pageInfo","msgBody","parse","getMessageType","isInitMsg","true","false","callFromParent","messageType","module","exports","jQuery","readyState","f","define","amd","global","self","crossfilter","r","n","t","o","c","require","u","Error","code","p","1","./src/crossfilter","2","FUNC_ERROR_TEXT","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","freeSelf","root","Function","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","RegExp","replace","Symbol","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","index","entry","set","ListCache","MapCache","assocIndexOf","array","key","other","baseIsNative","isObject","isMasked","isFunction","isHostObject","toSource","getMapData","__data__","isKeyable","object","getValue","has","pop","stringToPath","memoize","isSymbol","baseToString","match","number","quote","toKey","resolver","TypeError","memoized","cache","Cache","isArray","isObjectLike","path","defaultValue","isKey","castPath","3","version","4","Uint8Array","crossfilter_array8","crossfilter_arrayLengthen","copy","crossfilter_arrayWiden","Uint16Array","crossfilter_array16","Uint32Array","crossfilter_array32","crossfilter_arrayUntyped","crossfilter_bitarray","subarrays","masks","0","lengthen","len","m","w","one","dest","truncate","j","zero","zeroExcept","zeroExceptMask","mask","only","onlyExcept","onlyOffset","onlyOne","array8","array16","array32","arrayLengthen","arrayWiden","bitarray","5","crossfilter_identity","bisect_by","bisectRight","lo","hi","mid","right","by","./identity","6","xfilterArray","xfilterFilter","crossfilter_null","crossfilter_zero","xfilterHeapselect","xfilterHeap","bisect","insertionsort","permute","quicksort","xfilterReduce","packageJson","crossfilter_index","crossfilter_range","range","crossfilter_capacity","filters","predicate","newIndex","removed","usePred","index1","index2","filterListeners","l","removeDataListeners","index3","index4","triggerOnChange","dimension","iterable","accessorPath","d","id","values","newValues","iterablesIndexCount","newIterablesIndexCount","iterablesIndexFilterStatus","newIterablesIndexFilterStatus","refilterFunction","filterValue","filterValuePresent","k","filter","filterAll","filterRange","filterFunction","filterExact","currentFilter","hasCurrentFilter","top_offset","hi0","toSkip","lo0","iterablesEmptyRows","bottom","bottom_offset","group","groupAll","g","all","order","orderNatural","dispose","accessor","sort","refilter","indexListeners","dimensionGroups","dataListeners","unshift","preAdd","postAdd","removeData","tmp","newData","n0","n1","i0","unsortedIndex","sortMap","bounds","lo1","hi1","old_n0","oldValues","oldIndex","oldIterablesIndexFilterStatus","i1","oldiiclength","index5","reIndex","oldDataIndex","filterIndexBounds","filterIndexFunction","added","valueIndexAdded","valueIndexRemoved","newAdded","newRemoved","indexLength","select","groups","heap","reduce","reduceCount","reduceSum","reduceAdd","reduceSubtract","groupIndex","reduceRemove","reduceInitial","n0old","groupWidth","groupCapacity","update","resetNeeded","g0","x0","x1","oldGroups","initial","k0","groupIncrement","updateMany","resetMany","updateOne","resetOne","oldK","seenGroups","filterOne","filterOffset","notFilter","reduceIncrement","reduceDecrement","valueOf","reduceValue","allFiltered","ignore_dimensions","maskForDimensions","onChange","cb","callbacks","isElementFiltered","concat","dimensions","heapselect","./../package.json","./array","./bisect","./filter","./heap","./heapselect","./insertionsort","./null","./permute","./quicksort","./reduce","./zero","lodash.result","7","8","heap_by","sift","child","9","xFilterHeap","heapselect_by","queue","10","11","insertionsort_by","12","13","deep","14","xFilterInsertionsort","quicksort_by","sixth","i5","i3","i2","i4","e1","e2","x2","e3","x3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","15","v","16","reductio","s","reductio_build","reductio_accessors","reductio_parameters","reductio_postprocess","parameters","funcs","my","build","keysLength","nf","./accessors.js","./build.js","./parameters.js","./postprocess","./postprocessors","_assign","output","nextKey","accessor_build","obj","accessorify","tempValue","accessorifyNumeric","fromObject","toObject","count","propName","sum","avg","exception","exceptionAccessor","valueList","median","exceptionCount","exceptionSum","histogramValue","histogramBins","histogramThresholds","std","sumOfSquares","sumOfSq","error","nest","keyAccessorArray","nestKeys","alias","propAccessorObj","aliasKeys","aliasProp","aliasPropKeys","groupTest","dataList","addRemoveInitialObj","prior","buildAliasFunction","reductio_filter","reductio_count","reductio_sum","reductio_avg","reductio_median","reductio_min","reductio_max","reductio_value_count","reductio_value_list","reductio_exception_count","reductio_exception_sum","reductio_histogram","reductio_sum_of_sq","reductio_std","reductio_nest","reductio_alias","reductio_alias_prop","reductio_data_list","reductio_custom","build_function","origF","getOwnPropertyNames","./alias.js","./aliasProp.js","./avg.js","./count.js","./custom.js","./data-list.js","./exception-count.js","./exception-sum.js","./filter.js","./histogram.js","./max.js","./median.js","./min.js","./nest.js","./std.js","./sum-of-squares.js","./sum.js","./value-count.js","./value-list.js","pluck","_grouper","reductio_cap","_othersGrouper","cap","othersName","Infinity","slice_idx","others","addFn","removeFn","initialFn","curr","skip","bisectHisto","histogram","thresholds","arr","dx","half","floor","17","18","keyAccessors","arrRef","newRef","19","20","post","postprocess","postprocessors","name","_all","21","registerPostProcessor","./cap","./sortBy","22","ascending","NaN","ordering","comparer","pluck_n","23","sqrt","24","25","26","27","factory","d3","bisector","compare","ascendingComparator","ascendingBisect","bisectLeft","pair","variance","valueof","delta","mean","isNaN","deviation","extent","constant","identity","sequence","start","stop","step","ceil","e10","ticks","reverse","tickIncrement","isFinite","power","LN10","pow","tickStep","step0","step1","thresholdSturges","LN2","threshold","value0","merge","arrays","merged","transpose","matrix","row","slice$1","identity$1","epsilon","translateX","translateY","entering","__axis","axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","domain","format","spacing","range0","range1","position","bandwidth","round","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","line","text","insert","transition","parentNode","each","_","tickSize","dispatch","Dispatch","on","typename","T","typenames","types","trim","parseTypenames","that","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","none","selector","empty","selectorAll","matcher","matches","sparse","EnterNode","datum","_next","_parent","insertBefore","next","keyPrefix","bindIndex","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending$1","styleValue","getPropertyValue","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","setAttribute","join","contains","filterEvents","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","capture","onAdd","wrap","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","parents","_groups","_parents","subgroups","subnode","subgroup","bind","constant$1","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","selection$$1","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","property","classed","html","before","clone","parseTypenames$1","nextId","Local","current","point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","clientLeft","clientTop","mouse","changedTouches","touch","touches","identifier","nopropagation","stopImmediatePropagation","noevent","dragDisable","view","__noselect","MozUserSelect","yesdrag","noclick","constant$2","DragEvent","subject","active","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","Color","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","toLowerCase","Rgb","rgbn","rgba","hsla","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","v1","v2","v3","basis$1","basisClosed","constant$3","linear","hue","gamma","nogamma","exponential","cosh","sinh","interpolateRgb","rgbGamma","color$$1","rgb$$1","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","array$1","nb","na","interpolateValue","date","setTime","interpolateNumber","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","q","interpolateRound","cssNode","cssRoot","cssView","svgNode","degrees","identity$2","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","rho2","rho4","epsilon2","exp","interpolateZoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","tanh","duration","hsl$1","hue$$1","hsl$2","hslLong","hcl$1","hcl$2","hclLong","cubehelix$1","cubehelixGamma","cubehelix$$1","cubehelix$2","cubehelixLong","taskHead","taskTail","frame","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","delay","time","restart","timerFlush","wake","sleep","nap","poke","timeout$1","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","timing","schedules","__transition","tween","state","ease","create$1","get$1","set$1","interrupt","schedule$$1","tweenValue","_id","interpolate","Selection$1","styleRemove$1","Transition","_name","newId","selection_prototype","quadInOut","cubicInOut","select$$1","children","inherit","transition$$1","id0","id1","on0","on1","sit","every","onFunction","attrTween","interpolate$$1","string00","string10","interpolate0","string0","string1","value1","_value","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleFunction$1","listener0","styleMaybeRemove","styleConstant$1","styleInterpolate","textFunction$1","textConstant$1","removeFunction","tween0","tween1","easeConstant","Promise","resolve","reject","cancel","polyIn","exponent","polyOut","polyInOut","pi","halfPi","sinInOut","expInOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceOut","overshoot","backIn","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","root$1","constant$4","BrushEvent","nopropagation$1","noevent$1","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","input","xy","Y","XY","cursors","overlay","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter$1","defaultExtent","local$1","__brush","empty$1","brush$1","dim","touchending","listeners","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","W","N","shifting","shiftKey","point0","point$$1","emit","beforestart","moved","ended","keyCode","move","point1","selection0","selection1","starting","pi$1","halfPi$1","tau$1","max$1","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","map$1","createObject","setObject","createMap","setMap","Set","proto","set$2","slice$3","ascending$2","constant$6","ring","hole","ringContains","xi","yi","pj","xj","yj","collinear","within","noop$1","cases","contours","threshold$$1","smooth","smoothLinear","tz","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","isorings","area","polygon","coordinates","xt","yt","_0","_1","blurX","sr","blurY","defaultX","defaultY","defaultWeight","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","inferColumns","rows","columnSet","column","pad","formatDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","year","formatYear","getUTCFullYear","getUTCMonth","getUTCDate","dsvFormat","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","I","eof","eol","token","preformatBody","formatValue","formatRow","convert","customConverter","formatBody","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","fetch","then","dsvParse","csv$1","tsv$1","responseJson","json","parser","text$$1","DOMParser","parseFromString","constant$7","jiggle","random","tree","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","defaultX$1","defaultY$1","quadtree","Quadtree","addAll","leaf_copy","treeProto","vx","vy","find","nodeById","nodeId","x$1","y$1","cover","xz","yz","visit","y3","quads","retainer","removeAll","visitAfter","initialAngle","formatDecimal","toExponential","coefficient","exponent$1","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","comma","precision","formatRounded","formatTypes","%","toFixed","toPrecision","identity$3","locale","prefixes","formatLocale","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","add$1","temp","bv","av","epsilon$2","pi$3","halfPi$2","quarterPi","tau$3","degrees$1","radians","cos$1","sin$1","haversin","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","ranges","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","lambda00$2","phi00$2","z0","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","sign$$1","lambdai","antimeridian","angle","rangeCompare","rangeContains","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","constant$8","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","shift","pointEqual","Intersection","points","clipRejoin","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","sum$1","polygonContains","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","clean","ringSegments","validSegment","clipAntimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","c0","v00","point2","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","polygonInside","cleanInside","ax","ay","lambda0$2","sinPhi0$1","cosPhi0$1","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","length$1","object$1","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","identity$4","x00","y00","x0$1","y0$1","areaSum$1","areaRingSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","areaPointFirst$1","areaPoint$1","x0$2","y0$2","boundsStream$1","x00$1","y00$1","x0$3","y0$3","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","x00$2","y00$2","x0$4","y0$4","lengthSum$1","lengthStream$1","lengthPointFirst$1","lengthPoint$1","PathString","_string","circle$1","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","_circle","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","resampleNone","transformRadians","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","ci","fi","transform$$1","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cacheStream","theta","preclip","postclip","recenter","center","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","sy0","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","scaleTranslate$1","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanXReduce","maxYReduce","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","slice$4","enclose","circles","shuffle$1","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","place","intersects","score","Node$1","circle","packEnclose","aa","sj","sk","pack","required","constantZero","constant$9","defaultRadius$1","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","squarify","resquarify","_squarify","lexicographicOrder","computeUpperHullIndexes","indexes","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","initRange","initInterpolator","interpolator","array$3","map$2","slice$5","implicit","ordinal","unknown","band","ordinalRange","range$$1","paddingInner","paddingOuter","rescale","rangeRound","number$2","unit","identity$6","normalize","constant$a","clamper","bimap","d0","polymap","clamp","transformer$1","untransform","piecewise$$1","continuous","linearish","nice","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","log10","log2","logp","powp","transformSymlog","log1p","transformSymexp","expm1","symlogish","transformPow","transformSqrt","transformSquare","powish","pow$1","t0$1","t1$1","newInterval","floori","offseti","field","millisecond","second","getMilliseconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","months","setFullYear","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDay","setUTCHours","setUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYear","setUTCFullYear","utcYears","localDate","H","L","utcDate","UTC","newYear","formatLocale$1","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear$1","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","newParse","newDate","week","day$$1","utcFormat","utcParse","locale$1","-","numberRe","percentRe","requoteRe","pad$1","requote","dow","defaultLocale$1","timeFormat","timeParse","isoSpecifier","formatIso","toISOString","parseIso","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","durationYear","date$1","number$3","calendar","year$$1","month$$1","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","tickIntervals","tickInterval","transformer$2","k10","copy$1","sequentialPow","transformer$3","k21","divergingPow","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG","scheme$1","PRGn","scheme$2","PiYG","scheme$3","PuOr","scheme$4","RdBu","scheme$5","RdGy","scheme$6","RdYlBu","scheme$7","RdYlGn","scheme$8","Spectral","scheme$9","BuGn","scheme$a","BuPu","scheme$b","GnBu","scheme$c","OrRd","scheme$d","PuBuGn","scheme$e","PuBu","scheme$f","PuRd","scheme$g","RdPu","scheme$h","YlGnBu","scheme$i","YlGn","scheme$j","YlOrBr","scheme$k","YlOrRd","scheme$l","Blues","scheme$m","Greens","scheme$n","Greys","scheme$o","Purples","scheme$p","Reds","scheme$q","Oranges","cubehelix$3","warm","cool","c$1","pi_1_3","pi_2_3","ramp$1","viridis","magma","inferno","plasma","constant$b","abs$1","atan2$1","cos$2","max$2","min$1","sin$2","sqrt$2","epsilon$3","pi$4","halfPi$3","tau$4","asin$1","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","curveLinear","x$3","y$3","x$$1","y$$1","defined","curve","buffer","defined0","area$3","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$8","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","slice$6","linkSource","linkTarget","link$2","link","argv","curveHorizontal","curveVertical","curveRadial$1","p2","p3","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","c$2","wye","symbols","noop$3","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","bundle","point$3","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","cardinal$$1","CardinalOpen","cardinalOpen","point$4","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","catmullRom$$1","CatmullRomOpen","catmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","none$1","series","none$2","stackValue","appearance","peaks","peak","vi","vj","ascending$3","sums","sum$2","constant$c","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","fx","cellHalfedgeStart","cell","site","_t0","px","py","after","grandpa","uncle","sibling","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","epsilon2$2","ha","hc","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","epsilon$4","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","vb","va","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","constant$d","ZoomEvent","Transform","triangles","_found","applyX","applyY","invertX","invertY","rescaleX","rescaleY","identity$9","transform$1","__zoom","nopropagation$2","noevent$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","defaultConstrain","translateExtent","cross","values0","values1","descending","bin","bins","thresholdFreedmanDiaconis","thresholdScott","numbers","pairs","permutes","quantile","scan","shuffle","zip","axisTop","axisRight","axisBottom","axisLeft","brushX","brushY","brushSelection","chord","sortGroups","sortSubgroups","sortChords","groupSums","subgroupIndex","chords","di","dj","subindex","compareValue","ribbon","sa0","sa1","sx0","tr","ta0","ta1","sortValues","rollup","sortKeys","createResult","setResult","valuesByKey","sortKey","lch","contourDensity","weight","density","Float32Array","wi","transformPolygon","transformRing","transformPoint","cellSize","drag","mousedownx","mousedowny","mousemoving","container","touchable","gestures","clickDistance2","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","touches$$1","sublisteners","clickDistance","dragEnable","autoType","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","dsv","image","Image","onerror","onload","forceCenter","force","sx","sy","forceCollide","radii","strength","iterations","ri","ri2","prepare","quad","rj","forceLink","strengths","distances","bias","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","forceRadial","radiuses","forceSimulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","initializeNodes","initializeForce","closest","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","feature","deltaMax","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","sy1","kx0","ky0","kx1","ky1","geoLength","geoPath","projectionStream","contextStream","measure","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEqualEarth","geoEqualEarthRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","reflectX","reflectY","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","cluster","separation","nodeSize","previousNode","meanX","maxY","leafLeft","leafRight","optional","packSiblings","partition","positionNode","stratify","nodeKey","nodeByKey","treeRoot","firstWalk","secondWalk","sizeNode","siblings","change","executeShifts","midpoint","vip","vop","vim","vom","sip","sop","sim","som","wm","wp","apportion","treemap","tile","paddingStack","paddingTop","paddingRight","paddingBottom","paddingLeft","treemapBinary","valueOffset","valueTarget","valueLeft","valueRight","yk","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateDiscrete","interpolateHue","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","piecewise","quantize","samples","polygonArea","polygonCentroid","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","inside","polygonLength","perimeter","scaleBand","scalePoint","pointish","scaleIdentity","identity$7","scaleLinear","linear$2","scaleLog","log$1","scaleSymlog","symlog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","quantile$$1","invertExtent","quantiles","scaleQuantize","quantize$1","scaleThreshold","threshold$1","scaleTime","scaleUtc","scaleSequential","sequential","scaleSequentialLog","sequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","sequentialSymlog","scaleSequentialQuantile","sequentialQuantile","scaleDiverging","diverging","scaleDivergingLog","divergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","divergingSymlog","schemeCategory10","schemeAccent","schemeDark2","schemePaired","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","interpolateBrBG","schemeBrBG","interpolatePRGn","schemePRGn","interpolatePiYG","schemePiYG","interpolatePuOr","schemePuOr","interpolateRdBu","schemeRdBu","interpolateRdGy","schemeRdGy","interpolateRdYlBu","schemeRdYlBu","interpolateRdYlGn","schemeRdYlGn","interpolateSpectral","schemeSpectral","interpolateBuGn","schemeBuGn","interpolateBuPu","schemeBuPu","interpolateGnBu","schemeGnBu","interpolateOrRd","schemeOrRd","interpolatePuBuGn","schemePuBuGn","interpolatePuBu","schemePuBu","interpolatePuRd","schemePuRd","interpolateRdPu","schemeRdPu","interpolateYlGnBu","schemeYlGnBu","interpolateYlGn","schemeYlGn","interpolateYlOrBr","schemeYlOrBr","interpolateYlOrRd","schemeYlOrRd","interpolateBlues","schemeBlues","interpolateGreens","schemeGreens","interpolateGreys","schemeGreys","interpolatePurples","schemePurples","interpolateReds","schemeReds","interpolateOranges","schemeOranges","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateSinebow","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","clientPoint","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","kc","acos$1","lc","pie","arcs","pa","radialArea","radialLine","linkHorizontal","linkVertical","linkRadial","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stack","oz","kz","sz","sij","ki","si","stackOffsetExpand","stackOffsetDiverging","yn","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAppearance","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","total","voronoi","zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","zoomTransform","zoomIdentity","defineProperty","noabort","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","abort","maybeNotify","concurrency","defer","await","results","awaitAll","topojson","bbox","topology","bboxPoint","bboxGeometry","objects","feature$1","properties","stitchedArcs","fragments","emptyIndex","flush","ends","fg","gf","meshArcs","object$$1","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","mergeArcs","polygonsByArc","extract","planarRingArea","neighbors","hashmap","equal","keyType","keyEmpty","valueType","keystore","valstore","matchKey","collisions","maybeSet","missingValue","equalPoint","pointA","pointB","hashPoint","uints","currentIndex","nextIndex","rings","indexByPoint","hashIndex","equalIndex","Int32Array","visitedByIndex","leftByIndex","rightByIndex","junctionByIndex","Int8Array","junctionCount","previousIndex","leftIndex","rightIndex","junctionByPoint","store","hashset","ArrayBuffer","rotateArray","reverse$1","geomifyFeature","geomifyGeometry","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","filterTrue","filterIdentity","filterNotNull","filterAttached","ownerByArc","ownerIndex","testGeometry","testArcs","owner","planarTriangleArea","planarRingArea$1","filterWeight","minWeight","MIN_VALUE","interior","halfArea","mesh","indexesByArc","geometryType","ij","ik","box","inputs","outputs","quantizePoint","quantizeGeometry","quantization","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","quantizePoints","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","prequantize","arcCount","arcsByEnd","dedupLine","dedupRing","startPoint","endPoint","startArcs","startArc","endArcs","endArc","equalLine","reverseEqualLine","equalRing","reverseEqualRing","findMinimumOffset","ka","kb","minimum","minimumPoint","dedup","junctions","lineMid","ringMid","ringFixed","cut","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","indexByArc","indexGeometry","geometry$$1","indexGeometryType","indexArcs","indexMultiArcs","oldObjects","newObjects","filterGeometry","filterRings","filterExteriorRing","filterInteriorRing","newArcs","oldArcs","oldArcsLength","newIndexByOldIndex","newArcsLength","scanGeometry","scanArcs","scanMultiArcs","scanArc","reindexGeometry","reindexArcs","reindexMultiArcs","reindexArc","prune","filterAttachedWeight","presimplify","up","down","newHeap","maxWeight","quantile$1","simplify","sphericalRingArea","sphericalTriangleArea","tip","d3Collection","d3Selection","rootElement","initNode","vis","tagName","getSVGNode","show","coords","content","poffset","dir","nodel","getNodeEl","directions","directionCallbacks","hide","functor","destroy","getScreenBBox","div","targetShape","targetel","tbbox","getBBox","_dc","_chartMap","constants","CHART_CLASS","DEBUG_GROUP_CLASS","STACK_CLASS","DESELECTED_CLASS","SELECTED_CLASS","NODE_INDEX_NAME","GROUP_INDEX_NAME","DEFAULT_CHART_GROUP","EVENT_DELAY","NEGLIGIBLE_NUMBER","_renderlet","initializeChartGroup","chartRegistry","chart","register","deregister","anchorName","registerChart","deregisterChart","hasChart","deregisterAllCharts","charts","refocusAll","focus","renderAll","render","redrawAll","disableTransitions","optionalTransition","afterTransition","units","integers","fp","_f","resolution","utils","isNegligible","override","functionName","newFunction","existingFunction","renderlet","instanceOfChart","__dcFlag__","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","item","errors","Exception","_msg","InvalidStateException","BadArgumentException","dateFormat","printers","printSingleValue","isFloat","fformat","isInteger","toTimeFunc","percentage","subtract","isNumber","val","_logger","_alreadyWarned","_config","_schemeCategory20c","_defaultColors","_idCounter","findChild","nodeName","boxWhiskers","boxQuartiles","uniqueId","nameToId","appendOrSelect","safeNumber","arraysEqual","elem","allChildren","paths","toHierarchy","parts","currentNode","childNode","currentPath","getAncestors","arraysIdentical","assign","varArgs","nextSource","writable","configurable","logger","enableDebugLog","warnOnce","debug","deprecate","fn","warned","annotate","groupCollapsed","trace","groupEnd","config","defaultColors","events","trigger","closure","RangedFilter","low","high","isFiltered","filterType","TwoDimensionalFilter","RangedTwoDimensionalFilter","fromBottomLeft","HierarchyFilter","baseMixin","_chart","_dimension","_group","_anchor","_svg","_isChild","_defaultWidthCalc","_minWidth","_defaultHeightCalc","_minHeight","_width","_height","_orderSort","_legend","_commitHandler","_widthCalc","_heightCalc","_useViewBoxResizing","_keyAccessor","_valueAccessor","_label","_ordering","_renderLabel","_title","keyAccessor","valueAccessor","_renderTitle","_controlsUseVisibility","_transitionDuration","_transitionDelay","_filterPrinter","_mandatoryAttributes","_chartGroup","_listeners","_filters","_filterHandler","sizeSvg","checkForMandatoryAttributes","minWidth","minHeight","useViewBoxResizing","expireCache","_groupName","orderFunction","_computeOrderedGroups","dataCopy","anchor","chartGroup","chartID","svgElement","resetSvg","filterPrinter","filterPrinterFunction","controlsUseVisibility","useVisibility","turnOnControls","attribute","turnOffControls","transitionDuration","transitionDelay","_doRender","_activateRenderlets","_doRedraw","commitHandler","redrawGroup","renderGroup","_invokeFilteredListener","_invokeZoomedListener","_hasFilterHandler","some","hasFilterHandler","hasFilter","_removeFilterHandler","removeFilterHandler","_addFilterHandler","addFilterHandler","_resetFilterHandler","resetFilterHandler","replaceFilter","fs","applyFilters","highlightSelected","fadeDeselected","resetHighlight","onClick","filterHandler","legendables","legendHighlight","legendReset","legendToggle","isLegendableHidden","label","labelFunction","enableLabels","renderLabel","title","titleFunction","renderTitle","renderletFunction","legend","opts","applyOptions","marginMixin","_margin","margins","effectiveWidth","effectiveHeight","colorMixin","_colorCalculator","_colors","_defaultAccessor","_colorAccessor","colorScale","ordinalColors","linearColors","colorAccessor","defaultColorAccessor","colorDomain","calculateColorDomain","newDomain","getColor","colorCalculator","coordinateGridMixin","_g","_chartBodyG","_origX","_xOriginalDomain","GRID_LINE_CLASS","HORIZONTAL_CLASS","VERTICAL_CLASS","Y_AXIS_LABEL_CLASS","X_AXIS_LABEL_CLASS","CUSTOM_BRUSH_HANDLE_CLASS","_xAxisLabel","_lastXDomain","_yAxisLabel","_gBrush","_round","_unitCount","_rangeChart","_focusChart","_xAxis","_xUnits","_xAxisPadding","_xAxisPaddingUnit","_xElasticity","_xAxisLabelPadding","_yAxis","_yAxisPadding","_yElasticity","_yAxisLabelPadding","_brush","_brushOn","_parentBrushOn","_renderHorizontalGridLine","_renderVerticalGridLine","_resizing","_zoomScale","_zoomOutRestrict","_zoom","_nullZoom","_hasBeenMouseZoomable","_mouseZoomable","_clipPadding","_outerRangeBandPadding","_rangeBandPadding","_useRightYAxis","prepareXAxis","isOrdinal","elasticX","_ordinalXDomain","xAxisMin","xAxisMax","xdom","xAxisLength","_useOuterPadding","gridLineG","linesGEnter","_xAxisY","renderVerticalGridLines","createYAxis","getClipPathId","generateClipPath","defs","chartBodyClip","yAxisHeight","drawChart","_prepareYAxis","plotData","renderXAxis","elasticY","renderYAxis","renderBrush","redrawBrush","fadeDeselectedArea","zoomHandler","noRaiseEvents","domFilter","hasRangeSelected","updateD3zoomTransform","origDomain","xScale","domainToZoomTransform","checkExtents","ext","outerLimits","resizing","rangeChart","focusChart","zoomScale","zoomOutRestrict","_generateG","gElement","mouseZoomable","chartBodyG","xOriginalDomain","xUnits","xAxis","xAxisPadding","xAxisPaddingUnit","xUnitCount","useRightYAxis","axisXG","axisXLab","xAxisLabel","labelText","yAxisMin","yAxisMax","_renderHorizontalGridLinesForAxis","renderYAxisLabel","axisClass","labelXPosition","axisYLab","labelYPosition","renderYAxisAt","axisYG","axisPosition","_yAxisX","labelPosition","yAxisLabel","yScale","yAxis","renderHorizontalGridLines","yAxisPadding","_filter","doTransition","_brushing","setBrushExtents","createBrushHandlePaths","gBrush","brushHandles","resizeHandlePath","extendBrush","brushIsEmpty","rangedFilter","applyBrushSelection","scaledSelection","clipPadding","_preprocessData","_enableMouseZoom","_disableMouseZoom","zoomScaleMin","refocused","brushOn","parentBrushOn","stackMixin","prepareValues","layer","layerIdx","valAccessor","String","allValues","hidden","domainValues","xDomain","domainFilter","evadeDomainFilter","_stackLayout","_stack","_titles","_hidableStacks","_evadeDomainFilter","findLayerByName","flattenStack","valueses","visibility","hidableStacks","hideStack","stackName","showStack","getValueAccessorByIndex","titleAccessor","stackLayout","layers","v4data","col","ys","flat","capMixin","_cap","_takeFront","_othersLabel","kv","topItems","restItems","restItemsSum","restKeys","othersLabel","cappedKeyAccessor","cappedValueAccessor","rest","items","takeFront","othersGrouper","grouperFunction","_onClick","bubbleMixin","_maxBubbleRelativeSize","_minRadiusWithLabel","_sortBubbleSize","_elasticRadius","BUBBLE_NODE_CLASS","BUBBLE_CLASS","MIN_RADIUS","radiusAccessor","radiusValueAccessor","_r","_rValueAccessor","bubbleRadiusScale","elasticRadius","calculateRadiusDomain","rMin","rMax","bubbleR","shouldLabel","labelOpacity","labelPointerEvent","_doRenderLabel","bubbleGEnter","doUpdateLabels","labels","_doRenderTitles","doUpdateTitles","sortBubbleSize","minRadius","minRadiusWithLabel","maxBubbleRelativeSize","relativeSize","isSelectedNode","pieChart","_givenRadius","_cx","_cy","_externalLabelRadius","_sliceCssClass","_labelCssClass","_sliceGroupCssClass","_labelGroupCssClass","_emptyCssClass","_emptyTitle","_innerRadius","_externalRadiusPadding","_minAngleForLabel","_drawPaths","maxRadius","pieData","buildArcs","slices","removeElements","slicesEnter","createSliceNodes","slicePath","safeArc","tweenPie","createSlicePath","createTitles","positionLabels","classes","highlightSlice","updateLabelPaths","createLabels","createElements","slicePaths","updateSlicePaths","updateLabels","updateTitles","updateElements","isSelectedSlice","_applyLabelText","whether","polyline","arc2","_current","isOffCanvas","highlightSliceFromLegendable","legendable","highlighted","slicesCap","sliceHasNoData","sliceTooSmall","externalRadiusPadding","minAngleForLabel","emptyTitle","externalLabels","externalLabelRadius","drawPaths","sunburstChart","extendedValueAccessor","sunburstData","partitionNodes","tweenSlice","isPathFiltered","labelsEnter","tweenTarget","pathFilter","filtersForPath","exactMatch","barChart","_barWidth","LABEL_PADDING","_gap","_centerBar","_alwaysUseRounding","barHeight","labelXPos","labelYPos","barXPos","colorFilter","inv","_rescale","_render","numberOfBars","barPadding","calculateBarWidth","last","layerIndex","bars","barsEnterUpdate","renderBars","labelsEnterUpdate","renderLabels","centerBar","outerPadding","gap","alwaysUseRounding","_xAxisMax","lineChart","_defined","_dashStyle","TOOLTIP_G_CLASS","Y_AXIS_REF_LINE_CLASS","X_AXIS_REF_LINE_CLASS","_renderArea","_dotRadius","_dataPointRadius","_dataPointFillOpacity","_dataPointStrokeOpacity","_interpolate","_tension","_xyTipsOn","getCurveFactory","linear-closed","step-before","step-after","basis-open","basis-closed","cardinal-open","cardinal-closed","monotone","safeD","getDotRadius","dot","dashstyle","chartBody","layersList","layersEnter","drawLine","drawArea","xyTipsOn","tooltipListClass","tooltips","createRefLines","dots","dotsEnterModify","showDot","yAxisRefPathD","xAxisRefPathD","showRefLines","hideDot","hideRefLines","drawDots","labelsEnterModify","drawLabels","dashStyle","renderArea","dotRadius","renderDataPoints","fillOpacity","strokeOpacity","_legendables","dataCount","_formatNumber","_crossfilter","_groupAll","_html","formatNumber","formatter","tot","selected","cf","dataTable","_endSlice","ROW_CSS_CLASS","_columns","_sortBy","_order","_beginSlice","_showSections","_section","sections","rowEnter","COLUMN_CSS_CLASS","_doColumnValueFormat","renderRows","bAllFunctions","thead","headrow","headcols","_doColumnHeaderFormat","section","nestEntries","rowSection","renderSections","_doColumnHeaderFnToString","_doColumnHeaderCapitalize","lastIndexOf","beginSlice","endSlice","sortBy","showSections","showGroups","dataGrid","ITEM_CSS_CLASS","GRID_CSS_CLASS","_htmlSection","renderItems","itemSection","htmlSection","htmlGroup","sortByFunction","bubbleChart","bubbleLocator","bubbleG","removeNodes","updateNodes","renderNodes","compositeChart","_rightY","SUB_CHART_CLASS","_children","_childOptions","_shareColors","_shareTitle","_alignYAxes","_rightYAxis","_rightYAxisLabel","_rightYAxisLabelPadding","_rightAxisGridLines","generateChildG","leftYAxisChildren","rightYAxisChildren","getYAxisMin","getYAxisMax","__generateG","lyAxisMin","lyAxisMax","ryAxisMin","ryAxisMax","alignYAxes","extentRatio","alignYAxisRanges","calculateYAxisRanges","needDomain","needRange","prepareLeftYAxis","rightY","rightYAxis","prepareRightYAxis","rightYAxisLabel","useRightAxisGridLines","childOptions","subChartArray","shareColors","shareTitle","seriesChart","_seriesAccessor","_charts","_chartFunction","_seriesSort","_valueSort","clearChart","resetChildren","childrenChanged","keep","nester","sub","subChart","_compose","chartFunction","seriesAccessor","seriesSort","sortFunction","valueSort","geoChoroplethChart","_projectionFlag","_projection","_geoPath","_geoJsons","generateLayeredData","geoJson","isDataLayer","regionG","layerSelector","isSelected","isDeselected","baseClasses","renderRegionG","currentFill","renderPaths","getKey","_getGeoPath","selectedRegion","overlayGeoJson","geoJsons","removeGeoJson","bubbleOverlay","BUBBLE_OVERLAY_CLASS","_points","mapData","getNodeG","bubbleNodeClass","nodeG","initOverlayG","initializeBubbles","updateBubbles","flag","debugG","debugText","rowChart","_elasticX","_rowData","_labelOffsetX","_labelOffsetY","_hasLabelOffsetY","_dyOffset","_titleLabelOffsetX","_fixedBarHeight","_rowCssClass","_titleRowCssClass","_renderTitleLabel","drawAxis","axisG","calculateAxisScale","isSelectedRow","rootValue","renderTitleLabel","titlelab","rowsCap","fixedBarHeight","labelOffsetX","labelOffsetY","labelOffsety","titleLabelOffsetX","_maxItems","_itemHeight","_horizontal","_legendWidth","_itemWidth","_autoItemWidth","_legendText","legendItemHeight","itemEnter","_cumulativeLegendTextWidth","itemWidth","itemHeight","horizontal","legendWidth","autoItemWidth","legendText","maxItems","htmlLegend","_container","_legendItemClass","_highlightSelected","_defaultLegendItemCssClass","_l","legendItemClassName","legendItemClass","scatterPlot","_symbol","_existenceAccessor","originalKeyAccessor","existenceAccessor","_locator","_highlightedSize","_symbolSize","_excludedSize","_excludedColor","_excludedOpacity","_emptySize","_emptyOpacity","_nonemptyOpacity","_emptyColor","_filtered","elementSize","renderTitles","resizeSymbolsWhere","condition","oldSize","__filter","excludedOpacity","excludedColor","customSymbol","symbolSize","highlightedSize","excludedSize","hiddenSize","emptySize","emptyColor","emptyOpacity","nonemptyOpacity","coord","ranged2DFilter","setBrushY","numberDisplay","_lastValue","SPAN_CLASS","valObj","sorted","maxBin","newValue","span","interpStart","interp","num","heatMap","_chartBody","_cols","_rows","_colOrdering","_rowOrdering","_colScale","_rowScale","_xBorderRadius","_yBorderRadius","_colsLabel","_rowsLabel","colsLabel","rowsLabel","_xAxisOnClick","filterAxis","_yAxisOnClick","_boxOnClick","cellsOnAxis","unfilteredCellsOnAxis","nonstandardFilter","rowOrdering","cols","colOrdering","rowCount","colCount","boxWidth","boxHeight","boxes","gEnter","boxOnClick","gCols","gColsText","xAxisOnClick","gRows","gRowsText","yAxisOnClick","handler","xBorderRadius","yBorderRadius","whiskers","quartiles","dataOpacity","dataWidthPortion","showOutliers","boldOutlier","quartileData","whiskerIndices","whiskerData","outlierIndices","pointIndices","__chart__","medianLine","whisker","outlierClass","outlierSize","outlierX","outlier","boxTick","whiskerTick","boxPlot","_whiskers","q3","iqr","_whiskersIqr","_box","_tickFormat","_renderDataPoints","_dataOpacity","_dataWidthPortion","_showOutliers","_boldOutlier","_yRangePadding","_boxWidth","innerChartWidth","boxPadding","boxTransform","minDataValue","maxDataValue","yAxisRangeRatio","_calculatedBoxWidth","boxesG","updateBoxes","boxesGEnter","renderBoxes","removeBoxes","yRangePadding","selectMenu","_select","OPTION_CSS_CLASS","_promptText","_multiple","_promptValue","_numberVisible","_filterDisplayed","ua","navigator","userAgent","selectedOptions","option","setAttributes","renderOptions","promptText","filterDisplayed","multiple","promptValue","numberVisible","textFilterWidget","_normalize","_filterFunctionFactory","query","_placeHolder","placeHolder","filterFunctionFactory","cboxMenu","_cbox","_inputType","_randVal","checked","li","abstractBubbleChart","baseChart","capped","colorChart","coordinateGridChart","marginable","stackableChart","_d3","_globals","doT","templateSettings","evaluate","encode","use","useParams","defineParams","conditional","iterate","varname","strip","selfcontained","doNotSkipEncoded","template","compile","encodeHTMLSource","encodeHTMLRules","&","<",">","\"","'","/","matchHTML","eval","startend","startencode","unescape","tmpl","def","needhtmlencode","indv","cse","sid","resolveDefs","block","param","arg","rw","__exp","elsecase","vname","iname","_encodeHTML"],"mappings":"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ltB,GACAn0E,EAAAshG,WAAAptB,GACAl0E,EAAAuhG,kBAAAltB,GACAr0E,EAAAwhG,aAAAptB,GACAp0E,EAAAyhG,kBAAAltB,GACAv0E,EAAA0hG,aAAAptB,GACAt0E,EAAA2hG,oBAAAltB,GACAz0E,EAAA4hG,eAAAptB,GACAx0E,EAAA6hG,gBAAAltB,GACA30E,EAAA8hG,WAAAptB,GACA10E,EAAA+hG,gBAAAltB,GACA70E,EAAAgiG,WAAAptB,GACA50E,EAAAiiG,gBAAAltB,GACA/0E,EAAAkiG,WAAAptB,GACA90E,EAAAmiG,gBAAAltB,GACAj1E,EAAAoiG,WAAAptB,GACAh1E,EAAAqiG,kBAAAltB,GACAn1E,EAAAsiG,aAAAptB,GACAl1E,EAAAuiG,gBAAAltB,GACAr1E,EAAAwiG,WAAAptB,GACAp1E,EAAAyiG,gBAAAltB,GACAv1E,EAAA0iG,WAAAptB,GACAt1E,EAAA2iG,gBAAAltB,GACAz1E,EAAA4iG,WAAAptB,GACAx1E,EAAA6iG,kBAAAltB,GACA31E,EAAA8iG,aAAAptB,GACA11E,EAAA+iG,gBAAAltB,GACA71E,EAAAgjG,WAAAptB,GACA51E,EAAAijG,kBAAAltB,GACA/1E,EAAAkjG,aAAAptB,GACA91E,EAAAmjG,kBAAAltB,GACAj2E,EAAAojG,aAAAptB,GACAh2E,EAAAqjG,iBAAAltB,GACAn2E,EAAAsjG,YAAAptB,GACAl2E,EAAAujG,kBAAAltB,GACAr2E,EAAAwjG,aAAAptB,GACAp2E,EAAAyjG,iBAAAltB,GACAv2E,EAAA0jG,YAAAptB,GACAt2E,EAAA2jG,mBAAAltB,GACAz2E,EAAA4jG,cAAAptB,GACAx2E,EAAA6jG,gBAAAltB,GACA32E,EAAA8jG,WAAAptB,GACA12E,EAAA+jG,mBAAAltB,GACA72E,EAAAgkG,cAAAptB,GACA52E,EAAAikG,4BAAAntB,GACA92E,EAAAkkG,mBAjpHA,SAAAvjG,IACAA,EAAA,GAAA,EAAAA,KAAAA,GAAA1O,KAAA6rB,MAAAnd,IACA,IAAAwjG,EAAAlyG,KAAAiL,IAAAyD,E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","file":"dcbundle.js","sourcesContent":["/*\n * File: iframeResizer.contentWindow.js\n * Desc: Include this file in any page being loaded into an iframe\n *       to force the iframe to resize to the content size.\n * Requires: iframeResizer.js on host page.\n * Doc: https://github.com/davidjbradshaw/iframe-resizer\n * Author: David J. Bradshaw - dave@bradshaw.net\n * Contributor: Jure Mav - jure.mav@gmail.com\n * Contributor: Ian Caunce - ian@hallnet.co.uk\n */\n\n(function(undefined) {\n  'use strict';\n\n  if (typeof window === 'undefined') return; // don't run for server side render\n\n  var autoResize = true,\n    base = 10,\n    bodyBackground = '',\n    bodyMargin = 0,\n    bodyMarginStr = '',\n    bodyObserver = null,\n    bodyPadding = '',\n    calculateWidth = false,\n    doubleEventList = { resize: 1, click: 1 },\n    eventCancelTimer = 128,\n    firstRun = true,\n    height = 1,\n    heightCalcModeDefault = 'bodyOffset',\n    heightCalcMode = heightCalcModeDefault,\n    initLock = true,\n    initMsg = '',\n    inPageLinks = {},\n    interval = 32,\n    intervalTimer = null,\n    logging = false,\n    msgID = '[iFrameSizer]', //Must match host page msg ID\n    msgIdLen = msgID.length,\n    myID = '',\n    observer = null,\n    resetRequiredMethods = {\n      max: 1,\n      min: 1,\n      bodyScroll: 1,\n      documentElementScroll: 1\n    },\n    resizeFrom = 'child',\n    sendPermit = true,\n    target = window.parent,\n    targetOriginDefault = '*',\n    tolerance = 0,\n    triggerLocked = false,\n    triggerLockedTimer = null,\n    throttledTimer = 16,\n    width = 1,\n    widthCalcModeDefault = 'scroll',\n    widthCalcMode = widthCalcModeDefault,\n    win = window,\n    messageCallback = function() {\n      warn('MessageCallback function not defined');\n    },\n    readyCallback = function() {},\n    pageInfoCallback = function() {},\n    customCalcMethods = {\n      height: function() {\n        warn('Custom height calculation function not defined');\n        return document.documentElement.offsetHeight;\n      },\n      width: function() {\n        warn('Custom width calculation function not defined');\n        return document.body.scrollWidth;\n      }\n    },\n    eventHandlersByName = {},\n    passiveSupported = false,\n    onceSupported = false;\n\n  function noop() {}\n\n  try {\n    var options = Object.create(\n      {},\n      {\n        passive: {\n          get: function() {\n            passiveSupported = true;\n          }\n        },\n        once: {\n          get: function() {\n            onceSupported = true;\n          }\n        }\n      }\n    );\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop, options);\n  } catch (e) {\n    /* */\n  }\n\n  function addEventListener(el, evt, func, options) {\n    /* istanbul ignore else */ // Not testable in phantomJS\n    if ('addEventListener' in window) {\n      el.addEventListener(evt, func, passiveSupported ? options || {} : false);\n    } else if ('attachEvent' in window) {\n      //IE\n      el.attachEvent('on' + evt, func);\n    }\n  }\n\n  function removeEventListener(el, evt, func) {\n    /* istanbul ignore else */ // Not testable in phantomJS\n    if ('removeEventListener' in window) {\n      el.removeEventListener(evt, func, false);\n    } else if ('detachEvent' in window) {\n      //IE\n      el.detachEvent('on' + evt, func);\n    }\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  //Based on underscore.js\n  function throttle(func) {\n    var context,\n      args,\n      result,\n      timeout = null,\n      previous = 0,\n      later = function() {\n        previous = getNow();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = args = null;\n        }\n      };\n\n    return function() {\n      var now = getNow();\n\n      if (!previous) {\n        previous = now;\n      }\n\n      var remaining = throttledTimer - (now - previous);\n\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > throttledTimer) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n\n        if (!timeout) {\n          context = args = null;\n        }\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  }\n\n  var getNow =\n    Date.now ||\n    function() {\n      /* istanbul ignore next */ // Not testable in PhantonJS\n      return new Date().getTime();\n    };\n\n  function formatLogMsg(msg) {\n    return msgID + '[' + myID + ']' + ' ' + msg;\n  }\n\n  function log(msg) {\n    if (logging && 'object' === typeof window.console) {\n      console.log(formatLogMsg(msg));\n    }\n  }\n\n  function warn(msg) {\n    if ('object' === typeof window.console) {\n      console.warn(formatLogMsg(msg));\n    }\n  }\n\n  function init() {\n    readDataFromParent();\n    log('Initialising iFrame (' + location.href + ')');\n    readDataFromPage();\n    setMargin();\n    setBodyStyle('background', bodyBackground);\n    setBodyStyle('padding', bodyPadding);\n    injectClearFixIntoBodyElement();\n    checkHeightMode();\n    checkWidthMode();\n    stopInfiniteResizingOfIFrame();\n    setupPublicMethods();\n    startEventListeners();\n    inPageLinks = setupInPageLinks();\n    sendSize('init', 'Init message from host page');\n    readyCallback();\n  }\n\n  function readDataFromParent() {\n    function strBool(str) {\n      return 'true' === str ? true : false;\n    }\n\n    var data = initMsg.substr(msgIdLen).split(':');\n\n    myID = data[0];\n    bodyMargin = undefined !== data[1] ? Number(data[1]) : bodyMargin; //For V1 compatibility\n    calculateWidth = undefined !== data[2] ? strBool(data[2]) : calculateWidth;\n    logging = undefined !== data[3] ? strBool(data[3]) : logging;\n    interval = undefined !== data[4] ? Number(data[4]) : interval;\n    autoResize = undefined !== data[6] ? strBool(data[6]) : autoResize;\n    bodyMarginStr = data[7];\n    heightCalcMode = undefined !== data[8] ? data[8] : heightCalcMode;\n    bodyBackground = data[9];\n    bodyPadding = data[10];\n    tolerance = undefined !== data[11] ? Number(data[11]) : tolerance;\n    inPageLinks.enable = undefined !== data[12] ? strBool(data[12]) : false;\n    resizeFrom = undefined !== data[13] ? data[13] : resizeFrom;\n    widthCalcMode = undefined !== data[14] ? data[14] : widthCalcMode;\n  }\n\n  function readDataFromPage() {\n    function readData() {\n      var data = window.iFrameResizer;\n\n      log('Reading data from page: ' + JSON.stringify(data));\n\n      messageCallback =\n        'messageCallback' in data ? data.messageCallback : messageCallback;\n      readyCallback =\n        'readyCallback' in data ? data.readyCallback : readyCallback;\n      targetOriginDefault =\n        'targetOrigin' in data ? data.targetOrigin : targetOriginDefault;\n      heightCalcMode =\n        'heightCalculationMethod' in data\n          ? data.heightCalculationMethod\n          : heightCalcMode;\n      widthCalcMode =\n        'widthCalculationMethod' in data\n          ? data.widthCalculationMethod\n          : widthCalcMode;\n    }\n\n    function setupCustomCalcMethods(calcMode, calcFunc) {\n      if ('function' === typeof calcMode) {\n        log('Setup custom ' + calcFunc + 'CalcMethod');\n        customCalcMethods[calcFunc] = calcMode;\n        calcMode = 'custom';\n      }\n\n      return calcMode;\n    }\n\n    if (\n      'iFrameResizer' in window &&\n      Object === window.iFrameResizer.constructor\n    ) {\n      readData();\n      heightCalcMode = setupCustomCalcMethods(heightCalcMode, 'height');\n      widthCalcMode = setupCustomCalcMethods(widthCalcMode, 'width');\n    }\n\n    log('TargetOrigin for parent set to: ' + targetOriginDefault);\n  }\n\n  function chkCSS(attr, value) {\n    if (-1 !== value.indexOf('-')) {\n      warn('Negative CSS value ignored for ' + attr);\n      value = '';\n    }\n    return value;\n  }\n\n  function setBodyStyle(attr, value) {\n    if (undefined !== value && '' !== value && 'null' !== value) {\n      document.body.style[attr] = value;\n      log('Body ' + attr + ' set to \"' + value + '\"');\n    }\n  }\n\n  function setMargin() {\n    //If called via V1 script, convert bodyMargin from int to str\n    if (undefined === bodyMarginStr) {\n      bodyMarginStr = bodyMargin + 'px';\n    }\n\n    setBodyStyle('margin', chkCSS('margin', bodyMarginStr));\n  }\n\n  function stopInfiniteResizingOfIFrame() {\n    document.documentElement.style.height = '';\n    document.body.style.height = '';\n    log('HTML & body height set to \"auto\"');\n  }\n\n  function manageTriggerEvent(options) {\n    var listener = {\n      add: function(eventName) {\n        function handleEvent() {\n          sendSize(options.eventName, options.eventType);\n        }\n\n        eventHandlersByName[eventName] = handleEvent;\n\n        addEventListener(window, eventName, handleEvent, { passive: true });\n      },\n      remove: function(eventName) {\n        var handleEvent = eventHandlersByName[eventName];\n        delete eventHandlersByName[eventName];\n\n        removeEventListener(window, eventName, handleEvent);\n      }\n    };\n\n    if (options.eventNames && Array.prototype.map) {\n      options.eventName = options.eventNames[0];\n      options.eventNames.map(listener[options.method]);\n    } else {\n      listener[options.method](options.eventName);\n    }\n\n    log(\n      capitalizeFirstLetter(options.method) +\n        ' event listener: ' +\n        options.eventType\n    );\n  }\n\n  function manageEventListeners(method) {\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Animation Start',\n      eventNames: ['animationstart', 'webkitAnimationStart']\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Animation Iteration',\n      eventNames: ['animationiteration', 'webkitAnimationIteration']\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Animation End',\n      eventNames: ['animationend', 'webkitAnimationEnd']\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Input',\n      eventName: 'input'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Mouse Up',\n      eventName: 'mouseup'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Mouse Down',\n      eventName: 'mousedown'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Orientation Change',\n      eventName: 'orientationchange'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Print',\n      eventName: ['afterprint', 'beforeprint']\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Ready State Change',\n      eventName: 'readystatechange'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Touch Start',\n      eventName: 'touchstart'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Touch End',\n      eventName: 'touchend'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Touch Cancel',\n      eventName: 'touchcancel'\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Transition Start',\n      eventNames: [\n        'transitionstart',\n        'webkitTransitionStart',\n        'MSTransitionStart',\n        'oTransitionStart',\n        'otransitionstart'\n      ]\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Transition Iteration',\n      eventNames: [\n        'transitioniteration',\n        'webkitTransitionIteration',\n        'MSTransitionIteration',\n        'oTransitionIteration',\n        'otransitioniteration'\n      ]\n    });\n    manageTriggerEvent({\n      method: method,\n      eventType: 'Transition End',\n      eventNames: [\n        'transitionend',\n        'webkitTransitionEnd',\n        'MSTransitionEnd',\n        'oTransitionEnd',\n        'otransitionend'\n      ]\n    });\n    if ('child' === resizeFrom) {\n      manageTriggerEvent({\n        method: method,\n        eventType: 'IFrame Resized',\n        eventName: 'resize'\n      });\n    }\n  }\n\n  function checkCalcMode(calcMode, calcModeDefault, modes, type) {\n    if (calcModeDefault !== calcMode) {\n      if (!(calcMode in modes)) {\n        warn(\n          calcMode + ' is not a valid option for ' + type + 'CalculationMethod.'\n        );\n        calcMode = calcModeDefault;\n      }\n      log(type + ' calculation method set to \"' + calcMode + '\"');\n    }\n\n    return calcMode;\n  }\n\n  function checkHeightMode() {\n    heightCalcMode = checkCalcMode(\n      heightCalcMode,\n      heightCalcModeDefault,\n      getHeight,\n      'height'\n    );\n  }\n\n  function checkWidthMode() {\n    widthCalcMode = checkCalcMode(\n      widthCalcMode,\n      widthCalcModeDefault,\n      getWidth,\n      'width'\n    );\n  }\n\n  function startEventListeners() {\n    if (true === autoResize) {\n      manageEventListeners('add');\n      setupMutationObserver();\n    } else {\n      log('Auto Resize disabled');\n    }\n  }\n\n  function stopMsgsToParent() {\n    log('Disable outgoing messages');\n    sendPermit = false;\n  }\n\n  function removeMsgListener() {\n    log('Remove event listener: Message');\n    removeEventListener(window, 'message', receiver);\n  }\n\n  function disconnectMutationObserver() {\n    if (null !== bodyObserver) {\n      /* istanbul ignore next */ // Not testable in PhantonJS\n      bodyObserver.disconnect();\n    }\n  }\n\n  function stopEventListeners() {\n    manageEventListeners('remove');\n    disconnectMutationObserver();\n    clearInterval(intervalTimer);\n  }\n\n  function teardown() {\n    stopMsgsToParent();\n    removeMsgListener();\n    if (true === autoResize) stopEventListeners();\n  }\n\n  function injectClearFixIntoBodyElement() {\n    var clearFix = document.createElement('div');\n    clearFix.style.clear = 'both';\n    clearFix.style.display = 'block'; //Guard against this having been globally redefined in CSS.\n    document.body.appendChild(clearFix);\n  }\n\n  function setupInPageLinks() {\n    function getPagePosition() {\n      return {\n        x:\n          window.pageXOffset !== undefined\n            ? window.pageXOffset\n            : document.documentElement.scrollLeft,\n        y:\n          window.pageYOffset !== undefined\n            ? window.pageYOffset\n            : document.documentElement.scrollTop\n      };\n    }\n\n    function getElementPosition(el) {\n      var elPosition = el.getBoundingClientRect(),\n        pagePosition = getPagePosition();\n\n      return {\n        x: parseInt(elPosition.left, 10) + parseInt(pagePosition.x, 10),\n        y: parseInt(elPosition.top, 10) + parseInt(pagePosition.y, 10)\n      };\n    }\n\n    function findTarget(location) {\n      function jumpToTarget(target) {\n        var jumpPosition = getElementPosition(target);\n\n        log(\n          'Moving to in page link (#' +\n            hash +\n            ') at x: ' +\n            jumpPosition.x +\n            ' y: ' +\n            jumpPosition.y\n        );\n        sendMsg(jumpPosition.y, jumpPosition.x, 'scrollToOffset'); // X&Y reversed at sendMsg uses height/width\n      }\n\n      var hash = location.split('#')[1] || location, //Remove # if present\n        hashData = decodeURIComponent(hash),\n        target =\n          document.getElementById(hashData) ||\n          document.getElementsByName(hashData)[0];\n\n      if (undefined !== target) {\n        jumpToTarget(target);\n      } else {\n        log(\n          'In page link (#' +\n            hash +\n            ') not found in iFrame, so sending to parent'\n        );\n        sendMsg(0, 0, 'inPageLink', '#' + hash);\n      }\n    }\n\n    function checkLocationHash() {\n      if ('' !== location.hash && '#' !== location.hash) {\n        findTarget(location.href);\n      }\n    }\n\n    function bindAnchors() {\n      function setupLink(el) {\n        function linkClicked(e) {\n          e.preventDefault();\n\n          /*jshint validthis:true */\n          findTarget(this.getAttribute('href'));\n        }\n\n        if ('#' !== el.getAttribute('href')) {\n          addEventListener(el, 'click', linkClicked);\n        }\n      }\n\n      Array.prototype.forEach.call(\n        document.querySelectorAll('a[href^=\"#\"]'),\n        setupLink\n      );\n    }\n\n    function bindLocationHash() {\n      addEventListener(window, 'hashchange', checkLocationHash);\n    }\n\n    function initCheck() {\n      //check if page loaded with location hash after init resize\n      setTimeout(checkLocationHash, eventCancelTimer);\n    }\n\n    function enableInPageLinks() {\n      /* istanbul ignore else */ // Not testable in phantonJS\n      if (Array.prototype.forEach && document.querySelectorAll) {\n        log('Setting up location.hash handlers');\n        bindAnchors();\n        bindLocationHash();\n        initCheck();\n      } else {\n        warn(\n          'In page linking not fully supported in this browser! (See README.md for IE8 workaround)'\n        );\n      }\n    }\n\n    if (inPageLinks.enable) {\n      enableInPageLinks();\n    } else {\n      log('In page linking not enabled');\n    }\n\n    return {\n      findTarget: findTarget\n    };\n  }\n\n  function setupPublicMethods() {\n    log('Enable public methods');\n\n    win.parentIFrame = {\n      autoResize: function autoResizeF(resize) {\n        if (true === resize && false === autoResize) {\n          autoResize = true;\n          startEventListeners();\n          //sendSize('autoResize','Auto Resize enabled');\n        } else if (false === resize && true === autoResize) {\n          autoResize = false;\n          stopEventListeners();\n        }\n\n        return autoResize;\n      },\n\n      close: function closeF() {\n        sendMsg(0, 0, 'close');\n        teardown();\n      },\n\n      getId: function getIdF() {\n        return myID;\n      },\n\n      getPageInfo: function getPageInfoF(callback) {\n        if ('function' === typeof callback) {\n          pageInfoCallback = callback;\n          sendMsg(0, 0, 'pageInfo');\n        } else {\n          pageInfoCallback = function() {};\n          sendMsg(0, 0, 'pageInfoStop');\n        }\n      },\n\n      moveToAnchor: function moveToAnchorF(hash) {\n        inPageLinks.findTarget(hash);\n      },\n\n      reset: function resetF() {\n        resetIFrame('parentIFrame.reset');\n      },\n\n      scrollTo: function scrollToF(x, y) {\n        sendMsg(y, x, 'scrollTo'); // X&Y reversed at sendMsg uses height/width\n      },\n\n      scrollToOffset: function scrollToF(x, y) {\n        sendMsg(y, x, 'scrollToOffset'); // X&Y reversed at sendMsg uses height/width\n      },\n\n      sendMessage: function sendMessageF(msg, targetOrigin) {\n        sendMsg(0, 0, 'message', JSON.stringify(msg), targetOrigin);\n      },\n\n      setHeightCalculationMethod: function setHeightCalculationMethodF(\n        heightCalculationMethod\n      ) {\n        heightCalcMode = heightCalculationMethod;\n        checkHeightMode();\n      },\n\n      setWidthCalculationMethod: function setWidthCalculationMethodF(\n        widthCalculationMethod\n      ) {\n        widthCalcMode = widthCalculationMethod;\n        checkWidthMode();\n      },\n\n      setTargetOrigin: function setTargetOriginF(targetOrigin) {\n        log('Set targetOrigin: ' + targetOrigin);\n        targetOriginDefault = targetOrigin;\n      },\n\n      size: function sizeF(customHeight, customWidth) {\n        var valString =\n          '' +\n          (customHeight ? customHeight : '') +\n          (customWidth ? ',' + customWidth : '');\n        //lockTrigger();\n        sendSize(\n          'size',\n          'parentIFrame.size(' + valString + ')',\n          customHeight,\n          customWidth\n        );\n      }\n    };\n  }\n\n  function initInterval() {\n    if (0 !== interval) {\n      log('setInterval: ' + interval + 'ms');\n      intervalTimer = setInterval(function() {\n        sendSize('interval', 'setInterval: ' + interval);\n      }, Math.abs(interval));\n    }\n  } //Not testable in PhantomJS\n\n  /* istanbul ignore next */ function setupBodyMutationObserver() {\n    function addImageLoadListners(mutation) {\n      function addImageLoadListener(element) {\n        if (false === element.complete) {\n          log('Attach listeners to ' + element.src);\n          element.addEventListener('load', imageLoaded, false);\n          element.addEventListener('error', imageError, false);\n          elements.push(element);\n        }\n      }\n\n      if (mutation.type === 'attributes' && mutation.attributeName === 'src') {\n        addImageLoadListener(mutation.target);\n      } else if (mutation.type === 'childList') {\n        Array.prototype.forEach.call(\n          mutation.target.querySelectorAll('img'),\n          addImageLoadListener\n        );\n      }\n    }\n\n    function removeFromArray(element) {\n      elements.splice(elements.indexOf(element), 1);\n    }\n\n    function removeImageLoadListener(element) {\n      log('Remove listeners from ' + element.src);\n      element.removeEventListener('load', imageLoaded, false);\n      element.removeEventListener('error', imageError, false);\n      removeFromArray(element);\n    }\n\n    function imageEventTriggered(event, type, typeDesc) {\n      removeImageLoadListener(event.target);\n      sendSize(type, typeDesc + ': ' + event.target.src, undefined, undefined);\n    }\n\n    function imageLoaded(event) {\n      imageEventTriggered(event, 'imageLoad', 'Image loaded');\n    }\n\n    function imageError(event) {\n      imageEventTriggered(event, 'imageLoadFailed', 'Image load failed');\n    }\n\n    function mutationObserved(mutations) {\n      sendSize(\n        'mutationObserver',\n        'mutationObserver: ' + mutations[0].target + ' ' + mutations[0].type\n      );\n\n      //Deal with WebKit asyncing image loading when tags are injected into the page\n      mutations.forEach(addImageLoadListners);\n    }\n\n    function createMutationObserver() {\n      var target = document.querySelector('body'),\n        config = {\n          attributes: true,\n          attributeOldValue: false,\n          characterData: true,\n          characterDataOldValue: false,\n          childList: true,\n          subtree: true\n        };\n\n      observer = new MutationObserver(mutationObserved);\n\n      log('Create body MutationObserver');\n      observer.observe(target, config);\n\n      return observer;\n    }\n\n    var elements = [],\n      MutationObserver =\n        window.MutationObserver || window.WebKitMutationObserver,\n      observer = createMutationObserver();\n\n    return {\n      disconnect: function() {\n        if ('disconnect' in observer) {\n          log('Disconnect body MutationObserver');\n          observer.disconnect();\n          elements.forEach(removeImageLoadListener);\n        }\n      }\n    };\n  }\n\n  function setupMutationObserver() {\n    var forceIntervalTimer = 0 > interval; // Not testable in PhantomJS\n\n    /* istanbul ignore if */ if (\n      window.MutationObserver ||\n      window.WebKitMutationObserver\n    ) {\n      if (forceIntervalTimer) {\n        initInterval();\n      } else {\n        bodyObserver = setupBodyMutationObserver();\n      }\n    } else {\n      log('MutationObserver not supported in this browser!');\n      initInterval();\n    }\n  }\n\n  // document.documentElement.offsetHeight is not reliable, so\n  // we have to jump through hoops to get a better value.\n  function getComputedStyle(prop, el) {\n    /* istanbul ignore next */ //Not testable in PhantomJS\n    function convertUnitsToPxForIE8(value) {\n      var PIXEL = /^\\d+(px)?$/i;\n\n      if (PIXEL.test(value)) {\n        return parseInt(value, base);\n      }\n\n      var style = el.style.left,\n        runtimeStyle = el.runtimeStyle.left;\n\n      el.runtimeStyle.left = el.currentStyle.left;\n      el.style.left = value || 0;\n      value = el.style.pixelLeft;\n      el.style.left = style;\n      el.runtimeStyle.left = runtimeStyle;\n\n      return value;\n    }\n\n    var retVal = 0;\n    el = el || document.body; // Not testable in phantonJS\n\n    /* istanbul ignore else */ if (\n      'defaultView' in document &&\n      'getComputedStyle' in document.defaultView\n    ) {\n      retVal = document.defaultView.getComputedStyle(el, null);\n      retVal = null !== retVal ? retVal[prop] : 0;\n    } else {\n      //IE8\n      retVal = convertUnitsToPxForIE8(el.currentStyle[prop]);\n    }\n\n    return parseInt(retVal, base);\n  }\n\n  function chkEventThottle(timer) {\n    if (timer > throttledTimer / 2) {\n      throttledTimer = 2 * timer;\n      log('Event throttle increased to ' + throttledTimer + 'ms');\n    }\n  }\n\n  //Idea from https://github.com/guardian/iframe-messenger\n  function getMaxElement(side, elements) {\n    var elementsLength = elements.length,\n      elVal = 0,\n      maxVal = 0,\n      Side = capitalizeFirstLetter(side),\n      timer = getNow();\n\n    for (var i = 0; i < elementsLength; i++) {\n      elVal =\n        elements[i].getBoundingClientRect()[side] +\n        getComputedStyle('margin' + Side, elements[i]);\n      if (elVal > maxVal) {\n        maxVal = elVal;\n      }\n    }\n\n    timer = getNow() - timer;\n\n    log('Parsed ' + elementsLength + ' HTML elements');\n    log('Element position calculated in ' + timer + 'ms');\n\n    chkEventThottle(timer);\n\n    return maxVal;\n  }\n\n  function getAllMeasurements(dimention) {\n    return [\n      dimention.bodyOffset(),\n      dimention.bodyScroll(),\n      dimention.documentElementOffset(),\n      dimention.documentElementScroll()\n    ];\n  }\n\n  function getTaggedElements(side, tag) {\n    function noTaggedElementsFound() {\n      warn('No tagged elements (' + tag + ') found on page');\n      return document.querySelectorAll('body *');\n    }\n\n    var elements = document.querySelectorAll('[' + tag + ']');\n\n    if (0 === elements.length) noTaggedElementsFound();\n\n    return getMaxElement(side, elements);\n  }\n\n  function getAllElements() {\n    return document.querySelectorAll('body *');\n  }\n\n  var getHeight = {\n      bodyOffset: function getBodyOffsetHeight() {\n        return (\n          document.body.offsetHeight +\n          getComputedStyle('marginTop') +\n          getComputedStyle('marginBottom')\n        );\n      },\n\n      offset: function() {\n        return getHeight.bodyOffset(); //Backwards compatability\n      },\n\n      bodyScroll: function getBodyScrollHeight() {\n        return document.body.scrollHeight;\n      },\n\n      custom: function getCustomWidth() {\n        return customCalcMethods.height();\n      },\n\n      documentElementOffset: function getDEOffsetHeight() {\n        return document.documentElement.offsetHeight;\n      },\n\n      documentElementScroll: function getDEScrollHeight() {\n        return document.documentElement.scrollHeight;\n      },\n\n      max: function getMaxHeight() {\n        return Math.max.apply(null, getAllMeasurements(getHeight));\n      },\n\n      min: function getMinHeight() {\n        return Math.min.apply(null, getAllMeasurements(getHeight));\n      },\n\n      grow: function growHeight() {\n        return getHeight.max(); //Run max without the forced downsizing\n      },\n\n      lowestElement: function getBestHeight() {\n        return Math.max(\n          getHeight.bodyOffset() || getHeight.documentElementOffset(),\n          getMaxElement('bottom', getAllElements())\n        );\n      },\n\n      taggedElement: function getTaggedElementsHeight() {\n        return getTaggedElements('bottom', 'data-iframe-height');\n      }\n    },\n    getWidth = {\n      bodyScroll: function getBodyScrollWidth() {\n        return document.body.scrollWidth;\n      },\n\n      bodyOffset: function getBodyOffsetWidth() {\n        return document.body.offsetWidth;\n      },\n\n      custom: function getCustomWidth() {\n        return customCalcMethods.width();\n      },\n\n      documentElementScroll: function getDEScrollWidth() {\n        return document.documentElement.scrollWidth;\n      },\n\n      documentElementOffset: function getDEOffsetWidth() {\n        return document.documentElement.offsetWidth;\n      },\n\n      scroll: function getMaxWidth() {\n        return Math.max(\n          getWidth.bodyScroll(),\n          getWidth.documentElementScroll()\n        );\n      },\n\n      max: function getMaxWidth() {\n        return Math.max.apply(null, getAllMeasurements(getWidth));\n      },\n\n      min: function getMinWidth() {\n        return Math.min.apply(null, getAllMeasurements(getWidth));\n      },\n\n      rightMostElement: function rightMostElement() {\n        return getMaxElement('right', getAllElements());\n      },\n\n      taggedElement: function getTaggedElementsWidth() {\n        return getTaggedElements('right', 'data-iframe-width');\n      }\n    };\n\n  function sizeIFrame(\n    triggerEvent,\n    triggerEventDesc,\n    customHeight,\n    customWidth\n  ) {\n    function resizeIFrame() {\n      height = currentHeight;\n      width = currentWidth;\n\n      sendMsg(height, width, triggerEvent);\n    }\n\n    function isSizeChangeDetected() {\n      function checkTolarance(a, b) {\n        var retVal = Math.abs(a - b) <= tolerance;\n        return !retVal;\n      }\n\n      currentHeight =\n        undefined !== customHeight ? customHeight : getHeight[heightCalcMode]();\n      currentWidth =\n        undefined !== customWidth ? customWidth : getWidth[widthCalcMode]();\n\n      return (\n        checkTolarance(height, currentHeight) ||\n        (calculateWidth && checkTolarance(width, currentWidth))\n      );\n    }\n\n    function isForceResizableEvent() {\n      return !(triggerEvent in { init: 1, interval: 1, size: 1 });\n    }\n\n    function isForceResizableCalcMode() {\n      return (\n        heightCalcMode in resetRequiredMethods ||\n        (calculateWidth && widthCalcMode in resetRequiredMethods)\n      );\n    }\n\n    function logIgnored() {\n      log('No change in size detected');\n    }\n\n    function checkDownSizing() {\n      if (isForceResizableEvent() && isForceResizableCalcMode()) {\n        resetIFrame(triggerEventDesc);\n      } else if (!(triggerEvent in { interval: 1 })) {\n        logIgnored();\n      }\n    }\n\n    var currentHeight, currentWidth;\n\n    if (isSizeChangeDetected() || 'init' === triggerEvent) {\n      lockTrigger();\n      resizeIFrame();\n    } else {\n      checkDownSizing();\n    }\n  }\n\n  var sizeIFrameThrottled = throttle(sizeIFrame);\n\n  function sendSize(triggerEvent, triggerEventDesc, customHeight, customWidth) {\n    function recordTrigger() {\n      if (!(triggerEvent in { reset: 1, resetPage: 1, init: 1 })) {\n        log('Trigger event: ' + triggerEventDesc);\n      }\n    }\n\n    function isDoubleFiredEvent() {\n      return triggerLocked && triggerEvent in doubleEventList;\n    }\n\n    if (!isDoubleFiredEvent()) {\n      recordTrigger();\n      if (triggerEvent === 'init') {\n        sizeIFrame(triggerEvent, triggerEventDesc, customHeight, customWidth);\n      } else {\n        sizeIFrameThrottled(\n          triggerEvent,\n          triggerEventDesc,\n          customHeight,\n          customWidth\n        );\n      }\n    } else {\n      log('Trigger event cancelled: ' + triggerEvent);\n    }\n  }\n\n  function lockTrigger() {\n    if (!triggerLocked) {\n      triggerLocked = true;\n      log('Trigger event lock on');\n    }\n    clearTimeout(triggerLockedTimer);\n    triggerLockedTimer = setTimeout(function() {\n      triggerLocked = false;\n      log('Trigger event lock off');\n      log('--');\n    }, eventCancelTimer);\n  }\n\n  function triggerReset(triggerEvent) {\n    height = getHeight[heightCalcMode]();\n    width = getWidth[widthCalcMode]();\n\n    sendMsg(height, width, triggerEvent);\n  }\n\n  function resetIFrame(triggerEventDesc) {\n    var hcm = heightCalcMode;\n    heightCalcMode = heightCalcModeDefault;\n\n    log('Reset trigger event: ' + triggerEventDesc);\n    lockTrigger();\n    triggerReset('reset');\n\n    heightCalcMode = hcm;\n  }\n\n  function sendMsg(height, width, triggerEvent, msg, targetOrigin) {\n    function setTargetOrigin() {\n      if (undefined === targetOrigin) {\n        targetOrigin = targetOriginDefault;\n      } else {\n        log('Message targetOrigin: ' + targetOrigin);\n      }\n    }\n\n    function sendToParent() {\n      var size = height + ':' + width,\n        message =\n          myID +\n          ':' +\n          size +\n          ':' +\n          triggerEvent +\n          (undefined !== msg ? ':' + msg : '');\n\n      log('Sending message to host page (' + message + ')');\n      target.postMessage(msgID + message, targetOrigin);\n    }\n\n    if (true === sendPermit) {\n      setTargetOrigin();\n      sendToParent();\n    }\n  }\n\n  function receiver(event) {\n    var processRequestFromParent = {\n      init: function initFromParent() {\n        initMsg = event.data;\n        target = event.source;\n\n        init();\n        firstRun = false;\n        setTimeout(function() {\n          initLock = false;\n        }, eventCancelTimer);\n      },\n\n      reset: function resetFromParent() {\n        if (!initLock) {\n          log('Page size reset by host page');\n          triggerReset('resetPage');\n        } else {\n          log('Page reset ignored by init');\n        }\n      },\n\n      resize: function resizeFromParent() {\n        sendSize('resizeParent', 'Parent window requested size check');\n      },\n\n      moveToAnchor: function moveToAnchorF() {\n        inPageLinks.findTarget(getData());\n      },\n      inPageLink: function inPageLinkF() {\n        this.moveToAnchor();\n      }, //Backward compatability\n\n      pageInfo: function pageInfoFromParent() {\n        var msgBody = getData();\n        log('PageInfoFromParent called from parent: ' + msgBody);\n        pageInfoCallback(JSON.parse(msgBody));\n        log(' --');\n      },\n\n      message: function messageFromParent() {\n        var msgBody = getData();\n\n        log('MessageCallback called from parent: ' + msgBody);\n        messageCallback(JSON.parse(msgBody));\n        log(' --');\n      }\n    };\n\n    function isMessageForUs() {\n      return msgID === ('' + event.data).substr(0, msgIdLen); //''+ Protects against non-string messages\n    }\n\n    function getMessageType() {\n      return event.data.split(']')[1].split(':')[0];\n    }\n\n    function getData() {\n      return event.data.substr(event.data.indexOf(':') + 1);\n    }\n\n    function isMiddleTier() {\n      return (\n        (!(typeof module !== 'undefined' && module.exports) &&\n          'iFrameResize' in window) ||\n        ('jQuery' in window && 'iFrameResize' in window.jQuery.prototype)\n      );\n    }\n\n    function isInitMsg() {\n      //Test if this message is from a child below us. This is an ugly test, however, updating\n      //the message format would break backwards compatibity.\n      return event.data.split(':')[2] in { true: 1, false: 1 };\n    }\n\n    function callFromParent() {\n      var messageType = getMessageType();\n\n      if (messageType in processRequestFromParent) {\n        processRequestFromParent[messageType]();\n      } else if (!isMiddleTier() && !isInitMsg()) {\n        warn('Unexpected message (' + event.data + ')');\n      }\n    }\n\n    function processMessage() {\n      if (false === firstRun) {\n        callFromParent();\n      } else if (isInitMsg()) {\n        processRequestFromParent.init();\n      } else {\n        log(\n          'Ignored message of type \"' +\n            getMessageType() +\n            '\". Received before initialization.'\n        );\n      }\n    }\n\n    if (isMessageForUs()) {\n      processMessage();\n    }\n  }\n\n  //Normally the parent kicks things off when it detects the iFrame has loaded.\n  //If this script is async-loaded, then tell parent page to retry init.\n  function chkLateLoaded() {\n    if ('loading' !== document.readyState) {\n      window.parent.postMessage('[iFrameResizerChild]Ready', '*');\n    }\n  }\n\n  addEventListener(window, 'message', receiver);\n  addEventListener(window, 'readystatechange', chkLateLoaded);\n  chkLateLoaded();\n\n  \n})();\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.crossfilter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nmodule.exports = require(\"./src/crossfilter\").crossfilter;\n\n},{\"./src/crossfilter\":6}],2:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    object = undefined;\n    length = 1;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nmodule.exports = result;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(require,module,exports){\nmodule.exports={\"version\":\"1.4.7\"}\n},{}],4:[function(require,module,exports){\nif (typeof Uint8Array !== \"undefined\") {\n  var crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  var crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  var crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  var crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  var crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\n\n// An arbitrarily-wide array of bitmasks\nfunction crossfilter_bitarray(n) {\n  this.length = n;\n  this.subarrays = 1;\n  this.width = 8;\n  this.masks = {\n    0: 0\n  }\n\n  this[0] = crossfilter_array8(n);\n}\n\ncrossfilter_bitarray.prototype.lengthen = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i] = crossfilter_arrayLengthen(this[i], n);\n  }\n  this.length = n;\n};\n\n// Reserve a new bit index in the array, returns {offset, one}\ncrossfilter_bitarray.prototype.add = function() {\n  var m, w, one, i, len;\n\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    m = this.masks[i];\n    w = this.width - (32 * i);\n    one = ~m & -~m;\n\n    if (w >= 32 && !one) {\n      continue;\n    }\n\n    if (w < 32 && (one & (1 << w))) {\n      // widen this subarray\n      this[i] = crossfilter_arrayWiden(this[i], w <<= 1);\n      this.width = 32 * i + w;\n    }\n\n    this.masks[i] |= one;\n\n    return {\n      offset: i,\n      one: one\n    };\n  }\n\n  // add a new subarray\n  this[this.subarrays] = crossfilter_array8(this.length);\n  this.masks[this.subarrays] = 1;\n  this.width += 8;\n  return {\n    offset: this.subarrays++,\n    one: 1\n  };\n};\n\n// Copy record from index src to index dest\ncrossfilter_bitarray.prototype.copy = function(dest, src) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i][dest] = this[i][src];\n  }\n};\n\n// Truncate the array to the given length\ncrossfilter_bitarray.prototype.truncate = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    for (var j = this.length - 1; j >= n; j--) {\n      this[i][j] = 0;\n    }\n    this[i].length = n;\n  }\n  this.length = n;\n};\n\n// Checks that all bits for the given index are 0\ncrossfilter_bitarray.prototype.zero = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given index are 0 except for possibly one\ncrossfilter_bitarray.prototype.zeroExcept = function(n, offset, zero) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (i === offset ? this[i][n] & zero : this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given indez are 0 except for the specified mask.\n// The mask should be an array of the same size as the filter subarrays width.\ncrossfilter_bitarray.prototype.zeroExceptMask = function(n, mask) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] & mask[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks that only the specified bit is set for the given index\ncrossfilter_bitarray.prototype.only = function(n, offset, one) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] != (i === offset ? one : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that only the specified bit is set for the given index except for possibly one other\ncrossfilter_bitarray.prototype.onlyExcept = function(n, offset, zero, onlyOffset, onlyOne) {\n  var mask;\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    mask = this[i][n];\n    if (i === offset)\n      mask &= zero;\n    if (mask != (i === onlyOffset ? onlyOne : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = {\n  array8: crossfilter_arrayUntyped,\n  array16: crossfilter_arrayUntyped,\n  array32: crossfilter_arrayUntyped,\n  arrayLengthen: crossfilter_arrayLengthenUntyped,\n  arrayWiden: crossfilter_arrayWidenUntyped,\n  bitarray: crossfilter_bitarray\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\n\nmodule.exports = bisect_by(crossfilter_identity);\nmodule.exports.by = bisect_by; // assign the raw function to the export as well\n\n},{\"./identity\":10}],6:[function(require,module,exports){\n'use strict';\n\nvar xfilterArray = require('./array');\nvar xfilterFilter = require('./filter');\nvar crossfilter_identity = require('./identity');\nvar crossfilter_null = require('./null');\nvar crossfilter_zero = require('./zero');\nvar xfilterHeapselect = require('./heapselect');\nvar xfilterHeap = require('./heap');\nvar bisect = require('./bisect');\nvar insertionsort = require('./insertionsort');\nvar permute = require('./permute');\nvar quicksort = require('./quicksort');\nvar xfilterReduce = require('./reduce');\nvar packageJson = require('./../package.json'); // require own package.json for the version field\nvar result = require('lodash.result');\n\n// constants\nvar REMOVED_INDEX = -1;\n\n// expose API exports\nexports.crossfilter = crossfilter;\nexports.crossfilter.heap = xfilterHeap;\nexports.crossfilter.heapselect = xfilterHeapselect;\nexports.crossfilter.bisect = bisect;\nexports.crossfilter.insertionsort = insertionsort;\nexports.crossfilter.permute = permute;\nexports.crossfilter.quicksort = quicksort;\nexports.crossfilter.version = packageJson.version; // please note use of \"package-json-versionify\" transform\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size,\n    all: all,\n    allFiltered: allFiltered,\n    onChange: onChange,\n    isElementFiltered: isElementFiltered\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      filters, // 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = [], // when data is removed\n      callbacks = [];\n\n  filters = new xfilterArray.bitarray(0);\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters.lengthen(n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n      triggerOnChange('dataAdded');\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters, or if a predicate function is passed,\n  // removes all records matching the predicate (ignoring filters).\n  function removeData(predicate) {\n    var // Mapping from old record indexes to new indexes (after records removed)\n        newIndex = crossfilter_index(n, n),\n        removed = [],\n        usePred = typeof predicate === 'function',\n        shouldRemove = function (i) {\n          return usePred ? predicate(data[i], i) : filters.zero(i)\n        };\n\n    for (var index1 = 0, index2 = 0; index1 < n; ++index1) {\n      if ( shouldRemove(index1) ) {\n        removed.push(index1);\n        newIndex[index1] = REMOVED_INDEX;\n      } else {\n        newIndex[index1] = index2++;\n      }\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(-1, -1, [], removed, true); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var index3 = 0, index4 = 0; index3 < n; ++index3) {\n      if ( newIndex[index3] !== REMOVED_INDEX ) {\n        if (index3 !== index4) filters.copy(index4, index3), data[index4] = data[index3];\n        ++index4;\n      }\n    }\n\n    data.length = n = index4;\n    filters.truncate(index4);\n    triggerOnChange('dataRemoved');\n  }\n\n  function maskForDimensions(dimensions) {\n    var n,\n        d,\n        len,\n        id,\n        mask = Array(filters.subarrays);\n    for (n = 0; n < filters.subarrays; n++) { mask[n] = ~0; }\n    for (d = 0, len = dimensions.length; d < len; d++) {\n      // The top bits of the ID are the subarray offset and the lower bits are the bit\n      // offset of the \"one\" mask.\n      id = dimensions[d].id();\n      mask[id >> 7] &= ~(0x1 << (id & 0x3f));\n    }\n    return mask;\n  }\n\n  // Return true if the data element at index i is filtered IN.\n  // Optionally, ignore the filters of any dimensions in the ignore_dimensions list.\n  function isElementFiltered(i, ignore_dimensions) {\n    var mask = maskForDimensions(ignore_dimensions || []);\n    return filters.zeroExceptMask(i,mask);\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value, iterable) {\n\n    if (typeof value === 'string') {\n      var accessorPath = value;\n      value = function(d) { return result(d, accessorPath); };\n    }\n\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      currentFilter: currentFilter,\n      hasCurrentFilter: hasCurrentFilter,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose, // for backwards-compatibility\n      accessor: value,\n      id: function() { return id; }\n    };\n\n    var one, // lowest unset bit as mask, e.g., 00001000\n        zero, // inverted one, e.g., 11110111\n        offset, // offset into the filters arrays\n        id, // unique ID for this dimension (reused when dimensions are disposed)\n        values, // sorted, cached array\n        index, // maps sorted value index -> record index (in data)\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        iterablesIndexCount,\n        newIterablesIndexCount,\n        iterablesIndexFilterStatus,\n        newIterablesIndexFilterStatus,\n        iterablesEmptyRows = [],\n        sort = quicksort.by(function(i) { return newValues[i]; }),\n        refilter = xfilterFilter.filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        filterValue, // the value used for filtering (value, array, function or undefined)\n        filterValuePresent, // true if filterValue contains something\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0,\n        t = 0,\n        k;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Add a new dimension in the filter bitmap and store the offset and bitmask.\n    var tmp = filters.add();\n    offset = tmp.offset;\n    one = tmp.one;\n    zero = ~one;\n\n    // Create a unique ID for the dimension\n    // IDs will be re-used if dimensions are disposed.\n    // For internal use the ID is the subarray offset shifted left 7 bits or'd with the\n    // bit offset of the set bit in the dimension's \"one\" mask.\n    id = (offset << 7) | (Math.log(one) / Math.log(2));\n\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      if (iterable){\n        // Count all the values\n        t = 0;\n        j = 0;\n        k = [];\n\n        for (var i0 = 0; i0 < newData.length; i0++) {\n          for(j = 0, k = value(newData[i0]); j < k.length; j++) {\n            t++;\n          }\n        }\n\n        newValues = [];\n        newIterablesIndexCount = crossfilter_range(newData.length);\n        newIterablesIndexFilterStatus = crossfilter_index(t,1);\n        var unsortedIndex = crossfilter_range(t);\n\n        for (var l = 0, index1 = 0; index1 < newData.length; index1++) {\n          k = value(newData[index1])\n          //\n          if(!k.length){\n            newIterablesIndexCount[index1] = 0;\n            iterablesEmptyRows.push(index1 + n0);\n            continue;\n          }\n          newIterablesIndexCount[index1] = k.length\n          for (j = 0; j < k.length; j++) {\n            newValues.push(k[j]);\n            unsortedIndex[l] = index1;\n            l++;\n          }\n        }\n\n        // Create the Sort map used to sort both the values and the valueToData indices\n        var sortMap = sort(crossfilter_range(t), 0, t);\n\n        // Use the sortMap to sort the newValues\n        newValues = permute(newValues, sortMap);\n\n\n        // Use the sortMap to sort the unsortedIndex map\n        // newIndex should be a map of sortedValue -> crossfilterData\n        newIndex = permute(unsortedIndex, sortMap)\n\n      } else{\n        // Permute new values into natural order using a standard sorted index.\n        newValues = newData.map(value);\n        newIndex = sort(crossfilter_range(n1), 0, n1);\n        newValues = permute(newValues, newIndex);\n      }\n\n      if(iterable) {\n        n1 = t;\n      }\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1];\n      if (refilterFunction) {\n        for (var index2 = 0; index2 < n1; ++index2) {\n          if (!refilterFunction(newValues[index2], index2)) {\n            filters[offset][newIndex[index2] + n0] |= one;\n            if(iterable) newIterablesIndexFilterStatus[index2] = 1;\n          }\n        }\n      } else {\n        for (var index3 = 0; index3 < lo1; ++index3) {\n          filters[offset][newIndex[index3] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index3] = 1;\n        }\n        for (var index4 = hi1; index4 < n1; ++index4) {\n          filters[offset][newIndex[index4] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index4] = 1;\n        }\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        iterablesIndexCount = newIterablesIndexCount;\n        iterablesIndexFilterStatus = newIterablesIndexFilterStatus;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n\n\n      var oldValues = values,\n        oldIndex = index,\n        oldIterablesIndexFilterStatus = iterablesIndexFilterStatus,\n        old_n0,\n        i1 = 0;\n\n      i0 = 0;\n\n      if(iterable){\n        old_n0 = n0\n        n0 = oldValues.length;\n        n1 = t\n      }\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = iterable ? new Array(n0 + n1) : new Array(n);\n      index = iterable ? new Array(n0 + n1) : crossfilter_index(n, n);\n      if(iterable) iterablesIndexFilterStatus = crossfilter_index(n0 + n1, 1);\n\n      // Concatenate the newIterablesIndexCount onto the old one.\n      if(iterable) {\n        var oldiiclength = iterablesIndexCount.length;\n        iterablesIndexCount = xfilterArray.arrayLengthen(iterablesIndexCount, n);\n        for(var j=0; j+oldiiclength < n; j++) {\n          iterablesIndexCount[j+oldiiclength] = newIterablesIndexCount[j];\n        }\n      }\n\n      // Merge the old and new sorted values, and old and new index.\n      var index5 = 0;\n      for (; i0 < n0 && i1 < n1; ++index5) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[index5] = oldValues[i0];\n          if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n          index[index5] = oldIndex[i0++];\n        } else {\n          values[index5] = newValues[i1];\n          if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n          index[index5] = newIndex[i1++] + (iterable ? old_n0 : n0);\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++index5) {\n        values[index5] = oldValues[i0];\n        if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n        index[index5] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++index5) {\n        values[index5] = newValues[i1];\n        if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n        index[index5] = newIndex[i1] + (iterable ? old_n0 : n0);\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      if (iterable) {\n        for (var i0 = 0, i1 = 0; i0 < iterablesEmptyRows.length; i0++) {\n          if (reIndex[iterablesEmptyRows[i0]] !== REMOVED_INDEX) {\n            iterablesEmptyRows[i1] = reIndex[iterablesEmptyRows[i0]];\n            i1++;\n          }\n        }\n        iterablesEmptyRows.length = i1;\n        for (i0 = 0, i1 = 0; i0 < n; i0++) {\n          if (reIndex[i0] !== REMOVED_INDEX) {\n            if (i1 !== i0) iterablesIndexCount[i1] = iterablesIndexCount[i0];\n            i1++;\n          }\n        }\n        iterablesIndexCount.length = i1;\n      }\n      // Rewrite our index, overwriting removed values\n      var n0 = values.length;\n      for (var i = 0, j = 0, oldDataIndex; i < n0; ++i) {\n        oldDataIndex = index[i];\n        if (reIndex[oldDataIndex] !== REMOVED_INDEX) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[oldDataIndex];\n          if (iterable) {\n            iterablesIndexFilterStatus[j] = iterablesIndexFilterStatus[i];\n          }\n          ++j;\n        }\n      }\n      values.length = j;\n      if (iterable) iterablesIndexFilterStatus.length = j;\n      while (j < n0) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; }, bounds[0] === 0 && bounds[1] === values.length);\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [];\n\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      if(!iterable) {\n        // Flip filters normally.\n\n        for(i=0; i<added.length; i++) {\n          filters[offset][added[i]] ^= one;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          filters[offset][removed[i]] ^= one;\n        }\n\n      } else {\n        // For iterables, we need to figure out if the row has been completely removed vs partially included\n        // Only count a row as added if it is not already being aggregated. Only count a row\n        // as removed if the last element being aggregated is removed.\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          iterablesIndexCount[added[i]]++\n          iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n          if(iterablesIndexCount[added[i]] === 1) {\n            filters[offset][added[i]] ^= one;\n            newAdded.push(added[i]);\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          iterablesIndexCount[removed[i]]--\n          iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n          if(iterablesIndexCount[removed[i]] === 0) {\n            filters[offset][removed[i]] ^= one;\n            newRemoved.push(removed[i]);\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(bounds[0] === 0 && bounds[1] === values.length) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      filterValue = value;\n      filterValuePresent = true;\n      return filterIndexBounds((refilter = xfilterFilter.filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      filterValue = range;\n      filterValuePresent = true;\n      return filterIndexBounds((refilter = xfilterFilter.filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      filterValue = undefined;\n      filterValuePresent = false;\n      return filterIndexBounds((refilter = xfilterFilter.filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      filterValue = f;\n      filterValuePresent = true;\n      \n      refilterFunction = f;\n      refilter = xfilterFilter.filterAll;\n\n      filterIndexFunction(f, false);\n\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f, filterAll) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [],\n          indexLength = values.length;\n\n      if(!iterable) {\n        for (i = 0; i < indexLength; ++i) {\n          if (!(filters[offset][k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n            if (x) added.push(k);\n            else removed.push(k);\n          }\n        }\n      }\n\n      if(iterable) {\n        for(i=0; i < indexLength; ++i) {\n          if(f(values[i], i)) {\n            added.push(index[i]);\n            valueIndexAdded.push(i);\n          } else {\n            removed.push(index[i]);\n            valueIndexRemoved.push(i);\n          }\n        }\n      }\n\n      if(!iterable) {\n        for(i=0; i<added.length; i++) {\n          if(filters[offset][added[i]] & one) filters[offset][added[i]] &= zero;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          if(!(filters[offset][removed[i]] & one)) filters[offset][removed[i]] |= one;\n        }\n      } else {\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          // First check this particular value needs to be added\n          if(iterablesIndexFilterStatus[valueIndexAdded[i]] === 1) {\n            iterablesIndexCount[added[i]]++\n            iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n            if(iterablesIndexCount[added[i]] === 1) {\n              filters[offset][added[i]] ^= one;\n              newAdded.push(added[i]);\n            }\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          // First check this particular value needs to be removed\n          if(iterablesIndexFilterStatus[valueIndexRemoved[i]] === 0) {\n            iterablesIndexCount[removed[i]]--\n            iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n            if(iterablesIndexCount[removed[i]] === 0) {\n              filters[offset][removed[i]] ^= one;\n              newRemoved.push(removed[i]);\n            }\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(filterAll) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n    }\n    \n    function currentFilter() {\n      return filterValue;\n    }\n    \n    function hasCurrentFilter() {\n      return filterValuePresent;\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k, top_offset) {\n      var array = [],\n          i = hi0,\n          j,\n          toSkip = 0;\n\n      if(top_offset && top_offset > 0) toSkip = top_offset;\n\n      while (--i >= lo0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n      }\n\n      if(iterable){\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          // Add row with empty iterable column at the end\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k, bottom_offset) {\n      var array = [],\n          i,\n          j,\n          toSkip = 0;\n\n      if(bottom_offset && bottom_offset > 0) toSkip = bottom_offset;\n\n      if(iterable) {\n        // Add row with empty iterable column at the top\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      i = lo0;\n\n      while (i < hi0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null,\n          n0old;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n\n        if(iterable) {\n          n0old = n0\n          n0 = values.length - newValues.length\n          n1 = newValues.length;\n        }\n\n        var oldGroups = groups,\n            reIndex = iterable ? [] : crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            remove = reduceRemove,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n        if (resetNeeded) remove = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        if(iterable){\n          groupIndex = k0 ? groupIndex : [];\n        }\n        else{\n          groupIndex = k0 > 1 ? xfilterArray.arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n        }\n\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            g0 = oldGroups[++i0];\n            if (g0) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n\n          while (x1 <= x) {\n            j = newIndex[i1] + (iterable ? n0old : n0)\n\n\n            if(iterable){\n              if(groupIndex[j]){\n                groupIndex[j].push(k)\n              }\n              else{\n                groupIndex[j] = [k]\n              }\n            }\n            else{\n              groupIndex[j] = k;\n            }\n\n            // Always add new values to groups. Only remove when not in filter.\n            // This gives groups full information on data life-cycle.\n            g.value = add(g.value, data[j], true);\n            if (!filters.zeroExcept(j, offset, zero)) g.value = remove(g.value, data[j], false);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater th1an all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n\n        // Fill in gaps with empty arrays where there may have been rows with empty iterables\n        if(iterable){\n          for (var index1 = 0; index1 < n; index1++) {\n            if(!groupIndex[index1]){\n              groupIndex[index1] = [];\n            }\n          }\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if(k > i0){\n          if(iterable){\n            for (i0 = 0; i0 < n0old; ++i0) {\n              for (index1 = 0; index1 < groupIndex[i0].length; index1++) {\n                groupIndex[i0][index1] = reIndex[groupIndex[i0][index1]];\n              }\n            }\n          }\n          else{\n            for (i0 = 0; i0 < n0; ++i0) {\n              groupIndex[i0] = reIndex[groupIndex[i0]];\n            }\n          }\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1 || iterable) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if(iterable){\n            k++\n            return\n          }\n          if (++k === groupCapacity) {\n            reIndex = xfilterArray.arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = xfilterArray.arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData(reIndex) {\n        if (k > 1 || iterable) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK),\n              i,\n              i0,\n              j;\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          if (!iterable) {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n                ++j;\n              }\n            }\n          } else {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                groupIndex[j] = groupIndex[i];\n                for (i0 = 0; i0 < groupIndex[j].length; i0++) {\n                  seenGroups[groupIndex[j][i0]] = 1;\n                }\n                ++j;\n              }\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1 || iterable) {\n            // Reindex the group index using seenGroups to find the new index.\n            if (!iterable) {\n              for (i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n            } else {\n              for (i = 0; i < j; ++i) {\n                for (i0 = 0; i0 < groupIndex[i].length; ++i0) {\n                  groupIndex[i][i0] = seenGroups[groupIndex[i][i0]];\n                }\n              }\n            }\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1 || iterable\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var index3 = 0; index3 < n; ++index3) if (reIndex[index3] !== REMOVED_INDEX) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateMany(filterOne, filterOffset, added, removed, notFilter) {\n\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            j,\n            k,\n            n,\n            g;\n\n        if(iterable){\n          // Add the added values.\n          for (i = 0, n = added.length; i < n; ++i) {\n            if (filters.zeroExcept(k = added[i], offset, zero)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceAdd(g.value, data[k], false, j);\n              }\n            }\n          }\n\n          // Remove the removed values.\n          for (i = 0, n = removed.length; i < n; ++i) {\n            if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceRemove(g.value, data[k], notFilter, j);\n              }\n            }\n          }\n          return;\n        }\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateOne(filterOne, filterOffset, added, removed, notFilter) {\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            j,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        if(iterable){\n          for (i = 0; i < n; ++i) {\n            for (j = 0; j < groupIndex[i].length; j++) {\n              g = groups[groupIndex[i][j]];\n              g.value = reduceAdd(g.value, data[i], true, j);\n            }\n          }\n          for (i = 0; i < n; ++i) {\n            if (!filters.zeroExcept(i, offset, zero)) {\n              for (j = 0; j < groupIndex[i].length; j++) {\n                g = groups[groupIndex[i][j]];\n                g.value = reduceRemove(g.value, data[i], false, j);\n              }\n            }\n          }\n          return;\n        }\n\n        for (i = 0; i < n; ++i) {\n          g = groups[groupIndex[i]];\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        for (i = 0; i < n; ++i) {\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = xfilterHeapselect.by(valueOf);\n        heap = xfilterHeap.by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        i = dimensionGroups.indexOf(group);\n        if (i >= 0) dimensionGroups.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      filters.masks[offset] &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Cycle through all the values.\n      for (i = n0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, filterOffset, added, removed, notFilter) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (filters.zero(k = added[i])) {\n          reduceValue = reduceAdd(reduceValue, data[k], notFilter);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters.only(k = removed[i], filterOffset, filterOne)) {\n          reduceValue = reduceRemove(reduceValue, data[k], notFilter);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      // Cycle through all the values.\n      for (i = 0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if it is filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i, 1);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i, 1);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  // Returns the raw row data contained in this crossfilter\n  function all(){\n    return data;\n  }\n\n  // Returns row data with all dimension filters applied, except for filters in ignore_dimensions\n  function allFiltered(ignore_dimensions) {\n    var array = [],\n        i = 0,\n        mask = maskForDimensions(ignore_dimensions || []);\n\n      for (i = 0; i < n; i++) {\n        if (filters.zeroExceptMask(i, mask)) {\n          array.push(data[i]);\n        }\n      }\n\n      return array;\n  }\n\n  function onChange(cb){\n    if(typeof cb !== 'function'){\n      /* eslint no-console: 0 */\n      console.warn('onChange callback parameter must be a function!');\n      return;\n    }\n    callbacks.push(cb);\n    return function(){\n      callbacks.splice(callbacks.indexOf(cb), 1);\n    };\n  }\n\n  function triggerOnChange(eventName){\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i](eventName);\n    }\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? xfilterArray.array8 : m < 0x10001\n      ? xfilterArray.array16\n      : xfilterArray.array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n\n},{\"./../package.json\":3,\"./array\":4,\"./bisect\":5,\"./filter\":7,\"./heap\":8,\"./heapselect\":9,\"./identity\":10,\"./insertionsort\":11,\"./null\":12,\"./permute\":13,\"./quicksort\":14,\"./reduce\":15,\"./zero\":16,\"lodash.result\":2}],7:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\n\nmodule.exports = {\n  filterExact: crossfilter_filterExact,\n  filterRange: crossfilter_filterRange,\n  filterAll: crossfilter_filterAll\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\n\nmodule.exports = heap_by(crossfilter_identity);\nmodule.exports.by = heap_by;\n\n},{\"./identity\":10}],9:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\nvar xFilterHeap = require('./heap');\n\nfunction heapselect_by(f) {\n  var heap = xFilterHeap.by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\n\nmodule.exports = heapselect_by(crossfilter_identity);\nmodule.exports.by = heapselect_by; // assign the raw function to the export as well\n\n},{\"./heap\":8,\"./identity\":10}],10:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_identity(d) {\n  return d;\n}\n\nmodule.exports = crossfilter_identity;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n\nmodule.exports = insertionsort_by(crossfilter_identity);\nmodule.exports.by = insertionsort_by;\n\n},{\"./identity\":10}],12:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_null() {\n  return null;\n}\n\nmodule.exports = crossfilter_null;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nfunction permute(array, index, deep) {\n  for (var i = 0, n = index.length, copy = deep ? JSON.parse(JSON.stringify(array)) : new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\n\nmodule.exports = permute;\n\n},{}],14:[function(require,module,exports){\nvar crossfilter_identity = require('./identity');\nvar xFilterInsertionsort = require('./insertionsort');\n\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see NOTICE and AUTHORS for details.\n\nfunction quicksort_by(f) {\n  var insertionsort = xFilterInsertionsort.by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          /* eslint no-constant-condition: 0 */\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      (function () { // isolate scope\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n\n      (function () { // isolate scope\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            /* eslint no-constant-condition: 0 */\n            while (true) {\n              greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\n\nmodule.exports = quicksort_by(crossfilter_identity);\nmodule.exports.by = quicksort_by;\n\n},{\"./identity\":10,\"./insertionsort\":11}],15:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\n\nmodule.exports = {\n  reduceIncrement: crossfilter_reduceIncrement,\n  reduceDecrement: crossfilter_reduceDecrement,\n  reduceAdd: crossfilter_reduceAdd,\n  reduceSubtract: crossfilter_reduceSubtract\n};\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_zero() {\n  return 0;\n}\n\nmodule.exports = crossfilter_zero;\n\n},{}]},{},[1])(1)\n});\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.reductio=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar reductio_build = require('./build.js');\nvar reductio_accessors = require('./accessors.js');\nvar reductio_parameters = require('./parameters.js');\nvar reductio_postprocess = require('./postprocess');\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nfunction reductio() {\n\tvar parameters = reductio_parameters();\n\n\tvar funcs = {};\n\n\tfunction my(group) {\n\t\t// Start fresh each time.\n\t\tfuncs = {\n\t\t\treduceAdd: function(p) { return p; },\n\t\t\treduceRemove: function(p) { return p; },\n\t\t\treduceInitial: function () { return {}; },\n\t\t};\n\n\t\treductio_build.build(parameters, funcs);\n\n\t\t// If we're doing groupAll\n\t\tif(parameters.groupAll) {\n\t\t\tif(group.top) {\n\t\t\t\tconsole.warn(\"'groupAll' is defined but attempting to run on a standard dimension.group(). Must run on dimension.groupAll().\");\n\t\t\t} else {\n\t\t\t\tvar bisect = crossfilter.bisect.by(function(d) { return d.key; }).left;\n\t\t\t\tvar i, j;\n\t\t\t\tvar keys;\n        var keysLength;\n        var k; // Key\n\t\t\t\tgroup.reduce(\n\t\t\t\t\tfunction(p, v, nf) {\n\t\t\t\t\t\tkeys = parameters.groupAll(v);\n            keysLength = keys.length;\n            for(j=0;j<keysLength;j++) {\n              k = keys[j];\n              i = bisect(p, k, 0, p.length);\n\t\t\t\t\t\t\tif(!p[i] || p[i].key !== k) {\n\t\t\t\t\t\t\t\t// If the group doesn't yet exist, create it first.\n\t\t\t\t\t\t\t\tp.splice(i, 0, { key: k, value: funcs.reduceInitial() });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Then pass the record and the group value to the reducers\n\t\t\t\t\t\t\tfuncs.reduceAdd(p[i].value, v, nf);\n            }\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t},\n\t\t\t\t\tfunction(p, v, nf) {\n\t\t\t\t\t\tkeys = parameters.groupAll(v);\n            keysLength = keys.length;\n            for(j=0;j<keysLength;j++) {\n              i = bisect(p, keys[j], 0, p.length);\n\t\t\t\t\t\t\t// The group should exist or we're in trouble!\n\t\t\t\t\t\t\t// Then pass the record and the group value to the reducers\n\t\t\t\t\t\t\tfuncs.reduceRemove(p[i].value, v, nf);\n            }\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif(!group.all) {\n\t\t\t\t\t// Add an 'all' method for compatibility with standard Crossfilter groups.\n\t\t\t\t\tgroup.all = function() { return this.value(); };\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tgroup.reduce(funcs.reduceAdd, funcs.reduceRemove, funcs.reduceInitial);\n\t\t}\n\n\t\treductio_postprocess(group, parameters, funcs);\n\n\t\treturn group;\n\t}\n\n\treductio_accessors.build(my, parameters);\n\n\treturn my;\n}\n\nrequire('./postprocessors')(reductio);\nreductio_postprocess = reductio_postprocess(reductio);\n\nmodule.exports = reductio;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./accessors.js\":2,\"./build.js\":6,\"./parameters.js\":19,\"./postprocess\":20,\"./postprocessors\":21}],2:[function(require,module,exports){\nvar reductio_parameters = require('./parameters.js');\n\n_assign = function assign(target) {\n\tif (target == null) {\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t}\n\n\tvar output = Object(target);\n\tfor (var index = 1; index < arguments.length; ++index) {\n\t\tvar source = arguments[index];\n\t\tif (source != null) {\n\t\t\tfor (var nextKey in source) {\n\t\t\t\tif(source.hasOwnProperty(nextKey)) {\n\t\t\t\t\toutput[nextKey] = source[nextKey];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n};\n\nfunction accessor_build(obj, p) {\n\t// obj.order = function(value) {\n\t// \tif (!arguments.length) return p.order;\n\t// \tp.order = value;\n\t// \treturn obj;\n\t// };\n\n\t// Converts a string to an accessor function\n\tfunction accessorify(v) {\n\t\tif( typeof v === 'string' ) {\n\t\t\t// Rewrite to a function\n\t\t\tvar tempValue = v;\n\t\t\tvar func = function (d) { return d[tempValue]; }\n\t\t\treturn func;\n\t\t} else {\n\t\t\treturn v;\n\t\t}\n\t}\n\n\t// Converts a string to an accessor function\n\tfunction accessorifyNumeric(v) {\n\t\tif( typeof v === 'string' ) {\n\t\t\t// Rewrite to a function\n\t\t\tvar tempValue = v;\n\t\t\tvar func = function (d) { return +d[tempValue]; }\n\t\t\treturn func;\n\t\t} else {\n\t\t\treturn v;\n\t\t}\n\t}\n\n\tobj.fromObject = function(value) {\n\t\tif(!arguments.length) return p;\n\t\t_assign(p, value);\n\t\treturn obj;\n\t};\n\n\tobj.toObject = function() {\n\t\treturn p;\n\t};\n\n\tobj.count = function(value, propName) {\n\t\tif (!arguments.length) return p.count;\n    if (!propName) {\n      propName = 'count';\n    }\n\t\tp.count = propName;\n\t\treturn obj;\n\t};\n\n\tobj.sum = function(value) {\n\t\tif (!arguments.length) return p.sum;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.sum = value;\n\t\treturn obj;\n\t};\n\n\tobj.avg = function(value) {\n\t\tif (!arguments.length) return p.avg;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\t// We can take an accessor function, a boolean, or a string\n\t\tif( typeof value === 'function' ) {\n\t\t\tif(p.sum && p.sum !== value) console.warn('SUM aggregation is being overwritten by AVG aggregation');\n\t\t\tp.sum = value;\n\t\t\tp.avg = true;\n\t\t\tp.count = 'count';\n\t\t} else {\n\t\t\tp.avg = value;\n\t\t}\n\t\treturn obj;\n\t};\n\n\tobj.exception = function(value) {\n\t\tif (!arguments.length) return p.exceptionAccessor;\n\n\t\tvalue = accessorify(value);\n\n\t\tp.exceptionAccessor = value;\n\t\treturn obj;\n\t};\n\n\tobj.filter = function(value) {\n\t\tif (!arguments.length) return p.filter;\n\t\tp.filter = value;\n\t\treturn obj;\n\t};\n\n\tobj.valueList = function(value) {\n\t\tif (!arguments.length) return p.valueList;\n\n\t\tvalue = accessorify(value);\n\n\t\tp.valueList = value;\n\t\treturn obj;\n\t};\n\n\tobj.median = function(value) {\n\t\tif (!arguments.length) return p.median;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof value === 'function') {\n\t\t\tif(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by median aggregation');\n\t\t\tp.valueList = value;\n\t\t}\n\t\tp.median = value;\n\t\treturn obj;\n\t};\n\n\tobj.min = function(value) {\n\t\tif (!arguments.length) return p.min;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof value === 'function') {\n\t\t\tif(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by min aggregation');\n\t\t\tp.valueList = value;\n\t\t}\n\t\tp.min = value;\n\t\treturn obj;\n\t};\n\n\tobj.max = function(value) {\n\t\tif (!arguments.length) return p.max;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof value === 'function') {\n\t\t\tif(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by max aggregation');\n\t\t\tp.valueList = value;\n\t\t}\n\t\tp.max = value;\n\t\treturn obj;\n\t};\n\n\tobj.exceptionCount = function(value) {\n\t\tif (!arguments.length) return p.exceptionCount;\n\n\t\tvalue = accessorify(value);\n\n\t\tif( typeof value === 'function' ) {\n\t\t\tif(p.exceptionAccessor && p.exceptionAccessor !== value) console.warn('EXCEPTION accessor is being overwritten by exception count aggregation');\n\t\t\tp.exceptionAccessor = value;\n\t\t\tp.exceptionCount = true;\n\t\t} else {\n\t\t\tp.exceptionCount = value;\n\t\t}\n\t\treturn obj;\n\t};\n\n\tobj.exceptionSum = function(value) {\n\t\tif (!arguments.length) return p.exceptionSum;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.exceptionSum = value;\n\t\treturn obj;\n\t};\n\n\tobj.histogramValue = function(value) {\n\t\tif (!arguments.length) return p.histogramValue;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.histogramValue = value;\n\t\treturn obj;\n\t};\n\n\tobj.histogramBins = function(value) {\n\t\tif (!arguments.length) return p.histogramThresholds;\n\t\tp.histogramThresholds = value;\n\t\treturn obj;\n\t};\n\n\tobj.std = function(value) {\n\t\tif (!arguments.length) return p.std;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof(value) === 'function') {\n\t\t\tp.sumOfSquares = value;\n\t\t\tp.sum = value;\n\t\t\tp.count = 'count';\n\t\t\tp.std = true;\n\t\t} else {\n\t\t\tp.std = value;\n\t\t}\n\t\treturn obj;\n\t};\n\n\tobj.sumOfSq = function(value) {\n\t\tif (!arguments.length) return p.sumOfSquares;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.sumOfSquares = value;\n\t\treturn obj;\n\t};\n\n\tobj.value = function(value, accessor) {\n\t\tif (!arguments.length || typeof value !== 'string' ) {\n\t\t\tconsole.error(\"'value' requires a string argument.\");\n\t\t} else {\n\t\t\tif(!p.values) p.values = {};\n\t\t\tp.values[value] = {};\n\t\t\tp.values[value].parameters = reductio_parameters();\n\t\t\taccessor_build(p.values[value], p.values[value].parameters);\n\t\t\tif(accessor) p.values[value].accessor = accessor;\n\t\t\treturn p.values[value];\n\t\t}\n\t};\n\n\tobj.nest = function(keyAccessorArray) {\n\t\tif(!arguments.length) return p.nestKeys;\n\n\t\tkeyAccessorArray.map(accessorify);\n\n\t\tp.nestKeys = keyAccessorArray;\n\t\treturn obj;\n\t};\n\n\tobj.alias = function(propAccessorObj) {\n\t\tif(!arguments.length) return p.aliasKeys;\n\t\tp.aliasKeys = propAccessorObj;\n\t\treturn obj;\n\t};\n\n\tobj.aliasProp = function(propAccessorObj) {\n\t\tif(!arguments.length) return p.aliasPropKeys;\n\t\tp.aliasPropKeys = propAccessorObj;\n\t\treturn obj;\n\t};\n\n\tobj.groupAll = function(groupTest) {\n\t\tif(!arguments.length) return p.groupAll;\n\t\tp.groupAll = groupTest;\n\t\treturn obj;\n\t};\n\n\tobj.dataList = function(value) {\n\t\tif (!arguments.length) return p.dataList;\n\t\tp.dataList = value;\n\t\treturn obj;\n\t};\n\n\tobj.custom = function(addRemoveInitialObj) {\n\t\tif (!arguments.length) return p.custom;\n\t\tp.custom = addRemoveInitialObj;\n\t\treturn obj;\n\t};\n\n}\n\nvar reductio_accessors = {\n\tbuild: accessor_build\n};\n\nmodule.exports = reductio_accessors;\n\n},{\"./parameters.js\":19}],3:[function(require,module,exports){\nvar reductio_alias = {\n\tinitial: function(prior, path, obj) {\n\t\treturn function (p) {\n\t\t\tif(prior) p = prior(p);\n\t\t\tfunction buildAliasFunction(key){\n\t\t\t\treturn function(){\n\t\t\t\t\treturn obj[key](path(p));\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor(var prop in obj) {\n\t\t\t\tpath(p)[prop] = buildAliasFunction(prop);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_alias;\n},{}],4:[function(require,module,exports){\nvar reductio_alias_prop = {\n\tadd: function (obj, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tfor(var prop in obj) {\n\t\t\t\tpath(p)[prop] = obj[prop](path(p),v);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_alias_prop;\n},{}],5:[function(require,module,exports){\nvar reductio_avg = {\n\tadd: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).avg = path(p).sum / path(p).count;\n\t\t\t} else {\n\t\t\t\tpath(p).avg = 0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).avg = path(p).sum / path(p).count;\n\t\t\t} else {\n\t\t\t\tpath(p).avg = 0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).avg = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_avg;\n},{}],6:[function(require,module,exports){\nvar reductio_filter = require('./filter.js');\nvar reductio_count = require('./count.js');\nvar reductio_sum = require('./sum.js');\nvar reductio_avg = require('./avg.js');\nvar reductio_median = require('./median.js');\nvar reductio_min = require('./min.js');\nvar reductio_max = require('./max.js');\nvar reductio_value_count = require('./value-count.js');\nvar reductio_value_list = require('./value-list.js');\nvar reductio_exception_count = require('./exception-count.js');\nvar reductio_exception_sum = require('./exception-sum.js');\nvar reductio_histogram = require('./histogram.js');\nvar reductio_sum_of_sq = require('./sum-of-squares.js');\nvar reductio_std = require('./std.js');\nvar reductio_nest = require('./nest.js');\nvar reductio_alias = require('./alias.js');\nvar reductio_alias_prop = require('./aliasProp.js');\nvar reductio_data_list = require('./data-list.js');\nvar reductio_custom = require('./custom.js');\n\nfunction build_function(p, f, path) {\n\t// We have to build these functions in order. Eventually we can include dependency\n\t// information and create a dependency graph if the process becomes complex enough.\n\n\tif(!path) path = function (d) { return d; };\n\n\t// Keep track of the original reducers so that filtering can skip back to\n\t// them if this particular value is filtered out.\n\tvar origF = {\n\t\treduceAdd: f.reduceAdd,\n\t\treduceRemove: f.reduceRemove,\n\t\treduceInitial: f.reduceInitial\n\t};\n\n\tif(p.count || p.std) {\n    f.reduceAdd = reductio_count.add(f.reduceAdd, path, p.count);\n    f.reduceRemove = reductio_count.remove(f.reduceRemove, path, p.count);\n    f.reduceInitial = reductio_count.initial(f.reduceInitial, path, p.count);\n\t}\n\n\tif(p.sum) {\n\t\tf.reduceAdd = reductio_sum.add(p.sum, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_sum.remove(p.sum, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_sum.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.avg) {\n\t\tif(!p.count || !p.sum) {\n\t\t\tconsole.error(\"You must set .count(true) and define a .sum(accessor) to use .avg(true).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_avg.add(p.sum, f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_avg.remove(p.sum, f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_avg.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\t// The unique-only reducers come before the value_count reducers. They need to check if\n\t// the value is already in the values array on the group. They should only increment/decrement\n\t// counts if the value not in the array or the count on the value is 0.\n\tif(p.exceptionCount) {\n\t\tif(!p.exceptionAccessor) {\n\t\t\tconsole.error(\"You must define an .exception(accessor) to use .exceptionCount(true).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_exception_count.add(p.exceptionAccessor, f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_exception_count.remove(p.exceptionAccessor, f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_exception_count.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\tif(p.exceptionSum) {\n\t\tif(!p.exceptionAccessor) {\n\t\t\tconsole.error(\"You must define an .exception(accessor) to use .exceptionSum(accessor).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_exception_sum.add(p.exceptionAccessor, p.exceptionSum, f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_exception_sum.remove(p.exceptionAccessor, p.exceptionSum, f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_exception_sum.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\t// Maintain the values array.\n\tif(p.valueList || p.median || p.min || p.max) {\n\t\tf.reduceAdd = reductio_value_list.add(p.valueList, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_value_list.remove(p.valueList, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_value_list.initial(f.reduceInitial, path);\n\t}\n\n\t// Maintain the data array.\n\tif(p.dataList) {\n\t\tf.reduceAdd = reductio_data_list.add(p.dataList, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_data_list.remove(p.dataList, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_data_list.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.median) {\n\t\tf.reduceAdd = reductio_median.add(f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_median.remove(f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_median.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.min) {\n\t\tf.reduceAdd = reductio_min.add(f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_min.remove(f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_min.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.max) {\n\t\tf.reduceAdd = reductio_max.add(f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_max.remove(f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_max.initial(f.reduceInitial, path);\n\t}\n\n\t// Maintain the values count array.\n\tif(p.exceptionAccessor) {\n\t\tf.reduceAdd = reductio_value_count.add(p.exceptionAccessor, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_value_count.remove(p.exceptionAccessor, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_value_count.initial(f.reduceInitial, path);\n\t}\n\n\t// Histogram\n\tif(p.histogramValue && p.histogramThresholds) {\n\t\tf.reduceAdd = reductio_histogram.add(p.histogramValue, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_histogram.remove(p.histogramValue, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_histogram.initial(p.histogramThresholds ,f.reduceInitial, path);\n\t}\n\n\t// Sum of Squares\n\tif(p.sumOfSquares) {\n\t\tf.reduceAdd = reductio_sum_of_sq.add(p.sumOfSquares, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_sum_of_sq.remove(p.sumOfSquares, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_sum_of_sq.initial(f.reduceInitial, path);\n\t}\n\n\t// Standard deviation\n\tif(p.std) {\n\t\tif(!p.sumOfSquares || !p.sum) {\n\t\t\tconsole.error(\"You must set .sumOfSq(accessor) and define a .sum(accessor) to use .std(true). Or use .std(accessor).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_std.add(f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_std.remove(f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_std.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\t// Custom reducer defined by 3 functions : add, remove, initial\n\tif (p.custom) {\n\t\tf.reduceAdd = reductio_custom.add(f.reduceAdd, path, p.custom.add);\n\t\tf.reduceRemove = reductio_custom.remove(f.reduceRemove, path, p.custom.remove);\n\t\tf.reduceInitial = reductio_custom.initial(f.reduceInitial, path, p.custom.initial);\n\t}\n\n\t// Nesting\n\tif(p.nestKeys) {\n\t\tf.reduceAdd = reductio_nest.add(p.nestKeys, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_nest.remove(p.nestKeys, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_nest.initial(f.reduceInitial, path);\n\t}\n\n\t// Alias functions\n\tif(p.aliasKeys) {\n\t\tf.reduceInitial = reductio_alias.initial(f.reduceInitial, path, p.aliasKeys);\n\t}\n\n\t// Alias properties - this is less efficient than alias functions\n\tif(p.aliasPropKeys) {\n\t\tf.reduceAdd = reductio_alias_prop.add(p.aliasPropKeys, f.reduceAdd, path);\n\t\t// This isn't a typo. The function is the same for add/remove.\n\t\tf.reduceRemove = reductio_alias_prop.add(p.aliasPropKeys, f.reduceRemove, path);\n\t}\n\n\t// Filters determine if our built-up priors should run, or if it should skip\n\t// back to the filters given at the beginning of this build function.\n\tif (p.filter) {\n\t\tf.reduceAdd = reductio_filter.add(p.filter, f.reduceAdd, origF.reduceAdd, path);\n\t\tf.reduceRemove = reductio_filter.remove(p.filter, f.reduceRemove, origF.reduceRemove, path);\n\t}\n\n\t// Values go last.\n\tif(p.values) {\n\t\tObject.getOwnPropertyNames(p.values).forEach(function(n) {\n\t\t\t// Set up the path on each group.\n\t\t\tvar setupPath = function(prior) {\n\t\t\t\treturn function (p) {\n\t\t\t\t\tp = prior(p);\n\t\t\t\t\tpath(p)[n] = {};\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t};\n\t\t\tf.reduceInitial = setupPath(f.reduceInitial);\n\t\t\tbuild_function(p.values[n].parameters, f, function (p) { return p[n]; });\n\t\t});\n\t}\n}\n\nvar reductio_build = {\n\tbuild: build_function\n};\n\nmodule.exports = reductio_build;\n\n},{\"./alias.js\":3,\"./aliasProp.js\":4,\"./avg.js\":5,\"./count.js\":8,\"./custom.js\":9,\"./data-list.js\":10,\"./exception-count.js\":11,\"./exception-sum.js\":12,\"./filter.js\":13,\"./histogram.js\":14,\"./max.js\":15,\"./median.js\":16,\"./min.js\":17,\"./nest.js\":18,\"./std.js\":23,\"./sum-of-squares.js\":24,\"./sum.js\":25,\"./value-count.js\":26,\"./value-list.js\":27}],7:[function(require,module,exports){\nvar pluck = function(n){\n    return function(d){\n        return d[n];\n    };\n};\n\n// supported operators are sum, avg, and count\n_grouper = function(path, prior){\n    if(!path) path = function(d){return d;};\n    return function(p, v){\n        if(prior) prior(p, v);\n        var x = path(p), y = path(v);\n        if(typeof y.count !== 'undefined') x.count += y.count;\n        if(typeof y.sum !== 'undefined') x.sum += y.sum;\n        if(typeof y.avg !== 'undefined') x.avg = x.sum/x.count;\n        return p;\n    };\n};\n\nreductio_cap = function (prior, f, p) {\n    var obj = f.reduceInitial();\n    // we want to support values so we'll need to know what those are\n    var values = p.values ? Object.keys(p.values) : [];\n    var _othersGrouper = _grouper();\n    if (values.length) {\n        for (var i = 0; i < values.length; ++i) {\n            _othersGrouper = _grouper(pluck(values[i]), _othersGrouper);\n        }\n    }\n    return function (cap, othersName) {\n        if (!arguments.length) return prior();\n        if( cap === Infinity || !cap ) return prior();\n        var all = prior();\n        var slice_idx = cap-1;\n        if(all.length <= cap) return all;\n        var data = all.slice(0, slice_idx);\n        var others = {key: othersName || 'Others'};\n        others.value = f.reduceInitial();\n        for (var i = slice_idx; i < all.length; ++i) {\n            _othersGrouper(others.value, all[i].value);\n        }\n        data.push(others);\n        return data;\n    };\n};\n\nmodule.exports = reductio_cap;\n\n},{}],8:[function(require,module,exports){\nvar reductio_count = {\n\tadd: function(prior, path, propName) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p)[propName]++;\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function(prior, path, propName) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p)[propName]--;\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function(prior, path, propName) {\n\t\treturn function (p) {\n\t\t\tif(prior) p = prior(p);\n\t\t\t// if(p === undefined) p = {};\n\t\t\tpath(p)[propName] = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_count;\n},{}],9:[function(require,module,exports){\nvar reductio_custom = {\n\tadd: function(prior, path, addFn) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\treturn addFn(p, v);\n\t\t};\n\t},\n\tremove: function(prior, path, removeFn) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\treturn removeFn(p, v);\n\t\t};\n\t},\n\tinitial: function(prior, path, initialFn) {\n\t\treturn function (p) {\t\n\t\t\tif(prior) p = prior(p);\n\t\t\treturn initialFn(p);\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_custom;\n},{}],10:[function(require,module,exports){\nvar reductio_data_list = {\n\tadd: function(a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).dataList.push(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function(a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).dataList.splice(path(p).dataList.indexOf(v), 1);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function(prior, path) {\n\t\treturn function (p) {\n\t\t\tif(prior) p = prior(p);\n\t\t\tpath(p).dataList = [];\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_data_list;\n\n},{}],11:[function(require,module,exports){\nvar reductio_exception_count = {\n\tadd: function (a, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only count++ if the p.values array doesn't contain a(v) or if it's 0.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif((!curr || curr[0] !== a(v)) || curr[1] === 0) {\n\t\t\t\tpath(p).exceptionCount++;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only count-- if the p.values array contains a(v) value of 1.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif(curr && curr[0] === a(v) && curr[1] === 1) {\n\t\t\t\tpath(p).exceptionCount--;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).exceptionCount = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_exception_count;\n},{}],12:[function(require,module,exports){\nvar reductio_exception_sum = {\n\tadd: function (a, sum, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only sum if the p.values array doesn't contain a(v) or if it's 0.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif((!curr || curr[0] !== a(v)) || curr[1] === 0) {\n\t\t\t\tpath(p).exceptionSum = path(p).exceptionSum + sum(v);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, sum, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only sum if the p.values array contains a(v) value of 1.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif(curr && curr[0] === a(v) && curr[1] === 1) {\n\t\t\t\tpath(p).exceptionSum = path(p).exceptionSum - sum(v);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).exceptionSum = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_exception_sum;\n},{}],13:[function(require,module,exports){\nvar reductio_filter = {\n\t// The big idea here is that you give us a filter function to run on values,\n\t// a 'prior' reducer to run (just like the rest of the standard reducers),\n\t// and a reference to the last reducer (called 'skip' below) defined before\n\t// the most recent chain of reducers.  This supports individual filters for\n\t// each .value('...') chain that you add to your reducer.\n\tadd: function (filter, prior, skip) {\n\t\treturn function (p, v, nf) {\n\t\t\tif (filter(v, nf)) {\n\t\t\t\tif (prior) prior(p, v, nf);\n\t\t\t} else {\n\t\t\t\tif (skip) skip(p, v, nf);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (filter, prior, skip) {\n\t\treturn function (p, v, nf) {\n\t\t\tif (filter(v, nf)) {\n\t\t\t\tif (prior) prior(p, v, nf);\n\t\t\t} else {\n\t\t\t\tif (skip) skip(p, v, nf);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_filter;\n\n},{}],14:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_histogram = {\n\tadd: function (a, prior, path) {\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\tvar bisectHisto = crossfilter.bisect.by(function(d) { return d.x; }).right;\n\t\tvar curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tcurr = path(p).histogram[bisectHisto(path(p).histogram, a(v), 0, path(p).histogram.length) - 1];\n\t\t\tcurr.y++;\n\t\t\tcurr.splice(bisect(curr, a(v), 0, curr.length), 0, a(v));\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\tvar bisectHisto = crossfilter.bisect.by(function(d) { return d.x; }).right;\n\t\tvar curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tcurr = path(p).histogram[bisectHisto(path(p).histogram, a(v), 0, path(p).histogram.length) - 1];\n\t\t\tcurr.y--;\n\t\t\tcurr.splice(bisect(curr, a(v), 0, curr.length), 1);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (thresholds, prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).histogram = [];\n\t\t\tvar arr = [];\n\t\t\tfor(var i = 1; i < thresholds.length; i++) {\n\t\t\t\tarr = [];\n\t\t\t\tarr.x = thresholds[i - 1];\n\t\t\t\tarr.dx = (thresholds[i] - thresholds[i - 1]);\n\t\t\t\tarr.y = 0;\n\t\t\t\tpath(p).histogram.push(arr);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_histogram;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(require,module,exports){\nvar reductio_max = {\n\tadd: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n \n\t\t\tpath(p).max = path(p).valueList[path(p).valueList.length - 1];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\t// Check for undefined.\n\t\t\tif(path(p).valueList.length === 0) {\n\t\t\t\tpath(p).max = undefined;\n\t\t\t\treturn p;\n\t\t\t}\n \n\t\t\tpath(p).max = path(p).valueList[path(p).valueList.length - 1];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).max = undefined;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_max;\n},{}],16:[function(require,module,exports){\nvar reductio_median = {\n\tadd: function (prior, path) {\n\t\tvar half;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\thalf = Math.floor(path(p).valueList.length/2);\n \n\t\t\tif(path(p).valueList.length % 2) {\n\t\t\t\tpath(p).median = path(p).valueList[half];\n\t\t\t} else {\n\t\t\t\tpath(p).median = (path(p).valueList[half-1] + path(p).valueList[half]) / 2.0;\n\t\t\t}\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\tvar half;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\thalf = Math.floor(path(p).valueList.length/2);\n\n\t\t\t// Check for undefined.\n\t\t\tif(path(p).valueList.length === 0) {\n\t\t\t\tpath(p).median = undefined;\n\t\t\t\treturn p;\n\t\t\t}\n \n\t\t\tif(path(p).valueList.length === 1 || path(p).valueList.length % 2) {\n\t\t\t\tpath(p).median = path(p).valueList[half];\n\t\t\t} else {\n\t\t\t\tpath(p).median = (path(p).valueList[half-1] + path(p).valueList[half]) / 2.0;\n\t\t\t}\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).median = undefined;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_median;\n},{}],17:[function(require,module,exports){\nvar reductio_min = {\n\tadd: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n \n\t\t\tpath(p).min = path(p).valueList[0];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\t// Check for undefined.\n\t\t\tif(path(p).valueList.length === 0) {\n\t\t\t\tpath(p).min = undefined;\n\t\t\t\treturn p;\n\t\t\t}\n \n\t\t\tpath(p).min = path(p).valueList[0];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).min = undefined;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_min;\n},{}],18:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_nest = {\n\tadd: function (keyAccessors, prior, path) {\n\t\tvar i; // Current key accessor\n\t\tvar arrRef;\n\t\tvar newRef;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\tarrRef = path(p).nest;\n\t\t\tkeyAccessors.forEach(function(a) {\n\t\t\t\tnewRef = arrRef.filter(function(d) { return d.key === a(v); })[0];\n\t\t\t\tif(newRef) {\n\t\t\t\t\t// There is another level.\n\t\t\t\t\tarrRef = newRef.values;\n\t\t\t\t} else {\n\t\t\t\t\t// Next level doesn't yet exist so we create it.\n\t\t\t\t\tnewRef = [];\n\t\t\t\t\tarrRef.push({ key: a(v), values: newRef });\n\t\t\t\t\tarrRef = newRef;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tarrRef.push(v);\n\t\t\t\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (keyAccessors, prior, path) {\n\t\tvar arrRef;\n\t\tvar nextRef;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\tarrRef = path(p).nest;\n\t\t\tkeyAccessors.forEach(function(a) {\n\t\t\t\tarrRef = arrRef.filter(function(d) { return d.key === a(v); })[0].values;\n\t\t\t});\n\n\t\t\t// Array contains an actual reference to the row, so just splice it out.\n\t\t\tarrRef.splice(arrRef.indexOf(v), 1);\n\n\t\t\t// If the leaf now has length 0 and it's not the base array remove it.\n\t\t\t// TODO\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).nest = [];\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_nest;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],19:[function(require,module,exports){\nvar reductio_parameters = function() {\n\treturn {\n\t\torder: false,\n\t\tavg: false,\n\t\tcount: false,\n\t\tsum: false,\n\t\texceptionAccessor: false,\n\t\texceptionCount: false,\n\t\texceptionSum: false,\n\t\tfilter: false,\n\t\tvalueList: false,\n\t\tmedian: false,\n\t\thistogramValue: false,\n\t\tmin: false,\n\t\tmax: false,\n\t\thistogramThresholds: false,\n\t\tstd: false,\n\t\tsumOfSquares: false,\n\t\tvalues: false,\n\t\tnestKeys: false,\n\t\taliasKeys: false,\n\t\taliasPropKeys: false,\n\t\tgroupAll: false,\n\t\tdataList: false,\n\t\tcustom: false\n\t};\n};\n\nmodule.exports = reductio_parameters;\n\n},{}],20:[function(require,module,exports){\nfunction postProcess(reductio) {\n    return function (group, p, f) {\n        group.post = function(){\n            var postprocess = function () {\n                return postprocess.all();\n            };\n            postprocess.all = function () {\n                return group.all();\n            };\n            var postprocessors = reductio.postprocessors;\n            Object.keys(postprocessors).forEach(function (name) {\n                postprocess[name] = function () {\n                    var _all = postprocess.all;\n                    var args = [].slice.call(arguments);\n                    postprocess.all = function () {\n                        return postprocessors[name](_all, f, p).apply(null, args);\n                    };\n                    return postprocess;\n                };\n            });\n            return postprocess;\n        };\n    };\n}\n\nmodule.exports = postProcess;\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function(reductio){\n    reductio.postprocessors = {};\n    reductio.registerPostProcessor = function(name, func){\n        reductio.postprocessors[name] = func;\n    };\n\n    reductio.registerPostProcessor('cap', require('./cap'));\n    reductio.registerPostProcessor('sortBy', require('./sortBy'));\n};\n\n},{\"./cap\":7,\"./sortBy\":22}],22:[function(require,module,exports){\nvar pluck_n = function (n) {\n    if (typeof n === 'function') {\n        return n;\n    }\n    if (~n.indexOf('.')) {\n        var split = n.split('.');\n        return function (d) {\n            return split.reduce(function (p, v) {\n                return p[v];\n            }, d);\n        };\n    }\n    return function (d) {\n        return d[n];\n    };\n};\n\nfunction ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar comparer = function (accessor, ordering) {\n    return function (a, b) {\n        return ordering(accessor(a), accessor(b));\n    };\n};\n\nvar type = {}.toString;\n\nmodule.exports = function (prior) {\n    return function (value, order) {\n        if (arguments.length === 1) {\n            order = ascending;\n        }\n        return prior().sort(comparer(pluck_n(value), order));\n    };\n};\n\n},{}],23:[function(require,module,exports){\nvar reductio_std = {\n\tadd: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).std = 0.0;\n\t\t\t\tvar n = path(p).sumOfSq - path(p).sum*path(p).sum/path(p).count;\n\t\t\t\tif (n>0.0) path(p).std = Math.sqrt(n/(path(p).count-1));\n\t\t\t} else {\n\t\t\t\tpath(p).std = 0.0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).std = 0.0;\n\t\t\t\tvar n = path(p).sumOfSq - path(p).sum*path(p).sum/path(p).count;\n\t\t\t\tif (n>0.0) path(p).std = Math.sqrt(n/(path(p).count-1));\n\t\t\t} else {\n\t\t\t\tpath(p).std = 0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).std = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_std;\n},{}],24:[function(require,module,exports){\nvar reductio_sum_of_sq = {\n\tadd: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sumOfSq = path(p).sumOfSq + a(v)*a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sumOfSq = path(p).sumOfSq - a(v)*a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).sumOfSq = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_sum_of_sq;\n},{}],25:[function(require,module,exports){\nvar reductio_sum = {\n\tadd: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sum = path(p).sum + a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sum = path(p).sum - a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).sum = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_sum;\n},{}],26:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_value_count = {\n\tadd: function (a, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Not sure if this is more efficient than sorting.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif(curr && curr[0] === a(v)) {\n\t\t\t\t// Value already exists in the array - increment it\n\t\t\t\tcurr[1]++;\n\t\t\t} else {\n\t\t\t\t// Value doesn't exist - add it in form [value, 1]\n\t\t\t\tpath(p).values.splice(i, 0, [a(v), 1]);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar i;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\t// Value already exists or something has gone terribly wrong.\n\t\t\tpath(p).values[i][1]--;\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\t// Array[Array[value, count]]\n\t\t\tpath(p).values = [];\n\t\t\tpath(p).bisect = crossfilter.bisect.by(function(d) { return d[0]; }).left;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_value_count;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],27:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_value_list = {\n\tadd: function (a, prior, path) {\n\t\tvar i;\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Not sure if this is more efficient than sorting.\n\t\t\ti = bisect(path(p).valueList, a(v), 0, path(p).valueList.length);\n\t\t\tpath(p).valueList.splice(i, 0, a(v));\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar i;\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\ti = bisect(path(p).valueList, a(v), 0, path(p).valueList.length);\n\t\t\t// Value already exists or something has gone terribly wrong.\n\t\t\tpath(p).valueList.splice(i, 1);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).valueList = [];\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_value_list;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1])(1)\n});","// https://d3js.org v5.9.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"5.9.2\";\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction sequence(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction thresholdSturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = thresholdSturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction threshold(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nvar slice$1 = Array.prototype.slice;\n\nfunction identity$1(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nfunction matcher(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant$1(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_join(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nfunction dragDisable(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant$2(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point$$1, that, args) {\n    var p = point$$1(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point$$1(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant$3(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array$1(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction interpolateNumber(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction interpolateString(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction interpolateValue(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : interpolateNumber)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction interpolateRound(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction interpolateZoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create$1(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create$1(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    schedule$$1.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate$$1(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate$$1(string00 = string0, value1));\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n}\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleNull(name, interpolate$$1) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = styleValue(this, name),\n        string1 = (this.style.removeProperty(name), styleValue(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove$1(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = styleValue(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = styleValue(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate$$1(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        on = schedule$$1.on,\n        listener = schedule$$1.value[key] == null ? remove || (remove = styleRemove$1(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove$1(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant$1(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nfunction transition_end() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule$$1 = set$1(this, id),\n          on = schedule$$1.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule$$1.on = on1;\n    });\n  });\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction constant$4(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$1() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter$1,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point$$1 = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point$$1[0]) > Math.abs(point1[1] - point$$1[1])) lockY = true;\n        else lockX = true;\n      }\n      point$$1 = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point$$1[0] - point0[0];\n      dy = point$$1[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$2 = Array.prototype.slice;\n\nfunction constant$5(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar pi$2 = Math.PI,\n    tau$2 = 2 * pi$2,\n    epsilon$1 = 1e-6,\n    tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar array$2 = Array.prototype;\n\nvar slice$3 = array$2.slice;\n\nfunction ascending$2(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant$6(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop$1() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold$$1 = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold$$1(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = sequence(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending$2);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold$$1 = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), contours) : threshold$$1;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop$1, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold$$1 = constant$6(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold$$1(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = sequence(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant$6(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold$$1 = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), density) : threshold$$1;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nfunction dsvFormat(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsvFormat(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatBody = csv.formatBody;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsvFormat(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatBody = tsv.formatBody;\nvar tsvFormatRows = tsv.formatRows;\n\nfunction autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv$1 = dsvParse(csvParse);\nvar tsv$1 = dsvParse(tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nfunction center$1(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant$7(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX$1(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY$1(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX$1 : x, y == null ? defaultY$1 : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant$7(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$7(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent$1(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area$1(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n}\n\nfunction constant$8(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi$3 ? lambda + Math.round(-lambda / tau$3) * tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nfunction circle() {\n  var center = constant$8([0, 0]),\n      radius = constant$8(90),\n      precision = constant$8(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$8([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$8(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$8(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nfunction polygonContains(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin$1(phi),\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  if (sinPhi === 1) phi = halfPi$2 + epsilon$2;\n  else if (sinPhi === -1) phi = -halfPi$2 - epsilon$2;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent$1() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length$1(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object$1 = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains$1(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate$1(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity$4(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop$2,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$2;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index$1(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform$$1(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform$$1;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos$1(alpha),\n      sinAlpha = sin$1(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform$$1(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform$$1;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees$1;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform$$1 = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform$$1);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin$1(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos$1(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2$1) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos$1(l),\n    asin(sin$1(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate$1(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$5() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$4 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$4.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant$9(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index$2() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$9(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$3() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nfunction area$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross$1(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains$2(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nfunction defaultSource$1() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n\nvar array$3 = Array.prototype;\n\nvar map$2 = array$3.map;\nvar slice$5 = array$3.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal() {\n  var index = map$1(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constant$a(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number$2(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity$6(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$a(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate$$1) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate$$1(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate$$1(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate$$1) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate$$1(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer$1() {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity$6,\n      piecewise$$1,\n      output,\n      input;\n\n  function rescale() {\n    piecewise$$1 = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise$$1(domain.map(transform), range, interpolate$$1)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise$$1(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$2.call(_, number$2), clamp === identity$6 || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity$6, scale) : clamp !== identity$6;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous(transform, untransform) {\n  return transformer$1()(transform, untransform);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(identity$6, identity$6);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity$7(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$2.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity$7(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map$2.call(domain, number$2) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log$1() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log$1()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity$6, identity$6),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity$6, identity$6)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow$1() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy(scale, pow$1()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt$1() {\n  return pow$1.apply(null, arguments).exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisectRight(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisectRight(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nvar t0$1 = new Date,\n    t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear$1,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad$1(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad$1(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad$1(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad$1(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad$1(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad$1(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad$1(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad$1(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad$1(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad$1(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad$1(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad$1(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear$1(d, p) {\n  return pad$1(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad$1(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad$1(z / 60 | 0, \"0\", 2)\n      + pad$1(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad$1(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad$1(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad$1(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad$1(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad$1(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad$1(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad$1(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad$1(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad$1(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad$1(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad$1(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad$1(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad$1(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond$1 = 1000,\n    durationMinute$1 = durationSecond$1 * 60,\n    durationHour$1 = durationMinute$1 * 60,\n    durationDay$1 = durationHour$1 * 24,\n    durationWeek$1 = durationDay$1 * 7,\n    durationMonth = durationDay$1 * 30,\n    durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(identity$6, identity$6),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$2.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$2() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity$6,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$2()(identity$6));\n\n  scale.copy = function() {\n    return copy$1(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$2()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity$6;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisectRight(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer$3() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity$6,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer$3()(identity$6));\n\n  scale.copy = function() {\n    return copy$1(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer$3()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer$3());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer$3());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nfunction ramp(scheme) {\n  return rgbBasis(scheme[scheme.length - 1]);\n}\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$a = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$a);\n\nvar scheme$b = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$b);\n\nvar scheme$c = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$c);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$d);\n\nvar scheme$e = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$e);\n\nvar scheme$f = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$f);\n\nvar scheme$g = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$g);\n\nvar scheme$h = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$h);\n\nvar scheme$i = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$i);\n\nvar scheme$j = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$j);\n\nvar scheme$k = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$k);\n\nvar scheme$l = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$l);\n\nvar scheme$m = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$m);\n\nvar scheme$n = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$n);\n\nvar scheme$o = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$o);\n\nvar scheme$p = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$p);\n\nvar scheme$q = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$q);\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n\nvar c$1 = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c$1.r = 255 * (x = Math.sin(t)) * x;\n  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c$1 + \"\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction constant$b(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon$3) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$b(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4 && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$b(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$b(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$b(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$b(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$b(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$b(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$b(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$b(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$b(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$b(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$b(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area$3() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$b(0),\n      y1 = y$3,\n      defined = constant$b(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$b(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$b(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$b(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$b(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$b(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$b(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$b(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending$1(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity$8(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity$8,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$b(0),\n      endAngle = constant$b(tau$4),\n      padAngle = constant$b(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$b(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$b(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$b(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$b(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area$3().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$b(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$b(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10),\n    kx = Math.sin(tau$4 / 10) * kr,\n    ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c$2 = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c$2 * x0 - s * y0, s * x0 + c$2 * y0);\n    context.lineTo(c$2 * x1 - s * y1, s * x1 + c$2 * y1);\n    context.lineTo(c$2 * x2 - s * y2, s * x2 + c$2 * y2);\n    context.lineTo(c$2 * x0 + s * y0, c$2 * y0 - s * x0);\n    context.lineTo(c$2 * x1 + s * y1, c$2 * y1 - s * x1);\n    context.lineTo(c$2 * x2 + s * y2, c$2 * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant$b(circle$2),\n      size = constant$b(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$b(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$b(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop$3() {}\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis$2(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed$1(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$2(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant$b([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$b(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$b(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$b(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n}\n\nfunction diverging$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n}\n\nfunction appearance(series) {\n  var peaks = series.map(peak);\n  return none$2(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n\nfunction ascending$3(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$2(series) {\n  return ascending$3(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$2(series).reverse();\n}\n\nfunction constant$c(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$c(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$c(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nfunction constant$d(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$9 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$9;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$2() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$9;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$9.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$d(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$d(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$d(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$d([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = thresholdSturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.lch = lch;\nexports.gray = gray;\nexports.cubehelix = cubehelix;\nexports.contours = contours;\nexports.contourDensity = density;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsvFormat;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatBody = csvFormatBody;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatBody = tsvFormatBody;\nexports.tsvFormatRows = tsvFormatRows;\nexports.autoType = autoType;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area$1;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains$1;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHue = hue$1;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$2;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$2;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$7;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleSymlog = symlog;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.tickFormat = tickFormat;\nexports.schemeCategory10 = category10;\nexports.schemeAccent = Accent;\nexports.schemeDark2 = Dark2;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.interpolateBrBG = BrBG;\nexports.schemeBrBG = scheme;\nexports.interpolatePRGn = PRGn;\nexports.schemePRGn = scheme$1;\nexports.interpolatePiYG = PiYG;\nexports.schemePiYG = scheme$2;\nexports.interpolatePuOr = PuOr;\nexports.schemePuOr = scheme$3;\nexports.interpolateRdBu = RdBu;\nexports.schemeRdBu = scheme$4;\nexports.interpolateRdGy = RdGy;\nexports.schemeRdGy = scheme$5;\nexports.interpolateRdYlBu = RdYlBu;\nexports.schemeRdYlBu = scheme$6;\nexports.interpolateRdYlGn = RdYlGn;\nexports.schemeRdYlGn = scheme$7;\nexports.interpolateSpectral = Spectral;\nexports.schemeSpectral = scheme$8;\nexports.interpolateBuGn = BuGn;\nexports.schemeBuGn = scheme$9;\nexports.interpolateBuPu = BuPu;\nexports.schemeBuPu = scheme$a;\nexports.interpolateGnBu = GnBu;\nexports.schemeGnBu = scheme$b;\nexports.interpolateOrRd = OrRd;\nexports.schemeOrRd = scheme$c;\nexports.interpolatePuBuGn = PuBuGn;\nexports.schemePuBuGn = scheme$d;\nexports.interpolatePuBu = PuBu;\nexports.schemePuBu = scheme$e;\nexports.interpolatePuRd = PuRd;\nexports.schemePuRd = scheme$f;\nexports.interpolateRdPu = RdPu;\nexports.schemeRdPu = scheme$g;\nexports.interpolateYlGnBu = YlGnBu;\nexports.schemeYlGnBu = scheme$h;\nexports.interpolateYlGn = YlGn;\nexports.schemeYlGn = scheme$i;\nexports.interpolateYlOrBr = YlOrBr;\nexports.schemeYlOrBr = scheme$j;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeYlOrRd = scheme$k;\nexports.interpolateBlues = Blues;\nexports.schemeBlues = scheme$l;\nexports.interpolateGreens = Greens;\nexports.schemeGreens = scheme$m;\nexports.interpolateGreys = Greys;\nexports.schemeGreys = scheme$n;\nexports.interpolatePurples = Purples;\nexports.schemePurples = scheme$o;\nexports.interpolateReds = Reds;\nexports.schemeReds = scheme$p;\nexports.interpolateOranges = Oranges;\nexports.schemeOranges = scheme$q;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateSinebow = sinebow;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.create = create;\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$3;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging$1;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAppearance = appearance;\nexports.stackOrderAscending = ascending$3;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$9;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-queue/ Version 3.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nexports.queue = queue;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://github.com/topojson/topojson Version 3.0.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar bbox = function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nvar feature = function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n      : feature$1(topology, o);\n};\n\nfunction feature$1(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nvar mesh = function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n};\n\nfunction meshArcs(topology, object$$1, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object$$1, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object$$1);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nvar bisect = function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n};\n\nvar neighbors = function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n};\n\nvar untransform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar quantize = function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n};\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nvar bounds = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16);\nvar uints = new Uint32Array(buffer);\n\nvar hashPoint = function(point) {\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nvar join = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nvar cut = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\n\nfunction reverse$1(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n// Given a cut topology, combines duplicate arcs.\nvar dedup = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nvar delta = function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n};\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nvar extract = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nvar geometry = function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n};\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nvar topology = function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry$$1) {\n    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\nvar prune = function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      oldArcsLength = oldArcs.length,\n      oldIndex = -1,\n      newIndexByOldIndex = new Array(oldArcsLength),\n      newArcsLength = 0,\n      newArcs,\n      newIndex = -1,\n      key;\n\n  function scanGeometry(input) {\n    switch (input.type) {\n      case \"GeometryCollection\": input.geometries.forEach(scanGeometry); break;\n      case \"LineString\": scanArcs(input.arcs); break;\n      case \"MultiLineString\": input.arcs.forEach(scanArcs); break;\n      case \"Polygon\": input.arcs.forEach(scanArcs); break;\n      case \"MultiPolygon\": input.arcs.forEach(scanMultiArcs); break;\n    }\n  }\n\n  function scanArc(index) {\n    if (index < 0) index = ~index;\n    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;\n  }\n\n  function scanArcs(arcs) {\n    arcs.forEach(scanArc);\n  }\n\n  function scanMultiArcs(arcs) {\n    arcs.forEach(scanArcs);\n  }\n\n  function reindexGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(reindexGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: reindexArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(reindexMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function reindexArc(oldIndex) {\n    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];\n  }\n\n  function reindexArcs(arcs) {\n    return arcs.map(reindexArc);\n  }\n\n  function reindexMultiArcs(arcs) {\n    return arcs.map(reindexArcs);\n  }\n\n  for (key in oldObjects) {\n    scanGeometry(oldObjects[key]);\n  }\n\n  newArcs = new Array(newArcsLength);\n\n  while (++oldIndex < oldArcsLength) {\n    if (newIndexByOldIndex[oldIndex]) {\n      newIndexByOldIndex[oldIndex] = ++newIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = reindexGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n};\n\nvar filter = function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n};\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\nvar filterAttached = function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\nfunction planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nfunction planarRingArea$1(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\nvar filterWeight = function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea$1;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n};\n\nvar filterAttachedWeight = function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n};\n\nfunction compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nvar newHeap = function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n};\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nvar presimplify = function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar quantile = function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile$1(array.sort(descending), p);\n};\n\nfunction quantile$1(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\nvar simplify = function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar quarterPi = pi / 4;\nvar radians = pi / 180;\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nfunction sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nfunction sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n\nexports.bbox = bbox;\nexports.feature = feature;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.neighbors = neighbors;\nexports.quantize = quantize;\nexports.transform = transform;\nexports.untransform = untransform;\nexports.topology = topology;\nexports.filter = filter;\nexports.filterAttached = filterAttached;\nexports.filterAttachedWeight = filterAttachedWeight;\nexports.filterWeight = filterWeight;\nexports.planarRingArea = planarRingArea$1;\nexports.planarTriangleArea = planarTriangleArea;\nexports.presimplify = presimplify;\nexports.quantile = quantile;\nexports.simplify = simplify;\nexports.sphericalRingArea = sphericalRingArea;\nexports.sphericalTriangleArea = sphericalTriangleArea;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3-collection'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['d3-collection', 'd3-selection'], factory) :\n  (global.d3 = global.d3 || {}, global.d3.tip = factory(global.d3,global.d3));\n}(this, (function (d3Collection,d3Selection) { 'use strict';\n\n  /**\n   * d3.tip\n   * Copyright (c) 2013-2017 Justin Palmer\n   *\n   * Tooltips for d3.js SVG visualizations\n   */\n  // Public - constructs a new tooltip\n  //\n  // Returns a tip\n  function index() {\n    var direction   = d3TipDirection,\n        offset      = d3TipOffset,\n        html        = d3TipHTML,\n        rootElement = document.body,\n        node        = initNode(),\n        svg         = null,\n        point       = null,\n        target      = null;\n\n    function tip(vis) {\n      svg = getSVGNode(vis);\n      if (!svg) return\n      point = svg.createSVGPoint();\n      rootElement.appendChild(node);\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n\n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop ||\n        rootElement.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft ||\n        rootElement.scrollLeft;\n\n      nodel.html(content)\n        .style('opacity', 1).style('pointer-events', 'all');\n\n      while (i--) nodel.classed(directions[i], false);\n      coords = directionCallbacks.get(dir).apply(this);\n      nodel.classed(dir, true)\n        .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n        .style('left', (coords.left + poffset[1]) + scrollLeft + 'px');\n\n      return tip\n    };\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl();\n      nodel.style('opacity', 0).style('pointer-events', 'none');\n      return tip\n    };\n\n    // Public: Proxy attr calls to the d3 tip container.\n    // Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    // eslint-disable-next-line no-unused-vars\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      }\n\n      var args =  Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.attr.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Proxy style calls to the d3 tip container.\n    // Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    // eslint-disable-next-line no-unused-vars\n    tip.style = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      }\n\n      var args = Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.style.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the root element anchor of the tooltip\n    //\n    // v - root element of the tooltip\n    //\n    // Returns root node of tip\n    tip.rootElement = function(v) {\n      if (!arguments.length) return rootElement\n      rootElement = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if (node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip\n    };\n\n    function d3TipDirection() { return 'n' }\n    function d3TipOffset() { return [0, 0] }\n    function d3TipHTML() { return ' ' }\n\n    var directionCallbacks = d3Collection.map({\n          n:  directionNorth,\n          s:  directionSouth,\n          e:  directionEast,\n          w:  directionWest,\n          nw: directionNorthWest,\n          ne: directionNorthEast,\n          sw: directionSouthWest,\n          se: directionSouthEast\n        }),\n        directions = directionCallbacks.keys();\n\n    function directionNorth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionSouth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n\n    function directionWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n\n    function directionSouthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n\n    function directionSouthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.se.y,\n        left: bbox.se.x\n      }\n    }\n\n    function initNode() {\n      var div = d3Selection.select(document.createElement('div'));\n      div\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('opacity', 0)\n        .style('pointer-events', 'none')\n        .style('box-sizing', 'border-box');\n\n      return div.node()\n    }\n\n    function getSVGNode(element) {\n      var svgNode = element.node();\n      if (!svgNode) return null\n      if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n      return svgNode.ownerSVGElement\n    }\n\n    function getNodeEl() {\n      if (node == null) {\n        node = initNode();\n        // re-add node to DOM\n        rootElement.appendChild(node);\n      }\n      return d3Selection.select(node)\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n    // nw(northwest), sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox(targetShape) {\n      var targetel   = target || targetShape;\n\n      while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n        targetel = targetel.parentNode;\n      }\n\n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y;\n\n      point.x = x;\n      point.y = y;\n      bbox.nw = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.ne = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.se = point.matrixTransform(matrix);\n      point.x -= width;\n      bbox.sw = point.matrixTransform(matrix);\n      point.y -= height / 2;\n      bbox.w = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.e = point.matrixTransform(matrix);\n      point.x -= width / 2;\n      point.y -= height / 2;\n      bbox.n = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.s = point.matrixTransform(matrix);\n\n      return bbox\n    }\n\n    // Private - replace D3JS 3.X d3.functor() function\n    function functor(v) {\n      return typeof v === 'function' ? v : function() {\n        return v\n      }\n    }\n\n    return tip\n  }\n\n  return index;\n\n})));\n","/*!\n *  dc 3.0.12\n *  http://dc-js.github.io/dc.js/\n *  Copyright 2012-2019 Nick Zhu & the dc.js Developers\n *  https://github.com/dc-js/dc.js/blob/master/AUTHORS\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n(function() { function _dc(d3, crossfilter) {\n'use strict';\n\n/**\n * The entire dc.js library is scoped under the **dc** name space. It does not introduce\n * anything else into the global name space.\n *\n * Most `dc` functions are designed to allow function chaining, meaning they return the current chart\n * instance whenever it is appropriate.  The getter forms of functions do not participate in function\n * chaining because they return values that are not the chart, although some,\n * such as {@link dc.baseMixin#svg .svg} and {@link dc.coordinateGridMixin#xAxis .xAxis},\n * return values that are themselves chainable d3 objects.\n * @namespace dc\n * @version 3.0.12\n * @example\n * // Example chaining\n * chart.width(300)\n *      .height(300)\n *      .filter('sunday');\n */\n/*jshint -W079*/\nvar dc = {\n    version: '3.0.12',\n    constants: {\n        CHART_CLASS: 'dc-chart',\n        DEBUG_GROUP_CLASS: 'debug',\n        STACK_CLASS: 'stack',\n        DESELECTED_CLASS: 'deselected',\n        SELECTED_CLASS: 'selected',\n        NODE_INDEX_NAME: '__index__',\n        GROUP_INDEX_NAME: '__group_index__',\n        DEFAULT_CHART_GROUP: '__default_chart_group__',\n        EVENT_DELAY: 40,\n        NEGLIGIBLE_NUMBER: 1e-10\n    },\n    _renderlet: null\n};\n/*jshint +W079*/\n\n/**\n * The dc.chartRegistry object maintains sets of all instantiated dc.js charts under named groups\n * and the default group.\n *\n * A chart group often corresponds to a crossfilter instance. It specifies\n * the set of charts which should be updated when a filter changes on one of the charts or when the\n * global functions {@link dc.filterAll dc.filterAll}, {@link dc.refocusAll dc.refocusAll},\n * {@link dc.renderAll dc.renderAll}, {@link dc.redrawAll dc.redrawAll}, or chart functions\n * {@link dc.baseMixin#renderGroup baseMixin.renderGroup},\n * {@link dc.baseMixin#redrawGroup baseMixin.redrawGroup} are called.\n *\n * @namespace chartRegistry\n * @memberof dc\n * @type {{has, register, deregister, clear, list}}\n */\ndc.chartRegistry = (function () {\n    // chartGroup:string => charts:array\n    var _chartMap = {};\n\n    function initializeChartGroup (group) {\n        if (!group) {\n            group = dc.constants.DEFAULT_CHART_GROUP;\n        }\n\n        if (!_chartMap[group]) {\n            _chartMap[group] = [];\n        }\n\n        return group;\n    }\n\n    return {\n        /**\n         * Determine if a given chart instance resides in any group in the registry.\n         * @method has\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @returns {Boolean}\n         */\n        has: function (chart) {\n            for (var e in _chartMap) {\n                if (_chartMap[e].indexOf(chart) >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /**\n         * Add given chart instance to the given group, creating the group if necessary.\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n         * @method register\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @param {String} [group] Group name\n         */\n        register: function (chart, group) {\n            group = initializeChartGroup(group);\n            _chartMap[group].push(chart);\n        },\n\n        /**\n         * Remove given chart instance from the given group, creating the group if necessary.\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n         * @method deregister\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @param {String} [group] Group name\n         */\n        deregister: function (chart, group) {\n            group = initializeChartGroup(group);\n            for (var i = 0; i < _chartMap[group].length; i++) {\n                if (_chartMap[group][i].anchorName() === chart.anchorName()) {\n                    _chartMap[group].splice(i, 1);\n                    break;\n                }\n            }\n        },\n\n        /**\n         * Clear given group if one is provided, otherwise clears all groups.\n         * @method clear\n         * @memberof dc.chartRegistry\n         * @param {String} group Group name\n         */\n        clear: function (group) {\n            if (group) {\n                delete _chartMap[group];\n            } else {\n                _chartMap = {};\n            }\n        },\n\n        /**\n         * Get an array of each chart instance in the given group.\n         * If no group is provided, the charts in the default group are returned.\n         * @method list\n         * @memberof dc.chartRegistry\n         * @param {String} [group] Group name\n         * @returns {Array<Object>}\n         */\n        list: function (group) {\n            group = initializeChartGroup(group);\n            return _chartMap[group];\n        }\n    };\n})();\n\n/**\n * Add given chart instance to the given group, creating the group if necessary.\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n * @memberof dc\n * @method registerChart\n * @param {Object} chart dc.js chart instance\n * @param {String} [group] Group name\n */\ndc.registerChart = function (chart, group) {\n    dc.chartRegistry.register(chart, group);\n};\n\n/**\n * Remove given chart instance from the given group, creating the group if necessary.\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n * @memberof dc\n * @method deregisterChart\n * @param {Object} chart dc.js chart instance\n * @param {String} [group] Group name\n */\ndc.deregisterChart = function (chart, group) {\n    dc.chartRegistry.deregister(chart, group);\n};\n\n/**\n * Determine if a given chart instance resides in any group in the registry.\n * @memberof dc\n * @method hasChart\n * @param {Object} chart dc.js chart instance\n * @returns {Boolean}\n */\ndc.hasChart = function (chart) {\n    return dc.chartRegistry.has(chart);\n};\n\n/**\n * Clear given group if one is provided, otherwise clears all groups.\n * @memberof dc\n * @method deregisterAllCharts\n * @param {String} group Group name\n */\ndc.deregisterAllCharts = function (group) {\n    dc.chartRegistry.clear(group);\n};\n\n/**\n * Clear all filters on all charts within the given chart group. If the chart group is not given then\n * only charts that belong to the default chart group will be reset.\n * @memberof dc\n * @method filterAll\n * @param {String} [group]\n */\ndc.filterAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].filterAll();\n    }\n};\n\n/**\n * Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is\n * not given then only charts that belong to the default chart group will be reset.\n * @memberof dc\n * @method refocusAll\n * @param {String} [group]\n */\ndc.refocusAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        if (charts[i].focus) {\n            charts[i].focus();\n        }\n    }\n};\n\n/**\n * Re-render all charts belong to the given chart group. If the chart group is not given then only\n * charts that belong to the default chart group will be re-rendered.\n * @memberof dc\n * @method renderAll\n * @param {String} [group]\n */\ndc.renderAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].render();\n    }\n\n    if (dc._renderlet !== null) {\n        dc._renderlet(group);\n    }\n};\n\n/**\n * Redraw all charts belong to the given chart group. If the chart group is not given then only charts\n * that belong to the default chart group will be re-drawn. Redraw is different from re-render since\n * when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting\n * from scratch.\n * @memberof dc\n * @method redrawAll\n * @param {String} [group]\n */\ndc.redrawAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].redraw();\n    }\n\n    if (dc._renderlet !== null) {\n        dc._renderlet(group);\n    }\n};\n\n/**\n * If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\n * immediately.\n * @memberof dc\n * @member disableTransitions\n * @type {Boolean}\n * @default false\n */\ndc.disableTransitions = false;\n\n/**\n * Start a transition on a selection if transitions are globally enabled\n * ({@link dc.disableTransitions} is false) and the duration is greater than zero; otherwise return\n * the selection. Since most operations are the same on a d3 selection and a d3 transition, this\n * allows a common code path for both cases.\n * @memberof dc\n * @method transition\n * @param {d3.selection} selection - the selection to be transitioned\n * @param {Number|Function} [duration=250] - the duration of the transition in milliseconds, a\n * function returning the duration, or 0 for no transition\n * @param {Number|Function} [delay] - the delay of the transition in milliseconds, or a function\n * returning the delay, or 0 for no delay\n * @param {String} [name] - the name of the transition (if concurrent transitions on the same\n * elements are needed)\n * @returns {d3.transition|d3.selection}\n */\ndc.transition = function (selection, duration, delay, name) {\n    if (dc.disableTransitions || duration <= 0) {\n        return selection;\n    }\n\n    var s = selection.transition(name);\n\n    if (duration >= 0 || duration !== undefined) {\n        s = s.duration(duration);\n    }\n    if (delay >= 0 || delay !== undefined) {\n        s = s.delay(delay);\n    }\n\n    return s;\n};\n\n/* somewhat silly, but to avoid duplicating logic */\ndc.optionalTransition = function (enable, duration, delay, name) {\n    if (enable) {\n        return function (selection) {\n            return dc.transition(selection, duration, delay, name);\n        };\n    } else {\n        return function (selection) {\n            return selection;\n        };\n    }\n};\n\n// See http://stackoverflow.com/a/20773846\ndc.afterTransition = function (transition, callback) {\n    if (transition.empty() || !transition.duration) {\n        callback.call(transition);\n    } else {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .on('end', function () {\n                if (!--n) {\n                    callback.call(transition);\n                }\n            });\n    }\n};\n\n/**\n * @namespace units\n * @memberof dc\n * @type {{}}\n */\ndc.units = {};\n\n/**\n * The default value for {@link dc.coordinateGridMixin#xUnits .xUnits} for the\n * {@link dc.coordinateGridMixin Coordinate Grid Chart} and should\n * be used when the x values are a sequence of integers.\n * It is a function that counts the number of integers in the range supplied in its start and end parameters.\n * @method integers\n * @memberof dc.units\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @example\n * chart.xUnits(dc.units.integers) // already the default\n * @param {Number} start\n * @param {Number} end\n * @returns {Number}\n */\ndc.units.integers = function (start, end) {\n    return Math.abs(end - start);\n};\n\n/**\n * This argument can be passed to the {@link dc.coordinateGridMixin#xUnits .xUnits} function of a\n * coordinate grid chart to specify ordinal units for the x axis. Usually this parameter is used in\n * combination with passing\n * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\n * to {@link dc.coordinateGridMixin#x .x}.\n *\n * As of dc.js 3.0, this is purely a placeholder or magic value which causes the chart to go into ordinal mode; the\n * function is not called.\n * @method ordinal\n * @memberof dc.units\n * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @see {@link dc.coordinateGridMixin#x coordinateGridMixin.x}\n * @example\n * chart.xUnits(dc.units.ordinal)\n *      .x(d3.scaleOrdinal())\n */\ndc.units.ordinal = function () {\n    throw new Error('dc.units.ordinal should not be called - it is a placeholder');\n};\n\n/**\n * @namespace fp\n * @memberof dc.units\n * @type {{}}\n */\ndc.units.fp = {};\n/**\n * This function generates an argument for the {@link dc.coordinateGridMixin Coordinate Grid Chart}\n * {@link dc.coordinateGridMixin#xUnits .xUnits} function specifying that the x values are floating-point\n * numbers with the given precision.\n * The returned function determines how many values at the given precision will fit into the range\n * supplied in its start and end parameters.\n * @method precision\n * @memberof dc.units.fp\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @example\n * // specify values (and ticks) every 0.1 units\n * chart.xUnits(dc.units.fp.precision(0.1)\n * // there are 500 units between 0.5 and 1 if the precision is 0.001\n * var thousandths = dc.units.fp.precision(0.001);\n * thousandths(0.5, 1.0) // returns 500\n * @param {Number} precision\n * @returns {Function} start-end unit function\n */\ndc.units.fp.precision = function (precision) {\n    var _f = function (s, e) {\n        var d = Math.abs((e - s) / _f.resolution);\n        if (dc.utils.isNegligible(d - Math.floor(d))) {\n            return Math.floor(d);\n        } else {\n            return Math.ceil(d);\n        }\n    };\n    _f.resolution = precision;\n    return _f;\n};\n\ndc.round = {};\ndc.round.floor = function (n) {\n    return Math.floor(n);\n};\ndc.round.ceil = function (n) {\n    return Math.ceil(n);\n};\ndc.round.round = function (n) {\n    return Math.round(n);\n};\n\ndc.override = function (obj, functionName, newFunction) {\n    var existingFunction = obj[functionName];\n    obj['_' + functionName] = existingFunction;\n    obj[functionName] = newFunction;\n};\n\ndc.renderlet = function (_) {\n    if (!arguments.length) {\n        return dc._renderlet;\n    }\n    dc._renderlet = _;\n    return dc;\n};\n\ndc.instanceOfChart = function (o) {\n    return o instanceof Object && o.__dcFlag__ && true;\n};\n\n// polyfill for IE\n// from https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            do {\n                --i;\n            }\n            while (i >= 0 && matches.item(i) !== this);\n            return i > -1;\n        };\n}\n\ndc.errors = {};\n\ndc.errors.Exception = function (msg) {\n    var _msg = msg || 'Unexpected internal error';\n\n    this.message = _msg;\n\n    this.toString = function () {\n        return _msg;\n    };\n    this.stack = (new Error()).stack;\n};\ndc.errors.Exception.prototype = Object.create(Error.prototype);\ndc.errors.Exception.prototype.constructor = dc.errors.Exception;\n\ndc.errors.InvalidStateException = function () {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.errors.InvalidStateException.prototype = Object.create(dc.errors.Exception.prototype);\ndc.errors.InvalidStateException.prototype.constructor = dc.errors.InvalidStateException;\n\ndc.errors.BadArgumentException = function () {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.errors.BadArgumentException.prototype = Object.create(dc.errors.Exception.prototype);\ndc.errors.BadArgumentException.prototype.constructor = dc.errors.BadArgumentException;\n\n/**\n * The default date format for dc.js\n * @name dateFormat\n * @memberof dc\n * @type {Function}\n * @default d3.timeFormat('%m/%d/%Y')\n */\ndc.dateFormat = d3.timeFormat('%m/%d/%Y');\n\n/**\n * @namespace printers\n * @memberof dc\n * @type {{}}\n */\ndc.printers = {};\n\n/**\n * Converts a list of filters into a readable string.\n * @method filters\n * @memberof dc.printers\n * @param {Array<dc.filters>} filters\n * @returns {String}\n */\ndc.printers.filters = function (filters) {\n    var s = '';\n\n    for (var i = 0; i < filters.length; ++i) {\n        if (i > 0) {\n            s += ', ';\n        }\n        s += dc.printers.filter(filters[i]);\n    }\n\n    return s;\n};\n\n/**\n * Converts a filter into a readable string.\n * @method filter\n * @memberof dc.printers\n * @param {dc.filters|any|Array<any>} filter\n * @returns {String}\n */\ndc.printers.filter = function (filter) {\n    var s = '';\n\n    if (typeof filter !== 'undefined' && filter !== null) {\n        if (filter instanceof Array) {\n            if (filter.length >= 2) {\n                s = '[' + filter.map(function (e) {\n                    return dc.utils.printSingleValue(e);\n                }).join(' -> ') + ']';\n            } else if (filter.length >= 1) {\n                s = dc.utils.printSingleValue(filter[0]);\n            }\n        } else {\n            s = dc.utils.printSingleValue(filter);\n        }\n    }\n\n    return s;\n};\n\n/**\n * Returns a function that given a string property name, can be used to pluck the property off an object.  A function\n * can be passed as the second argument to also alter the data being returned.\n *\n * This can be a useful shorthand method to create accessor functions.\n * @method pluck\n * @memberof dc\n * @example\n * var xPluck = dc.pluck('x');\n * var objA = {x: 1};\n * xPluck(objA) // 1\n * @example\n * var xPosition = dc.pluck('x', function (x, i) {\n *     // `this` is the original datum,\n *     // `x` is the x property of the datum,\n *     // `i` is the position in the array\n *     return this.radius + x;\n * });\n * dc.selectAll('.circle').data(...).x(xPosition);\n * @param {String} n\n * @param {Function} [f]\n * @returns {Function}\n */\ndc.pluck = function (n, f) {\n    if (!f) {\n        return function (d) { return d[n]; };\n    }\n    return function (d, i) { return f.call(d, d[n], i); };\n};\n\n/**\n * @namespace utils\n * @memberof dc\n * @type {{}}\n */\ndc.utils = {};\n\n/**\n * Print a single value filter.\n * @method printSingleValue\n * @memberof dc.utils\n * @param {any} filter\n * @returns {String}\n */\ndc.utils.printSingleValue = function (filter) {\n    var s = '' + filter;\n\n    if (filter instanceof Date) {\n        s = dc.dateFormat(filter);\n    } else if (typeof(filter) === 'string') {\n        s = filter;\n    } else if (dc.utils.isFloat(filter)) {\n        s = dc.utils.printSingleValue.fformat(filter);\n    } else if (dc.utils.isInteger(filter)) {\n        s = Math.round(filter);\n    }\n\n    return s;\n};\ndc.utils.printSingleValue.fformat = d3.format('.2f');\n\n// convert 'day' to 'timeDay' and similar\ndc.utils.toTimeFunc = function (t) {\n    return 'time' + t.charAt(0).toUpperCase() + t.slice(1);\n};\n\n/**\n * Arbitrary add one value to another.\n *\n * If the value l is of type Date, adds r units to it. t becomes the unit.\n * For example dc.utils.add(dt, 3, 'week') will add 3 (r = 3) weeks (t= 'week') to dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * dc.utils.add(30, 10) will give 40 and dc.utils.add(30, '10') will give 33.\n *\n * They also generate strange results if l is a string.\n * @method add\n * @memberof dc.utils\n * @param {Date|Number} l the value to modify\n * @param {String|Number} r the amount by which to modify the value\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n * @returns {Date|Number}\n */\ndc.utils.add = function (l, r, t) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() + r);\n        }\n        t = t || d3.timeDay;\n        if (typeof t !== 'function') {\n            t = d3[dc.utils.toTimeFunc(t)];\n        }\n        return t.offset(l, r);\n    } else if (typeof r === 'string') {\n        var percentage = (+r / 100);\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l + r;\n    }\n};\n\n/**\n * Arbitrary subtract one value from another.\n *\n * If the value l is of type Date, subtracts r units from it. t becomes the unit.\n * For example dc.utils.subtract(dt, 3, 'week') will subtract 3 (r = 3) weeks (t= 'week') from dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * dc.utils.subtract(30, 10) will give 20 and dc.utils.subtract(30, '10') will give 27.\n *\n * They also generate strange results if l is a string.\n * @method subtract\n * @memberof dc.utils\n * @param {Date|Number} l the value to modify\n * @param {String|Number} r the amount by which to modify the value\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n * @returns {Date|Number}\n */\ndc.utils.subtract = function (l, r, t) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() - r);\n        }\n        t = t || d3.timeDay;\n        if (typeof t !== 'function') {\n            t = d3[dc.utils.toTimeFunc(t)];\n        }\n        return t.offset(l, -r);\n    } else if (typeof r === 'string') {\n        var percentage = (+r / 100);\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l - r;\n    }\n};\n\n/**\n * Is the value a number?\n * @method isNumber\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isNumber = function (n) {\n    return n === +n;\n};\n\n/**\n * Is the value a float?\n * @method isFloat\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isFloat = function (n) {\n    return n === +n && n !== (n | 0);\n};\n\n/**\n * Is the value an integer?\n * @method isInteger\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isInteger = function (n) {\n    return n === +n && n === (n | 0);\n};\n\n/**\n * Is the value very close to zero?\n * @method isNegligible\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isNegligible = function (n) {\n    return !dc.utils.isNumber(n) || (n < dc.constants.NEGLIGIBLE_NUMBER && n > -dc.constants.NEGLIGIBLE_NUMBER);\n};\n\n/**\n * Ensure the value is no greater or less than the min/max values.  If it is return the boundary value.\n * @method clamp\n * @memberof dc.utils\n * @param {any} val\n * @param {any} min\n * @param {any} max\n * @returns {any}\n */\ndc.utils.clamp = function (val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n};\n\n/**\n * Given `x`, return a function that always returns `x`.\n *\n * {@link https://github.com/d3/d3/blob/master/CHANGES.md#internals `d3.functor` was removed in d3 version 4}.\n * This function helps to implement the replacement,\n * `typeof x === \"function\" ? x : dc.utils.constant(x)`\n * @method constant\n * @memberof dc.utils\n * @param {any} x\n * @returns {Function}\n */\ndc.utils.constant = function (x) {\n    return function () {\n        return x;\n    };\n};\n\n/**\n * Using a simple static counter, provide a unique integer id.\n * @method uniqueId\n * @memberof dc.utils\n * @returns {Number}\n */\nvar _idCounter = 0;\ndc.utils.uniqueId = function () {\n    return ++_idCounter;\n};\n\n/**\n * Convert a name to an ID.\n * @method nameToId\n * @memberof dc.utils\n * @param {String} name\n * @returns {String}\n */\ndc.utils.nameToId = function (name) {\n    return name.toLowerCase().replace(/[\\s]/g, '_').replace(/[\\.']/g, '');\n};\n\n/**\n * Append or select an item on a parent element.\n * @method appendOrSelect\n * @memberof dc.utils\n * @param {d3.selection} parent\n * @param {String} selector\n * @param {String} tag\n * @returns {d3.selection}\n */\ndc.utils.appendOrSelect = function (parent, selector, tag) {\n    tag = tag || selector;\n    var element = parent.select(selector);\n    if (element.empty()) {\n        element = parent.append(tag);\n    }\n    return element;\n};\n\n/**\n * Return the number if the value is a number; else 0.\n * @method safeNumber\n * @memberof dc.utils\n * @param {Number|any} n\n * @returns {Number}\n */\ndc.utils.safeNumber = function (n) { return dc.utils.isNumber(+n) ? +n : 0;};\n\n/**\n * Return true if both arrays are equal, if both array are null these are considered equal\n * @method arraysEqual\n * @memberof dc.utils\n * @param {Array|null} a1\n * @param {Array|null} a2\n * @returns {Boolean}\n */\ndc.utils.arraysEqual = function (a1, a2) {\n    if (!a1 && !a2) {\n        return true;\n    }\n\n    if (!a1 || !a2) {\n        return false;\n    }\n\n    return a1.length === a2.length &&\n        // If elements are not integers/strings, we hope that it will match because of toString\n        // Test cases cover dates as well.\n        a1.every(function (elem, i) {\n            return elem.valueOf() === a2[i].valueOf();\n        });\n};\n\n// ******** Sunburst Chart ********\ndc.utils.allChildren = function (node) {\n    var paths = [];\n    paths.push(node.path);\n    console.log('currentNode', node);\n    if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            paths = paths.concat(dc.utils.allChildren(node.children[i]));\n        }\n    }\n    return paths;\n};\n\n// builds a d3 Hierarchy from a collection\n// TODO: turn this monster method something better.\ndc.utils.toHierarchy = function (list, accessor) {\n    var root = {'key': 'root', 'children': []};\n    for (var i = 0; i < list.length; i++) {\n        var data = list[i];\n        var parts = data.key;\n        var value = accessor(data);\n        var currentNode = root;\n        for (var j = 0; j < parts.length; j++) {\n            var currentPath = parts.slice(0, j + 1);\n            var children = currentNode.children;\n            var nodeName = parts[j];\n            var childNode;\n            if (j + 1 < parts.length) {\n                // Not yet at the end of the sequence; move down the tree.\n                childNode = findChild(children, nodeName);\n\n                // If we don't already have a child node for this branch, create it.\n                if (childNode === void 0) {\n                    childNode = {'key': nodeName, 'children': [], 'path': currentPath};\n                    children.push(childNode);\n                }\n                currentNode = childNode;\n            } else {\n                // Reached the end of the sequence; create a leaf node.\n                childNode = {'key': nodeName, 'value': value, 'data': data, 'path': currentPath};\n                children.push(childNode);\n            }\n        }\n    }\n    return root;\n};\n\nfunction findChild (children, nodeName) {\n    for (var k = 0; k < children.length; k++) {\n        if (children[k].key === nodeName) {\n            return children[k];\n        }\n    }\n}\n\ndc.utils.getAncestors = function (node) {\n    var path = [];\n    var current = node;\n    while (current.parent) {\n        path.unshift(current.name);\n        current = current.parent;\n    }\n    return path;\n};\n\ndc.utils.arraysIdentical = function (a, b) {\n    var i = a.length;\n    if (i !== b.length) {\n        return false;\n    }\n    while (i--) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n\nif (typeof Object.assign !== 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, 'assign', {\n        value: function assign (target, varArgs) { // .length of function is 2\n            'use strict';\n            if (target === null) { // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource !== null) { // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        },\n        writable: true,\n        configurable: true\n    });\n}\n\n/**\n * Provides basis logging and deprecation utilities\n * @class logger\n * @memberof dc\n * @returns {dc.logger}\n */\ndc.logger = (function () {\n\n    var _logger = {};\n\n    /**\n     * Enable debug level logging. Set to `false` by default.\n     * @name enableDebugLog\n     * @memberof dc.logger\n     * @instance\n     */\n    _logger.enableDebugLog = false;\n\n    /**\n     * Put a warning message to console\n     * @method warn\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.warn('Invalid use of .tension on CurveLinear');\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.warn = function (msg) {\n        if (console) {\n            if (console.warn) {\n                console.warn(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return _logger;\n    };\n\n    var _alreadyWarned = {};\n\n    /**\n     * Put a warning message to console. It will warn only on unique messages.\n     * @method warnOnce\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.warnOnce('Invalid use of .tension on CurveLinear');\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.warnOnce = function (msg) {\n        if (!_alreadyWarned[msg]) {\n            _alreadyWarned[msg] = true;\n\n            dc.logger.warn(msg);\n        }\n\n        return _logger;\n    };\n\n    /**\n     * Put a debug message to console. It is controlled by `dc.logger.enableDebugLog`\n     * @method debug\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.debug('Total number of slices: ' + numSlices);\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.debug = function (msg) {\n        if (_logger.enableDebugLog && console) {\n            if (console.debug) {\n                console.debug(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return _logger;\n    };\n\n    /**\n     * Used to deprecate a function. It will return a wrapped version of the function, which will\n     * will issue a warning when invoked. The warning will be issued only once.\n     *\n     * @method deprecate\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * _chart.interpolate = dc.logger.deprecate(function (interpolate) {\n     *    if (!arguments.length) {\n     *        return _interpolate;\n     *    }\n     *    _interpolate = interpolate;\n     *    return _chart;\n     * }, 'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\n     * @param {Function} [fn]\n     * @param {String} [msg]\n     * @returns {Function}\n     */\n    _logger.deprecate = function (fn, msg) {\n        // Allow logging of deprecation\n        var warned = false;\n        function deprecated () {\n            if (!warned) {\n                _logger.warn(msg);\n                warned = true;\n            }\n            return fn.apply(this, arguments);\n        }\n        return deprecated;\n    };\n\n    /**\n     * Used to provide an informational message for a function. It will return a wrapped version of\n     * the function, which will will issue a messsage with stack when invoked. The message will be\n     * issued only once.\n     *\n     * @method annotate\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * _chart.interpolate = dc.logger.annotate(function (interpolate) {\n     *    if (!arguments.length) {\n     *        return _interpolate;\n     *    }\n     *    _interpolate = interpolate;\n     *    return _chart;\n     * }, 'dc.lineChart.interpolate has been annotated since version 3.0 use dc.lineChart.curve instead');\n     * @param {Function} [fn]\n     * @param {String} [msg]\n     * @returns {Function}\n     */\n    _logger.annotate = function (fn, msg) {\n        // Allow logging of deprecation\n        var warned = false;\n        function annotated () {\n            if (!warned) {\n                console.groupCollapsed(msg);\n                console.trace();\n                console.groupEnd();\n                warned = true;\n            }\n            return fn.apply(this, arguments);\n        }\n        return annotated;\n    };\n\n    return _logger;\n})();\n\n/**\n * General configuration\n *\n * @class config\n * @memberof dc\n * @returns {dc.config}\n */\ndc.config = (function () {\n    var _config = {};\n\n    // D3v5 has removed schemeCategory20c, copied here for backward compatibility\n    var _schemeCategory20c = [\n        '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d',\n        '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476',\n        '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n        '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\n    var _defaultColors = _schemeCategory20c;\n\n    /**\n     * Set the default color scheme for ordinal charts. Changing it will impact all ordinal charts.\n     *\n     * By default it is set to a copy of\n     * `d3.schemeCategory20c` for backward compatibility. This color scheme has been\n     * [removed from D3v5](https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50).\n     * In DC 3.1 release it will change to a more appropriate default.\n     *\n     * @example\n     * dc.config.defaultColors(d3.schemeSet1)\n     * @method defaultColors\n     * @memberof dc.config\n     * @instance\n     * @param {Array} [colors]\n     * @returns {Array|dc.config}\n     */\n    _config.defaultColors = function (colors) {\n        if (!arguments.length) {\n            // Issue warning if it uses _schemeCategory20c\n            if (_defaultColors === _schemeCategory20c) {\n                dc.logger.warnOnce('You are using d3.schemeCategory20c, which has been removed in D3v5. ' +\n                    'See the explanation at https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50. ' +\n                    'DC is using it for backward compatibility, however it will be changed in DCv3.1. ' +\n                    'You can change it by calling dc.config.defaultColors(newScheme). ' +\n                    'See https://github.com/d3/d3-scale-chromatic for some alternatives.');\n            }\n            return _defaultColors;\n        }\n        _defaultColors = colors;\n        return _config;\n    };\n\n    return _config;\n})();\n\ndc.events = {\n    current: null\n};\n\n/**\n * This function triggers a throttled event function with a specified delay (in milli-seconds).  Events\n * that are triggered repetitively due to user interaction such brush dragging might flood the library\n * and invoke more renders than can be executed in time. Using this function to wrap your event\n * function allows the library to smooth out the rendering by throttling events and only responding to\n * the most recent event.\n * @name events.trigger\n * @memberof dc\n * @example\n * chart.on('renderlet', function(chart) {\n *     // smooth the rendering through event throttling\n *     dc.events.trigger(function(){\n *         // focus some other chart to the range selected by user on this chart\n *         someOtherChart.focus(chart.filter());\n *     });\n * })\n * @param {Function} closure\n * @param {Number} [delay]\n */\ndc.events.trigger = function (closure, delay) {\n    if (!delay) {\n        closure();\n        return;\n    }\n\n    dc.events.current = closure;\n\n    setTimeout(function () {\n        if (closure === dc.events.current) {\n            closure();\n        }\n    }, delay);\n};\n\n/**\n * The dc.js filters are functions which are passed into crossfilter to chose which records will be\n * accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one\n * dimension will affect all the other dimensions but not that one.  dc always applies a filter\n * function to the dimension; the function combines multiple filters and if any of them accept a\n * record, it is filtered in.\n *\n * These filter constructors are used as appropriate by the various charts to implement brushing.  We\n * mention below which chart uses which filter.  In some cases, many instances of a filter will be added.\n *\n * Each of the dc.js filters is an object with the following properties:\n * * `isFiltered` - a function that returns true if a value is within the filter\n * * `filterType` - a string identifying the filter, here the name of the constructor\n *\n * Currently these filter objects are also arrays, but this is not a requirement. Custom filters\n * can be used as long as they have the properties above.\n * @namespace filters\n * @memberof dc\n * @type {{}}\n */\ndc.filters = {};\n\n/**\n * RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X\n * axis brushing for the {@link dc.coordinateGridMixin coordinate grid charts}.\n *\n * Its `filterType` is 'RangedFilter'\n * @name RangedFilter\n * @memberof dc.filters\n * @param {Number} low\n * @param {Number} high\n * @returns {Array<Number>}\n * @constructor\n */\ndc.filters.RangedFilter = function (low, high) {\n    var range = new Array(low, high);\n    range.isFiltered = function (value) {\n        return value >= this[0] && value < this[1];\n    };\n    range.filterType = 'RangedFilter';\n\n    return range;\n};\n\n/**\n * TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the\n * {@link dc.heatMap heat map chart} to include particular cells as they are clicked.  (Rows and columns are\n * filtered by filtering all the cells in the row or column.)\n *\n * Its `filterType` is 'TwoDimensionalFilter'\n * @name TwoDimensionalFilter\n * @memberof dc.filters\n * @param {Array<Number>} filter\n * @returns {Array<Number>}\n * @constructor\n */\ndc.filters.TwoDimensionalFilter = function (filter) {\n    if (filter === null) { return null; }\n\n    var f = filter;\n    f.isFiltered = function (value) {\n        return value.length && value.length === f.length &&\n               value[0] === f[0] && value[1] === f[1];\n    };\n    f.filterType = 'TwoDimensionalFilter';\n\n    return f;\n};\n\n/**\n * The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular\n * region. It is used by the {@link dc.scatterPlot scatter plot} to implement rectangular brushing.\n *\n * It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that\n * `x1 <= x2` and `y1 <= y2`. It then returns a filter which accepts any points which are in the\n * rectangular range including the lower values but excluding the higher values.\n *\n * If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as\n * two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <\n * x2`.\n *\n * Its `filterType` is 'RangedTwoDimensionalFilter'\n * @name RangedTwoDimensionalFilter\n * @memberof dc.filters\n * @param {Array<Array<Number>>} filter\n * @returns {Array<Array<Number>>}\n * @constructor\n */\ndc.filters.RangedTwoDimensionalFilter = function (filter) {\n    if (filter === null) { return null; }\n\n    var f = filter;\n    var fromBottomLeft;\n\n    if (f[0] instanceof Array) {\n        fromBottomLeft = [\n            [Math.min(filter[0][0], filter[1][0]), Math.min(filter[0][1], filter[1][1])],\n            [Math.max(filter[0][0], filter[1][0]), Math.max(filter[0][1], filter[1][1])]\n        ];\n    } else {\n        fromBottomLeft = [[filter[0], -Infinity], [filter[1], Infinity]];\n    }\n\n    f.isFiltered = function (value) {\n        var x, y;\n\n        if (value instanceof Array) {\n            x = value[0];\n            y = value[1];\n        } else {\n            x = value;\n            y = fromBottomLeft[0][1];\n        }\n\n        return x >= fromBottomLeft[0][0] && x < fromBottomLeft[1][0] &&\n               y >= fromBottomLeft[0][1] && y < fromBottomLeft[1][1];\n    };\n    f.filterType = 'RangedTwoDimensionalFilter';\n\n    return f;\n};\n\n// ******** Sunburst Chart ********\n\n/**\n * HierarchyFilter is a filter which accepts a key path as an array. It matches any node at, or\n * child of, the given path. It is used by the {@link dc.sunburstChart sunburst chart} to include particular cells and all\n * their children as they are clicked.\n *\n * @name HierarchyFilter\n * @memberof dc.filters\n * @param {String} path\n * @returns {Array<String>}\n * @constructor\n */\ndc.filters.HierarchyFilter = function (path) {\n    if (path === null) {\n        return null;\n    }\n\n    var filter = path.slice(0);\n    filter.isFiltered = function (value) {\n        if (!(filter.length && value && value.length && value.length >= filter.length)) {\n            return false;\n        }\n\n        for (var i = 0; i < filter.length; i++) {\n            if (value[i] !== filter[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n    return filter;\n};\n\n/**\n * `dc.baseMixin` is an abstract functional object representing a basic `dc` chart object\n * for all chart and widget implementations. Methods from the {@link #dc.baseMixin dc.baseMixin} are inherited\n * and available on all chart implementations in the `dc` library.\n * @name baseMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.baseMixin}\n */\ndc.baseMixin = function (_chart) {\n    _chart.__dcFlag__ = dc.utils.uniqueId();\n\n    var _dimension;\n    var _group;\n\n    var _anchor;\n    var _root;\n    var _svg;\n    var _isChild;\n\n    var _minWidth = 200;\n    var _defaultWidthCalc = function (element) {\n        var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n        return (width && width > _minWidth) ? width : _minWidth;\n    };\n    var _widthCalc = _defaultWidthCalc;\n\n    var _minHeight = 200;\n    var _defaultHeightCalc = function (element) {\n        var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n        return (height && height > _minHeight) ? height : _minHeight;\n    };\n    var _heightCalc = _defaultHeightCalc;\n    var _width, _height;\n    var _useViewBoxResizing = false;\n\n    var _keyAccessor = dc.pluck('key');\n    var _valueAccessor = dc.pluck('value');\n    var _label = dc.pluck('key');\n\n    var _ordering = dc.pluck('key');\n    var _orderSort;\n\n    var _renderLabel = false;\n\n    var _title = function (d) {\n        return _chart.keyAccessor()(d) + ': ' + _chart.valueAccessor()(d);\n    };\n    var _renderTitle = true;\n    var _controlsUseVisibility = false;\n\n    var _transitionDuration = 750;\n\n    var _transitionDelay = 0;\n\n    var _filterPrinter = dc.printers.filters;\n\n    var _mandatoryAttributes = ['dimension', 'group'];\n\n    var _chartGroup = dc.constants.DEFAULT_CHART_GROUP;\n\n    var _listeners = d3.dispatch(\n        'preRender',\n        'postRender',\n        'preRedraw',\n        'postRedraw',\n        'filtered',\n        'zoomed',\n        'renderlet',\n        'pretransition');\n\n    var _legend;\n    var _commitHandler;\n\n    var _filters = [];\n    var _filterHandler = function (dimension, filters) {\n        if (filters.length === 0) {\n            dimension.filter(null);\n        } else if (filters.length === 1 && !filters[0].isFiltered) {\n            // single value and not a function-based filter\n            dimension.filterExact(filters[0]);\n        } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n            // single range-based filter\n            dimension.filterRange(filters[0]);\n        } else {\n            dimension.filterFunction(function (d) {\n                for (var i = 0; i < filters.length; i++) {\n                    var filter = filters[i];\n                    if (filter.isFiltered && filter.isFiltered(d)) {\n                        return true;\n                    } else if (filter <= d && filter >= d) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return filters;\n    };\n\n    var _data = function (group) {\n        return group.all();\n    };\n\n    /**\n     * Set or get the height attribute of a chart. The height is applied to the SVGElement generated by\n     * the chart when rendered (or re-rendered). If a value is given, then it will be used to calculate\n     * the new height and the chart returned for method chaining.  The value can either be a numeric, a\n     * function, or falsy. If no value is specified then the value of the current height attribute will\n     * be returned.\n     *\n     * By default, without an explicit height being given, the chart will select the width of its\n     * anchor element. If that isn't possible it defaults to 200 (provided by the\n     * {@link dc.baseMixin#minHeight minHeight} property). Setting the value falsy will return\n     * the chart to the default behavior.\n     * @method height\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#minHeight minHeight}\n     * @example\n     * // Default height\n     * chart.height(function (element) {\n     *     var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n     *     return (height && height > chart.minHeight()) ? height : chart.minHeight();\n     * });\n     *\n     * chart.height(250); // Set the chart's height to 250px;\n     * chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function\n     * chart.height(null); // reset the height to the default auto calculation\n     * @param {Number|Function} [height]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.height = function (height) {\n        if (!arguments.length) {\n            if (!dc.utils.isNumber(_height)) {\n                // only calculate once\n                _height = _heightCalc(_root.node());\n            }\n            return _height;\n        }\n        _heightCalc = height ? (typeof height === 'function' ? height : dc.utils.constant(height)) : _defaultHeightCalc;\n        _height = undefined;\n        return _chart;\n    };\n\n    /**\n     * Set or get the width attribute of a chart.\n     * @method width\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#height height}\n     * @see {@link dc.baseMixin#minWidth minWidth}\n     * @example\n     * // Default width\n     * chart.width(function (element) {\n     *     var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n     *     return (width && width > chart.minWidth()) ? width : chart.minWidth();\n     * });\n     * @param {Number|Function} [width]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.width = function (width) {\n        if (!arguments.length) {\n            if (!dc.utils.isNumber(_width)) {\n                // only calculate once\n                _width = _widthCalc(_root.node());\n            }\n            return _width;\n        }\n        _widthCalc = width ? (typeof width === 'function' ? width : dc.utils.constant(width)) : _defaultWidthCalc;\n        _width = undefined;\n        return _chart;\n    };\n\n    /**\n     * Set or get the minimum width attribute of a chart. This only has effect when used with the default\n     * {@link dc.baseMixin#width width} function.\n     * @method minWidth\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#width width}\n     * @param {Number} [minWidth=200]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.minWidth = function (minWidth) {\n        if (!arguments.length) {\n            return _minWidth;\n        }\n        _minWidth = minWidth;\n        return _chart;\n    };\n\n    /**\n     * Set or get the minimum height attribute of a chart. This only has effect when used with the default\n     * {@link dc.baseMixin#height height} function.\n     * @method minHeight\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#height height}\n     * @param {Number} [minHeight=200]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.minHeight = function (minHeight) {\n        if (!arguments.length) {\n            return _minHeight;\n        }\n        _minHeight = minHeight;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off using the SVG\n     * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox `viewBox` attribute}.\n     * When enabled, `viewBox` will be set on the svg root element instead of `width` and `height`.\n     * Requires that the chart aspect ratio be defined using chart.width(w) and chart.height(h).\n     *\n     * This will maintain the aspect ratio while enabling the chart to resize responsively to the\n     * space given to the chart using CSS. For example, the chart can use `width: 100%; height:\n     * 100%` or absolute positioning to resize to its parent div.\n     *\n     * Since the text will be sized as if the chart is drawn according to the width and height, and\n     * will be resized if the chart is any other size, you need to set the chart width and height so\n     * that the text looks good. In practice, 600x400 seems to work pretty well for most charts.\n     *\n     * You can see examples of this resizing strategy in the [Chart Resizing\n     * Examples](http://dc-js.github.io/dc.js/resizing/); just add `?resize=viewbox` to any of the\n     * one-chart examples to enable `useViewBoxResizing`.\n     * @method useViewBoxResizing\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [useViewBoxResizing=false]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.useViewBoxResizing = function (useViewBoxResizing) {\n        if (!arguments.length) {\n            return _useViewBoxResizing;\n        }\n        _useViewBoxResizing = useViewBoxResizing;\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Set or get the dimension attribute of a chart. In `dc`, a dimension can be any valid\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter dimension}\n     *\n     * If a value is given, then it will be used as the new dimension. If no value is specified then\n     * the current dimension will be returned.\n     * @method dimension\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter.dimension}\n     * @example\n     * var index = crossfilter([]);\n     * var dimension = index.dimension(dc.pluck('key'));\n     * chart.dimension(dimension);\n     * @param {crossfilter.dimension} [dimension]\n     * @returns {crossfilter.dimension|dc.baseMixin}\n     */\n    _chart.dimension = function (dimension) {\n        if (!arguments.length) {\n            return _dimension;\n        }\n        _dimension = dimension;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * Set the data callback or retrieve the chart's data set. The data callback is passed the chart's\n     * group and by default will return\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all}.\n     * This behavior may be modified to, for instance, return only the top 5 groups.\n     * @method data\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // Default data function\n     * chart.data(function (group) { return group.all(); });\n     *\n     * chart.data(function (group) { return group.top(5); });\n     * @param {Function} [callback]\n     * @returns {*|dc.baseMixin}\n     */\n    _chart.data = function (callback) {\n        if (!arguments.length) {\n            return _data.call(_chart, _group);\n        }\n        _data = typeof callback === 'function' ? callback : dc.utils.constant(callback);\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Set or get the group attribute of a chart. In `dc` a group is a\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter group}.\n     * Usually the group should be created from the particular dimension associated with the same chart. If a value is\n     * given, then it will be used as the new group.\n     *\n     * If no value specified then the current group will be returned.\n     * If `name` is specified then it will be used to generate legend label.\n     * @method group\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n     * @example\n     * var index = crossfilter([]);\n     * var dimension = index.dimension(dc.pluck('key'));\n     * chart.dimension(dimension);\n     * chart.group(dimension.group(crossfilter.reduceSum()));\n     * @param {crossfilter.group} [group]\n     * @param {String} [name]\n     * @returns {crossfilter.group|dc.baseMixin}\n     */\n    _chart.group = function (group, name) {\n        if (!arguments.length) {\n            return _group;\n        }\n        _group = group;\n        _chart._groupName = name;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * Get or set an accessor to order ordinal dimensions.  The chart uses\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\n     * to sort elements; this accessor returns the value to order on.\n     * @method ordering\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\n     * @example\n     * // Default ordering accessor\n     * _chart.ordering(dc.pluck('key'));\n     * @param {Function} [orderFunction]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.ordering = function (orderFunction) {\n        if (!arguments.length) {\n            return _ordering;\n        }\n        _ordering = orderFunction;\n        _orderSort = crossfilter.quicksort.by(_ordering);\n        _chart.expireCache();\n        return _chart;\n    };\n\n    _chart._computeOrderedGroups = function (data) {\n        var dataCopy = data.slice(0);\n\n        if (dataCopy.length <= 1) {\n            return dataCopy;\n        }\n\n        if (!_orderSort) {\n            _orderSort = crossfilter.quicksort.by(_ordering);\n        }\n\n        return _orderSort(dataCopy, 0, dataCopy.length);\n    };\n\n    /**\n     * Clear all filters associated with this chart. The same effect can be achieved by calling\n     * {@link dc.baseMixin#filter chart.filter(null)}.\n     * @method filterAll\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.filterAll = function () {\n        return _chart.filter(null);\n    };\n\n    /**\n     * Execute d3 single selection in the chart's scope using the given selector and return the d3\n     * selection.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     * @method select\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3.select}\n     * @example\n     * // Has the same effect as d3.select('#chart-id').select(selector)\n     * chart.select(selector)\n     * @returns {d3.selection}\n     */\n    _chart.select = function (s) {\n        return _root.select(s);\n    };\n\n    /**\n     * Execute in scope d3 selectAll using the given selector and return d3 selection result.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     * @method selectAll\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#selectAll d3.selectAll}\n     * @example\n     * // Has the same effect as d3.select('#chart-id').selectAll(selector)\n     * chart.selectAll(selector)\n     * @returns {d3.selection}\n     */\n    _chart.selectAll = function (s) {\n        return _root ? _root.selectAll(s) : null;\n    };\n\n    /**\n     * Set the root SVGElement to either be an existing chart's root; or any valid [d3 single\n     * selector](https://github.com/d3/d3-selection/blob/master/README.md#selecting-elements) specifying a dom\n     * block element such as a div; or a dom element or d3 selection. Optionally registers the chart\n     * within the chartGroup. This class is called internally on chart initialization, but be called\n     * again to relocate the chart. However, it will orphan any previously created SVGElements.\n     * @method anchor\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {anchorChart|anchorSelector|anchorNode} [parent]\n     * @param {String} [chartGroup]\n     * @returns {String|node|d3.selection|dc.baseMixin}\n     */\n    _chart.anchor = function (parent, chartGroup) {\n        if (!arguments.length) {\n            return _anchor;\n        }\n        if (dc.instanceOfChart(parent)) {\n            _anchor = parent.anchor();\n            if (_anchor.children) { // is _anchor a div?\n                _anchor = '#' + parent.anchorName();\n            }\n            _root = parent.root();\n            _isChild = true;\n        } else if (parent) {\n            if (parent.select && parent.classed) { // detect d3 selection\n                _anchor = parent.node();\n            } else {\n                _anchor = parent;\n            }\n            _root = d3.select(_anchor);\n            _root.classed(dc.constants.CHART_CLASS, true);\n            dc.registerChart(_chart, chartGroup);\n            _isChild = false;\n        } else {\n            throw new dc.errors.BadArgumentException('parent must be defined');\n        }\n        _chartGroup = chartGroup;\n        return _chart;\n    };\n\n    /**\n     * Returns the DOM id for the chart's anchored location.\n     * @method anchorName\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {String}\n     */\n    _chart.anchorName = function () {\n        var a = _chart.anchor();\n        if (a && a.id) {\n            return a.id;\n        }\n        if (a && a.replace) {\n            return a.replace('#', '');\n        }\n        return 'dc-chart' + _chart.chartID();\n    };\n\n    /**\n     * Returns the root element where a chart resides. Usually it will be the parent div element where\n     * the SVGElement was created. You can also pass in a new root element however this is usually handled by\n     * dc internally. Resetting the root element on a chart outside of dc internals may have\n     * unexpected consequences.\n     * @method root\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement HTMLElement}\n     * @param {HTMLElement} [rootElement]\n     * @returns {HTMLElement|dc.baseMixin}\n     */\n    _chart.root = function (rootElement) {\n        if (!arguments.length) {\n            return _root;\n        }\n        _root = rootElement;\n        return _chart;\n    };\n\n    /**\n     * Returns the top SVGElement for this specific chart. You can also pass in a new SVGElement,\n     * however this is usually handled by dc internally. Resetting the SVGElement on a chart outside\n     * of dc internals may have unexpected consequences.\n     * @method svg\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\n     * @param {SVGElement|d3.selection} [svgElement]\n     * @returns {SVGElement|d3.selection|dc.baseMixin}\n     */\n    _chart.svg = function (svgElement) {\n        if (!arguments.length) {\n            return _svg;\n        }\n        _svg = svgElement;\n        return _chart;\n    };\n\n    /**\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\n     * @method resetSvg\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\n     * @returns {SVGElement}\n     */\n    _chart.resetSvg = function () {\n        _chart.select('svg').remove();\n        return generateSvg();\n    };\n\n    function sizeSvg () {\n        if (_svg) {\n            if (!_useViewBoxResizing) {\n                _svg\n                    .attr('width', _chart.width())\n                    .attr('height', _chart.height());\n            } else if (!_svg.attr('viewBox')) {\n                _svg\n                    .attr('viewBox', '0 0 ' + _chart.width() + ' ' + _chart.height());\n            }\n        }\n    }\n\n    function generateSvg () {\n        _svg = _chart.root().append('svg');\n        sizeSvg();\n        return _svg;\n    }\n\n    /**\n     * Set or get the filter printer function. The filter printer function is used to generate human\n     * friendly text for filter value(s) associated with the chart instance. The text will get shown\n     * in the `.filter element; see {@link dc.baseMixin#turnOnControls turnOnControls}.\n     *\n     * By default dc charts use a default filter printer {@link dc.printers.filters dc.printers.filters}\n     * that provides simple printing support for both single value and ranged filters.\n     * @method filterPrinter\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // for a chart with an ordinal brush, print the filters in upper case\n     * chart.filterPrinter(function(filters) {\n     *   return filters.map(function(f) { return f.toUpperCase(); }).join(', ');\n     * });\n     * // for a chart with a range brush, print the filter as start and extent\n     * chart.filterPrinter(function(filters) {\n     *   return 'start ' + dc.utils.printSingleValue(filters[0][0]) +\n     *     ' extent ' + dc.utils.printSingleValue(filters[0][1] - filters[0][0]);\n     * });\n     * @param {Function} [filterPrinterFunction=dc.printers.filters]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.filterPrinter = function (filterPrinterFunction) {\n        if (!arguments.length) {\n            return _filterPrinter;\n        }\n        _filterPrinter = filterPrinterFunction;\n        return _chart;\n    };\n\n    /**\n     * If set, use the `visibility` attribute instead of the `display` attribute for showing/hiding\n     * chart reset and filter controls, for less disruption to the layout.\n     * @method controlsUseVisibility\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [controlsUseVisibility=false]\n     * @returns {Boolean|dc.baseMixin}\n     **/\n    _chart.controlsUseVisibility = function (useVisibility) {\n        if (!arguments.length) {\n            return _controlsUseVisibility;\n        }\n        _controlsUseVisibility = useVisibility;\n        return _chart;\n    };\n\n    /**\n     * Turn on optional control elements within the root element. dc currently supports the\n     * following html control elements.\n     * * root.selectAll('.reset') - elements are turned on if the chart has an active filter. This type\n     * of control element is usually used to store a reset link to allow user to reset filter on a\n     * certain chart. This element will be turned off automatically if the filter is cleared.\n     * * root.selectAll('.filter') elements are turned on if the chart has an active filter. The text\n     * content of this element is then replaced with the current filter value using the filter printer\n     * function. This type of element will be turned off automatically if the filter is cleared.\n     * @method turnOnControls\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.turnOnControls = function () {\n        if (_root) {\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\n            _chart.selectAll('.reset').style(attribute, null);\n            _chart.selectAll('.filter').text(_filterPrinter(_chart.filters())).style(attribute, null);\n        }\n        return _chart;\n    };\n\n    /**\n     * Turn off optional control elements within the root element.\n     * @method turnOffControls\n     * @memberof dc.baseMixin\n     * @see {@link dc.baseMixin#turnOnControls turnOnControls}\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.turnOffControls = function () {\n        if (_root) {\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\n            var value = _chart.controlsUseVisibility() ? 'hidden' : 'none';\n            _chart.selectAll('.reset').style(attribute, value);\n            _chart.selectAll('.filter').style(attribute, value).text(_chart.filter());\n        }\n        return _chart;\n    };\n\n    /**\n     * Set or get the animation transition duration (in milliseconds) for this chart instance.\n     * @method transitionDuration\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Number} [duration=750]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.transitionDuration = function (duration) {\n        if (!arguments.length) {\n            return _transitionDuration;\n        }\n        _transitionDuration = duration;\n        return _chart;\n    };\n\n    /**\n     * Set or get the animation transition delay (in milliseconds) for this chart instance.\n     * @method transitionDelay\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Number} [delay=0]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.transitionDelay = function (delay) {\n        if (!arguments.length) {\n            return _transitionDelay;\n        }\n        _transitionDelay = delay;\n        return _chart;\n    };\n\n    _chart._mandatoryAttributes = function (_) {\n        if (!arguments.length) {\n            return _mandatoryAttributes;\n        }\n        _mandatoryAttributes = _;\n        return _chart;\n    };\n\n    function checkForMandatoryAttributes (a) {\n        if (!_chart[a] || !_chart[a]()) {\n            throw new dc.errors.InvalidStateException('Mandatory attribute chart.' + a +\n                ' is missing on chart[#' + _chart.anchorName() + ']');\n        }\n    }\n\n    /**\n     * Invoking this method will force the chart to re-render everything from scratch. Generally it\n     * should only be used to render the chart for the first time on the page or if you want to make\n     * sure everything is redrawn from scratch instead of relying on the default incremental redrawing\n     * behaviour.\n     * @method render\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.render = function () {\n        _height = _width = undefined; // force recalculate\n        _listeners.call('preRender', _chart, _chart);\n\n        if (_mandatoryAttributes) {\n            _mandatoryAttributes.forEach(checkForMandatoryAttributes);\n        }\n\n        var result = _chart._doRender();\n\n        if (_legend) {\n            _legend.render();\n        }\n\n        _chart._activateRenderlets('postRender');\n\n        return result;\n    };\n\n    _chart._activateRenderlets = function (event) {\n        _listeners.call('pretransition', _chart, _chart);\n        if (_chart.transitionDuration() > 0 && _svg) {\n            _svg.transition().duration(_chart.transitionDuration()).delay(_chart.transitionDelay())\n                .on('end', function () {\n                    _listeners.call('renderlet', _chart, _chart);\n                    if (event) {\n                        _listeners.call(event, _chart, _chart);\n                    }\n                });\n        } else {\n            _listeners.call('renderlet', _chart, _chart);\n            if (event) {\n                _listeners.call(event, _chart, _chart);\n            }\n        }\n    };\n\n    /**\n     * Calling redraw will cause the chart to re-render data changes incrementally. If there is no\n     * change in the underlying data dimension then calling this method will have no effect on the\n     * chart. Most chart interaction in dc will automatically trigger this method through internal\n     * events (in particular {@link dc.redrawAll dc.redrawAll}); therefore, you only need to\n     * manually invoke this function if data is manipulated outside of dc's control (for example if\n     * data is loaded in the background using\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}).\n     * @method redraw\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.redraw = function () {\n        sizeSvg();\n        _listeners.call('preRedraw', _chart, _chart);\n\n        var result = _chart._doRedraw();\n\n        if (_legend) {\n            _legend.render();\n        }\n\n        _chart._activateRenderlets('postRedraw');\n\n        return result;\n    };\n\n    /**\n     * Gets/sets the commit handler. If the chart has a commit handler, the handler will be called when\n     * the chart's filters have changed, in order to send the filter data asynchronously to a server.\n     *\n     * Unlike other functions in dc.js, the commit handler is asynchronous. It takes two arguments:\n     * a flag indicating whether this is a render (true) or a redraw (false), and a callback to be\n     * triggered once the commit is filtered. The callback has the standard node.js continuation signature\n     * with error first and result second.\n     * @method commitHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.commitHandler = function (commitHandler) {\n        if (!arguments.length) {\n            return _commitHandler;\n        }\n        _commitHandler = commitHandler;\n        return _chart;\n    };\n\n    /**\n     * Redraws all charts in the same group as this chart, typically in reaction to a filter\n     * change. If the chart has a {@link dc.baseMixin.commitFilter commitHandler}, it will\n     * be executed and waited for.\n     * @method redrawGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.redrawGroup = function () {\n        if (_commitHandler) {\n            _commitHandler(false, function (error, result) {\n                if (error) {\n                    console.log(error);\n                } else {\n                    dc.redrawAll(_chart.chartGroup());\n                }\n            });\n        } else {\n            dc.redrawAll(_chart.chartGroup());\n        }\n        return _chart;\n    };\n\n    /**\n     * Renders all charts in the same group as this chart. If the chart has a\n     * {@link dc.baseMixin.commitFilter commitHandler}, it will be executed and waited for\n     * @method renderGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.renderGroup = function () {\n        if (_commitHandler) {\n            _commitHandler(false, function (error, result) {\n                if (error) {\n                    console.log(error);\n                } else {\n                    dc.renderAll(_chart.chartGroup());\n                }\n            });\n        } else {\n            dc.renderAll(_chart.chartGroup());\n        }\n        return _chart;\n    };\n\n    _chart._invokeFilteredListener = function (f) {\n        if (f !== undefined) {\n            _listeners.call('filtered', _chart, _chart, f);\n        }\n    };\n\n    _chart._invokeZoomedListener = function () {\n        _listeners.call('zoomed', _chart, _chart);\n    };\n\n    var _hasFilterHandler = function (filters, filter) {\n        if (filter === null || typeof(filter) === 'undefined') {\n            return filters.length > 0;\n        }\n        return filters.some(function (f) {\n            return filter <= f && filter >= f;\n        });\n    };\n\n    /**\n     * Set or get the has-filter handler. The has-filter handler is a function that checks to see if\n     * the chart's current filters (first argument) include a specific filter (second argument).  Using a custom has-filter handler allows\n     * you to change the way filters are checked for and replaced.\n     * @method hasFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default has-filter handler\n     * chart.hasFilterHandler(function (filters, filter) {\n     *     if (filter === null || typeof(filter) === 'undefined') {\n     *         return filters.length > 0;\n     *     }\n     *     return filters.some(function (f) {\n     *         return filter <= f && filter >= f;\n     *     });\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.hasFilterHandler(function(filters, filter) {\n     *     return false;\n     * });\n     * @param {Function} [hasFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.hasFilterHandler = function (hasFilterHandler) {\n        if (!arguments.length) {\n            return _hasFilterHandler;\n        }\n        _hasFilterHandler = hasFilterHandler;\n        return _chart;\n    };\n\n    /**\n     * Check whether any active filter or a specific filter is associated with particular chart instance.\n     * This function is **not chainable**.\n     * @method hasFilter\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#hasFilterHandler hasFilterHandler}\n     * @param {*} [filter]\n     * @returns {Boolean}\n     */\n    _chart.hasFilter = function (filter) {\n        return _hasFilterHandler(_filters, filter);\n    };\n\n    var _removeFilterHandler = function (filters, filter) {\n        for (var i = 0; i < filters.length; i++) {\n            if (filters[i] <= filter && filters[i] >= filter) {\n                filters.splice(i, 1);\n                break;\n            }\n        }\n        return filters;\n    };\n\n    /**\n     * Set or get the remove filter handler. The remove filter handler is a function that removes a\n     * filter from the chart's current filters. Using a custom remove filter handler allows you to\n     * change how filters are removed or perform additional work when removing a filter, e.g. when\n     * using a filter server other than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method removeFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default remove filter handler\n     * chart.removeFilterHandler(function (filters, filter) {\n     *     for (var i = 0; i < filters.length; i++) {\n     *         if (filters[i] <= filter && filters[i] >= filter) {\n     *             filters.splice(i, 1);\n     *             break;\n     *         }\n     *     }\n     *     return filters;\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.removeFilterHandler(function(filters, filter) {\n     *     return filters;\n     * });\n     * @param {Function} [removeFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.removeFilterHandler = function (removeFilterHandler) {\n        if (!arguments.length) {\n            return _removeFilterHandler;\n        }\n        _removeFilterHandler = removeFilterHandler;\n        return _chart;\n    };\n\n    var _addFilterHandler = function (filters, filter) {\n        filters.push(filter);\n        return filters;\n    };\n\n    /**\n     * Set or get the add filter handler. The add filter handler is a function that adds a filter to\n     * the chart's filter list. Using a custom add filter handler allows you to change the way filters\n     * are added or perform additional work when adding a filter, e.g. when using a filter server other\n     * than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method addFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default add filter handler\n     * chart.addFilterHandler(function (filters, filter) {\n     *     filters.push(filter);\n     *     return filters;\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.addFilterHandler(function(filters, filter) {\n     *     return filters;\n     * });\n     * @param {Function} [addFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.addFilterHandler = function (addFilterHandler) {\n        if (!arguments.length) {\n            return _addFilterHandler;\n        }\n        _addFilterHandler = addFilterHandler;\n        return _chart;\n    };\n\n    var _resetFilterHandler = function (filters) {\n        return [];\n    };\n\n    /**\n     * Set or get the reset filter handler. The reset filter handler is a function that resets the\n     * chart's filter list by returning a new list. Using a custom reset filter handler allows you to\n     * change the way filters are reset, or perform additional work when resetting the filters,\n     * e.g. when using a filter server other than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method resetFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default remove filter handler\n     * function (filters) {\n     *     return [];\n     * }\n     *\n     * // custom filter handler (no-op)\n     * chart.resetFilterHandler(function(filters) {\n     *     return filters;\n     * });\n     * @param {Function} [resetFilterHandler]\n     * @returns {dc.baseMixin}\n     */\n    _chart.resetFilterHandler = function (resetFilterHandler) {\n        if (!arguments.length) {\n            return _resetFilterHandler;\n        }\n        _resetFilterHandler = resetFilterHandler;\n        return _chart;\n    };\n\n    function applyFilters (filters) {\n        if (_chart.dimension() && _chart.dimension().filter) {\n            var fs = _filterHandler(_chart.dimension(), filters);\n            if (fs) {\n                filters = fs;\n            }\n        }\n        return filters;\n    }\n\n    /**\n     * Replace the chart filter. This is equivalent to calling `chart.filter(null).filter(filter)`\n     * but more efficient because the filter is only applied once.\n     *\n     * @method replaceFilter\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {*} [filter]\n     * @returns {dc.baseMixin}\n     **/\n    _chart.replaceFilter = function (filter) {\n        _filters = _resetFilterHandler(_filters);\n        _chart.filter(filter);\n        return _chart;\n    };\n\n    /**\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\n     * is given.\n     *\n     * The filter parameter can take one of these forms:\n     * * A single value: the value will be toggled (added if it is not present in the current\n     * filters, removed if it is present)\n     * * An array containing a single array of values (`[[value,value,value]]`): each value is\n     * toggled\n     * * When appropriate for the chart, a {@link dc.filters dc filter object} such as\n     *   * {@link dc.filters.RangedFilter `dc.filters.RangedFilter`} for the\n     * {@link dc.coordinateGridMixin dc.coordinateGridMixin} charts\n     *   * {@link dc.filters.TwoDimensionalFilter `dc.filters.TwoDimensionalFilter`} for the\n     * {@link dc.heatMap heat map}\n     *   * {@link dc.filters.RangedTwoDimensionalFilter `dc.filters.RangedTwoDimensionalFilter`}\n     * for the {@link dc.scatterPlot scatter plot}\n     * * `null`: the filter will be reset using the\n     * {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\n     *\n     * Note that this is always a toggle (even when it doesn't make sense for the filter type). If\n     * you wish to replace the current filter, either call `chart.filter(null)` first - or it's more\n     * efficient to call {@link dc.baseMixin#replaceFilter `chart.replaceFilter(filter)`} instead.\n     *\n     * Each toggle is executed by checking if the value is already present using the\n     * {@link dc.baseMixin#hasFilterHandler hasFilterHandler}; if it is not present, it is added\n     * using the {@link dc.baseMixin#addFilterHandler addFilterHandler}; if it is already present,\n     * it is removed using the {@link dc.baseMixin#removeFilterHandler removeFilterHandler}.\n     *\n     * Once the filters array has been updated, the filters are applied to the\n     * crossfilter dimension, using the {@link dc.baseMixin#filterHandler filterHandler}.\n     *\n     * Once you have set the filters, call {@link dc.baseMixin#redrawGroup `chart.redrawGroup()`}\n     * (or {@link dc.redrawAll `dc.redrawAll()`}) to redraw the chart's group.\n     * @method filter\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#addFilterHandler addFilterHandler}\n     * @see {@link dc.baseMixin#removeFilterHandler removeFilterHandler}\n     * @see {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\n     * @see {@link dc.baseMixin#filterHandler filterHandler}\n     * @example\n     * // filter by a single string\n     * chart.filter('Sunday');\n     * // filter by a single age\n     * chart.filter(18);\n     * // filter by a set of states\n     * chart.filter([['MA', 'TX', 'ND', 'WA']]);\n     * // filter by range -- note the use of dc.filters.RangedFilter, which is different\n     * // from the syntax for filtering a crossfilter dimension directly, dimension.filter([15,20])\n     * chart.filter(dc.filters.RangedFilter(15,20));\n     * @param {*} [filter]\n     * @returns {dc.baseMixin}\n     */\n    _chart.filter = function (filter) {\n        if (!arguments.length) {\n            return _filters.length > 0 ? _filters[0] : null;\n        }\n        var filters = _filters;\n        if (filter instanceof Array && filter[0] instanceof Array && !filter.isFiltered) {\n            // toggle each filter\n            filter[0].forEach(function (f) {\n                if (_hasFilterHandler(filters, f)) {\n                    filters = _removeFilterHandler(filters, f);\n                } else {\n                    filters = _addFilterHandler(filters, f);\n                }\n            });\n        } else if (filter === null) {\n            filters = _resetFilterHandler(filters);\n        } else {\n            if (_hasFilterHandler(filters, filter)) {\n                filters = _removeFilterHandler(filters, filter);\n            } else {\n                filters = _addFilterHandler(filters, filter);\n            }\n        }\n        _filters = applyFilters(filters);\n        _chart._invokeFilteredListener(filter);\n\n        if (_root !== null && _chart.hasFilter()) {\n            _chart.turnOnControls();\n        } else {\n            _chart.turnOffControls();\n        }\n\n        return _chart;\n    };\n\n    /**\n     * Returns all current filters. This method does not perform defensive cloning of the internal\n     * filter array before returning, therefore any modification of the returned array will effect the\n     * chart's internal filter storage.\n     * @method filters\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {Array<*>}\n     */\n    _chart.filters = function () {\n        return _filters;\n    };\n\n    _chart.highlightSelected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, true);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    _chart.fadeDeselected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, true);\n    };\n\n    _chart.resetHighlight = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    /**\n     * This function is passed to d3 as the onClick handler for each chart. The default behavior is to\n     * filter on the clicked datum (passed to the callback) and redraw the chart group.\n     * @method onClick\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {*} datum\n     */\n    _chart.onClick = function (datum) {\n        var filter = _chart.keyAccessor()(datum);\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    /**\n     * Set or get the filter handler. The filter handler is a function that performs the filter action\n     * on a specific dimension. Using a custom filter handler allows you to perform additional logic\n     * before or after filtering.\n     * @method filterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter crossfilter.dimension.filter}\n     * @example\n     * // the default filter handler handles all possible cases for the charts in dc.js\n     * // you can replace it with something more specialized for your own chart\n     * chart.filterHandler(function (dimension, filters) {\n     *     if (filters.length === 0) {\n     *         // the empty case (no filtering)\n     *         dimension.filter(null);\n     *     } else if (filters.length === 1 && !filters[0].isFiltered) {\n     *         // single value and not a function-based filter\n     *         dimension.filterExact(filters[0]);\n     *     } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n     *         // single range-based filter\n     *         dimension.filterRange(filters[0]);\n     *     } else {\n     *         // an array of values, or an array of filter objects\n     *         dimension.filterFunction(function (d) {\n     *             for (var i = 0; i < filters.length; i++) {\n     *                 var filter = filters[i];\n     *                 if (filter.isFiltered && filter.isFiltered(d)) {\n     *                     return true;\n     *                 } else if (filter <= d && filter >= d) {\n     *                     return true;\n     *                 }\n     *             }\n     *             return false;\n     *         });\n     *     }\n     *     return filters;\n     * });\n     *\n     * // custom filter handler\n     * chart.filterHandler(function(dimension, filter){\n     *     var newFilter = filter + 10;\n     *     dimension.filter(newFilter);\n     *     return newFilter; // set the actual filter value to the new value\n     * });\n     * @param {Function} [filterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.filterHandler = function (filterHandler) {\n        if (!arguments.length) {\n            return _filterHandler;\n        }\n        _filterHandler = filterHandler;\n        return _chart;\n    };\n\n    // abstract function stub\n    _chart._doRender = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        // do nothing in base, should be overridden by sub-function\n        return [];\n    };\n\n    _chart.legendHighlight = function () {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendReset = function () {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendToggle = function () {\n        // do nothing in base, should be overriden by sub-function\n    };\n\n    _chart.isLegendableHidden = function () {\n        // do nothing in base, should be overridden by sub-function\n        return false;\n    };\n\n    /**\n     * Set or get the key accessor function. The key accessor function is used to retrieve the key\n     * value from the crossfilter group. Key values are used differently in different charts, for\n     * example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.\n     * @method keyAccessor\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default key accessor\n     * chart.keyAccessor(function(d) { return d.key; });\n     * // custom key accessor for a multi-value crossfilter reduction\n     * chart.keyAccessor(function(p) { return p.value.absGain; });\n     * @param {Function} [keyAccessor]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.keyAccessor = function (keyAccessor) {\n        if (!arguments.length) {\n            return _keyAccessor;\n        }\n        _keyAccessor = keyAccessor;\n        return _chart;\n    };\n\n    /**\n     * Set or get the value accessor function. The value accessor function is used to retrieve the\n     * value from the crossfilter group. Group values are used differently in different charts, for\n     * example values correspond to slice sizes in a pie chart and y axis positions in a grid\n     * coordinate chart.\n     * @method valueAccessor\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default value accessor\n     * chart.valueAccessor(function(d) { return d.value; });\n     * // custom value accessor for a multi-value crossfilter reduction\n     * chart.valueAccessor(function(p) { return p.value.percentageGain; });\n     * @param {Function} [valueAccessor]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.valueAccessor = function (valueAccessor) {\n        if (!arguments.length) {\n            return _valueAccessor;\n        }\n        _valueAccessor = valueAccessor;\n        return _chart;\n    };\n\n    /**\n     * Set or get the label function. The chart class will use this function to render labels for each\n     * child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every\n     * chart supports the label function, for example line chart does not use this function\n     * at all. By default, enables labels; pass false for the second parameter if this is not desired.\n     * @method label\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default label function just return the key\n     * chart.label(function(d) { return d.key; });\n     * // label function has access to the standard d3 data binding and can get quite complicated\n     * chart.label(function(d) { return d.data.key + '(' + Math.floor(d.data.value / all.value() * 100) + '%)'; });\n     * @param {Function} [labelFunction]\n     * @param {Boolean} [enableLabels=true]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.label = function (labelFunction, enableLabels) {\n        if (!arguments.length) {\n            return _label;\n        }\n        _label = labelFunction;\n        if ((enableLabels === undefined) || enableLabels) {\n            _renderLabel = true;\n        }\n        return _chart;\n    };\n\n    /**\n     * Turn on/off label rendering\n     * @method renderLabel\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [renderLabel=false]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.renderLabel = function (renderLabel) {\n        if (!arguments.length) {\n            return _renderLabel;\n        }\n        _renderLabel = renderLabel;\n        return _chart;\n    };\n\n    /**\n     * Set or get the title function. The chart class will use this function to render the SVGElement title\n     * (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice\n     * in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;\n     * however in grid coordinate charts you need to turn off the brush in order to see titles, because\n     * otherwise the brush layer will block tooltip triggering.\n     * @method title\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default title function shows \"key: value\"\n     * chart.title(function(d) { return d.key + ': ' + d.value; });\n     * // title function has access to the standard d3 data binding and can get quite complicated\n     * chart.title(function(p) {\n     *    return p.key.getFullYear()\n     *        + '\\n'\n     *        + 'Index Gain: ' + numberFormat(p.value.absGain) + '\\n'\n     *        + 'Index Gain in Percentage: ' + numberFormat(p.value.percentageGain) + '%\\n'\n     *        + 'Fluctuation / Index Ratio: ' + numberFormat(p.value.fluctuationPercentage) + '%';\n     * });\n     * @param {Function} [titleFunction]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.title = function (titleFunction) {\n        if (!arguments.length) {\n            return _title;\n        }\n        _title = titleFunction;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off title rendering, or return the state of the render title flag if no arguments are\n     * given.\n     * @method renderTitle\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [renderTitle=true]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.renderTitle = function (renderTitle) {\n        if (!arguments.length) {\n            return _renderTitle;\n        }\n        _renderTitle = renderTitle;\n        return _chart;\n    };\n\n    /**\n     * A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added\n     * to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked\n     * right after the chart finishes its transitions, giving you a way to modify the SVGElements.\n     * Renderlet functions take the chart instance as the only input parameter and you can\n     * use the dc API or use raw d3 to achieve pretty much any effect.\n     *\n     * Use {@link dc.baseMixin#on on} with a 'renderlet' prefix.\n     * Generates a random key for the renderlet, which makes it hard to remove.\n     * @method renderlet\n     * @memberof dc.baseMixin\n     * @instance\n     * @deprecated\n     * @example\n     * // do this instead of .renderlet(function(chart) { ... })\n     * chart.on(\"renderlet\", function(chart){\n     *     // mix of dc API and d3 manipulation\n     *     chart.select('g.y').style('display', 'none');\n     *     // its a closure so you can also access other chart variable available in the closure scope\n     *     moveChart.filter(chart.filter());\n     * });\n     * @param {Function} renderletFunction\n     * @returns {dc.baseMixin}\n     */\n    _chart.renderlet = dc.logger.deprecate(function (renderletFunction) {\n        _chart.on('renderlet.' + dc.utils.uniqueId(), renderletFunction);\n        return _chart;\n    }, 'chart.renderlet has been deprecated.  Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)');\n\n    /**\n     * Get or set the chart group to which this chart belongs. Chart groups are rendered or redrawn\n     * together since it is expected they share the same underlying crossfilter data set.\n     * @method chartGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {String} [chartGroup]\n     * @returns {String|dc.baseMixin}\n     */\n    _chart.chartGroup = function (chartGroup) {\n        if (!arguments.length) {\n            return _chartGroup;\n        }\n        if (!_isChild) {\n            dc.deregisterChart(_chart, _chartGroup);\n        }\n        _chartGroup = chartGroup;\n        if (!_isChild) {\n            dc.registerChart(_chart, _chartGroup);\n        }\n        return _chart;\n    };\n\n    /**\n     * Expire the internal chart cache. dc charts cache some data internally on a per chart basis to\n     * speed up rendering and avoid unnecessary calculation; however it might be useful to clear the\n     * cache if you have changed state which will affect rendering.  For example, if you invoke\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}\n     * function or reset group or dimension after rendering, it is a good idea to\n     * clear the cache to make sure charts are rendered properly.\n     * @method expireCache\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.expireCache = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    /**\n     * Attach a dc.legend widget to this chart. The legend widget will automatically draw legend labels\n     * based on the color setting and names associated with each group.\n     * @method legend\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n     * @param {dc.legend} [legend]\n     * @returns {dc.legend|dc.baseMixin}\n     */\n    _chart.legend = function (legend) {\n        if (!arguments.length) {\n            return _legend;\n        }\n        _legend = legend;\n        _legend.parent(_chart);\n        return _chart;\n    };\n\n    /**\n     * Returns the internal numeric ID of the chart.\n     * @method chartID\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {String}\n     */\n    _chart.chartID = function () {\n        return _chart.__dcFlag__;\n    };\n\n    /**\n     * Set chart options using a configuration object. Each key in the object will cause the method of\n     * the same name to be called with the value to set that attribute for the chart.\n     * @method options\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * chart.options({dimension: myDimension, group: myGroup});\n     * @param {{}} opts\n     * @returns {dc.baseMixin}\n     */\n    _chart.options = function (opts) {\n        var applyOptions = [\n            'anchor',\n            'group',\n            'xAxisLabel',\n            'yAxisLabel',\n            'stack',\n            'title',\n            'point',\n            'getColor',\n            'overlayGeoJson'\n        ];\n\n        for (var o in opts) {\n            if (typeof(_chart[o]) === 'function') {\n                if (opts[o] instanceof Array && applyOptions.indexOf(o) !== -1) {\n                    _chart[o].apply(_chart, opts[o]);\n                } else {\n                    _chart[o].call(_chart, opts[o]);\n                }\n            } else {\n                dc.logger.debug('Not a valid option setter name: ' + o);\n            }\n        }\n        return _chart;\n    };\n\n    /**\n     * All dc chart instance supports the following listeners.\n     * Supports the following events:\n     * * `renderlet` - This listener function will be invoked after transitions after redraw and render. Replaces the\n     * deprecated {@link dc.baseMixin#renderlet renderlet} method.\n     * * `pretransition` - Like `.on('renderlet', ...)` but the event is fired before transitions start.\n     * * `preRender` - This listener function will be invoked before chart rendering.\n     * * `postRender` - This listener function will be invoked after chart finish rendering including\n     * all renderlets' logic.\n     * * `preRedraw` - This listener function will be invoked before chart redrawing.\n     * * `postRedraw` - This listener function will be invoked after chart finish redrawing\n     * including all renderlets' logic.\n     * * `filtered` - This listener function will be invoked after a filter is applied, added or removed.\n     * * `zoomed` - This listener function will be invoked after a zoom is triggered.\n     * @method on\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on d3.dispatch.on}\n     * @example\n     * .on('renderlet', function(chart, filter){...})\n     * .on('pretransition', function(chart, filter){...})\n     * .on('preRender', function(chart){...})\n     * .on('postRender', function(chart){...})\n     * .on('preRedraw', function(chart){...})\n     * .on('postRedraw', function(chart){...})\n     * .on('filtered', function(chart, filter){...})\n     * .on('zoomed', function(chart, filter){...})\n     * @param {String} event\n     * @param {Function} listener\n     * @returns {dc.baseMixin}\n     */\n    _chart.on = function (event, listener) {\n        _listeners.on(event, listener);\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n * Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid\n * Charts.\n * @name marginMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.marginMixin}\n */\ndc.marginMixin = function (_chart) {\n    var _margin = {top: 10, right: 50, bottom: 30, left: 30};\n\n    /**\n     * Get or set the margins for a particular coordinate grid chart instance. The margins is stored as\n     * an associative Javascript array.\n     * @method margins\n     * @memberof dc.marginMixin\n     * @instance\n     * @example\n     * var leftMargin = chart.margins().left; // 30 by default\n     * chart.margins().left = 50;\n     * leftMargin = chart.margins().left; // now 50\n     * @param {{top: Number, right: Number, left: Number, bottom: Number}} [margins={top: 10, right: 50, bottom: 30, left: 30}]\n     * @returns {{top: Number, right: Number, left: Number, bottom: Number}|dc.marginMixin}\n     */\n    _chart.margins = function (margins) {\n        if (!arguments.length) {\n            return _margin;\n        }\n        _margin = margins;\n        return _chart;\n    };\n\n    _chart.effectiveWidth = function () {\n        return _chart.width() - _chart.margins().left - _chart.margins().right;\n    };\n\n    _chart.effectiveHeight = function () {\n        return _chart.height() - _chart.margins().top - _chart.margins().bottom;\n    };\n\n    return _chart;\n};\n\n/**\n * The Color Mixin is an abstract chart functional class providing universal coloring support\n * as a mix-in for any concrete chart implementation.\n * @name colorMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.colorMixin}\n */\ndc.colorMixin = function (_chart) {\n    var _colors = d3.scaleOrdinal(dc.config.defaultColors());\n    var _defaultAccessor = true;\n\n    var _colorAccessor = function (d) { return _chart.keyAccessor()(d); };\n    var _colorCalculator;\n\n    /**\n     * Retrieve current color scale or set a new color scale. This methods accepts any function that\n     * operates like a d3 scale.\n     * @method colors\n     * @memberof dc.colorMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @example\n     * // alternate categorical scale\n     * chart.colors(d3.scale.category20b());\n     * // ordinal scale\n     * chart.colors(d3.scaleOrdinal().range(['red','green','blue']));\n     * // convenience method, the same as above\n     * chart.ordinalColors(['red','green','blue']);\n     * // set a linear scale\n     * chart.linearColors([\"#4575b4\", \"#ffffbf\", \"#a50026\"]);\n     * @param {d3.scale} [colorScale=d3.scaleOrdinal(d3.schemeCategory20c)]\n     * @returns {d3.scale|dc.colorMixin}\n     */\n    _chart.colors = function (colorScale) {\n        if (!arguments.length) {\n            return _colors;\n        }\n        if (colorScale instanceof Array) {\n            _colors = d3.scaleQuantize().range(colorScale); // deprecated legacy support, note: this fails for ordinal domains\n        } else {\n            _colors = typeof colorScale === 'function' ? colorScale : dc.utils.constant(colorScale);\n        }\n        return _chart;\n    };\n\n    /**\n     * Convenience method to set the color scale to\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal} with\n     * range `r`.\n     * @method ordinalColors\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<String>} r\n     * @returns {dc.colorMixin}\n     */\n    _chart.ordinalColors = function (r) {\n        return _chart.colors(d3.scaleOrdinal().range(r));\n    };\n\n    /**\n     * Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.\n     * @method linearColors\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<Number>} r\n     * @returns {dc.colorMixin}\n     */\n    _chart.linearColors = function (r) {\n        return _chart.colors(d3.scaleLinear()\n                             .range(r)\n                             .interpolate(d3.interpolateHcl));\n    };\n\n    /**\n     * Set or the get color accessor function. This function will be used to map a data point in a\n     * crossfilter group to a color value on the color scale. The default function uses the key\n     * accessor.\n     * @method colorAccessor\n     * @memberof dc.colorMixin\n     * @instance\n     * @example\n     * // default index based color accessor\n     * .colorAccessor(function (d, i){return i;})\n     * // color accessor for a multi-value crossfilter reduction\n     * .colorAccessor(function (d){return d.value.absGain;})\n     * @param {Function} [colorAccessor]\n     * @returns {Function|dc.colorMixin}\n     */\n    _chart.colorAccessor = function (colorAccessor) {\n        if (!arguments.length) {\n            return _colorAccessor;\n        }\n        _colorAccessor = colorAccessor;\n        _defaultAccessor = false;\n        return _chart;\n    };\n\n    // what is this?\n    _chart.defaultColorAccessor = function () {\n        return _defaultAccessor;\n    };\n\n    /**\n     * Set or get the current domain for the color mapping function. The domain must be supplied as an\n     * array.\n     *\n     * Note: previously this method accepted a callback function. Instead you may use a custom scale\n     * set by {@link dc.colorMixin#colors .colors}.\n     * @method colorDomain\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<String>} [domain]\n     * @returns {Array<String>|dc.colorMixin}\n     */\n    _chart.colorDomain = function (domain) {\n        if (!arguments.length) {\n            return _colors.domain();\n        }\n        _colors.domain(domain);\n        return _chart;\n    };\n\n    /**\n     * Set the domain by determining the min and max values as retrieved by\n     * {@link dc.colorMixin#colorAccessor .colorAccessor} over the chart's dataset.\n     * @method calculateColorDomain\n     * @memberof dc.colorMixin\n     * @instance\n     * @returns {dc.colorMixin}\n     */\n    _chart.calculateColorDomain = function () {\n        var newDomain = [d3.min(_chart.data(), _chart.colorAccessor()),\n                         d3.max(_chart.data(), _chart.colorAccessor())];\n        _colors.domain(newDomain);\n        return _chart;\n    };\n\n    /**\n     * Get the color for the datum d and counter i. This is used internally by charts to retrieve a color.\n     * @method getColor\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {*} d\n     * @param {Number} [i]\n     * @returns {String}\n     */\n    _chart.getColor = function (d, i) {\n        return _colorCalculator ? _colorCalculator.call(this, d, i) : _colors(_colorAccessor.call(this, d, i));\n    };\n\n    /**\n     * Overrides the color selection algorithm, replacing it with a simple function.\n     *\n     * Normally colors will be determined by calling the `colorAccessor` to get a value, and then passing that\n     * value through the `colorScale`.\n     *\n     * But sometimes it is difficult to get a color scale to produce the desired effect. The `colorCalculator`\n     * takes the datum and index and returns a color directly.\n     * @method colorCalculator\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {*} [colorCalculator]\n     * @returns {Function|dc.colorMixin}\n     */\n    _chart.colorCalculator = function (colorCalculator) {\n        if (!arguments.length) {\n            return _colorCalculator || _chart.getColor;\n        }\n        _colorCalculator = colorCalculator;\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n * Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based\n * concrete chart types, e.g. bar chart, line chart, and bubble chart.\n * @name coordinateGridMixin\n * @memberof dc\n * @mixin\n * @mixes dc.colorMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @param {Object} _chart\n * @returns {dc.coordinateGridMixin}\n */\ndc.coordinateGridMixin = function (_chart) {\n    var GRID_LINE_CLASS = 'grid-line';\n    var HORIZONTAL_CLASS = 'horizontal';\n    var VERTICAL_CLASS = 'vertical';\n    var Y_AXIS_LABEL_CLASS = 'y-axis-label';\n    var X_AXIS_LABEL_CLASS = 'x-axis-label';\n    var CUSTOM_BRUSH_HANDLE_CLASS = 'custom-brush-handle';\n    var DEFAULT_AXIS_LABEL_PADDING = 12;\n\n    _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin(_chart)));\n\n    _chart.colors(d3.scaleOrdinal(d3.schemeCategory10));\n    _chart._mandatoryAttributes().push('x');\n    var _parent;\n    var _g;\n    var _chartBodyG;\n\n    var _x;\n    var _origX; // Will hold orginial scale in case of zoom\n    var _xOriginalDomain;\n    var _xAxis = d3.axisBottom();\n    var _xUnits = dc.units.integers;\n    var _xAxisPadding = 0;\n    var _xAxisPaddingUnit = d3.timeDay;\n    var _xElasticity = false;\n    var _xAxisLabel;\n    var _xAxisLabelPadding = 0;\n    var _lastXDomain;\n\n    var _y;\n    var _yAxis = null;\n    var _yAxisPadding = 0;\n    var _yElasticity = false;\n    var _yAxisLabel;\n    var _yAxisLabelPadding = 0;\n\n    var _brush = d3.brushX();\n    var _gBrush;\n    var _brushOn = true;\n    var _parentBrushOn = false;\n    var _round;\n\n    var _renderHorizontalGridLine = false;\n    var _renderVerticalGridLine = false;\n\n    var _resizing = false;\n    var _unitCount;\n\n    var _zoomScale = [1, Infinity];\n    var _zoomOutRestrict = true;\n\n    var _zoom = d3.zoom().on('zoom', onZoom);\n    var _nullZoom = d3.zoom().on('zoom', null);\n    var _hasBeenMouseZoomable = false;\n\n    var _rangeChart;\n    var _focusChart;\n\n    var _mouseZoomable = false;\n    var _clipPadding = 0;\n\n    var _outerRangeBandPadding = 0.5;\n    var _rangeBandPadding = 0;\n\n    var _useRightYAxis = false;\n\n    /**\n     * When changing the domain of the x or y scale, it is necessary to tell the chart to recalculate\n     * and redraw the axes. (`.rescale()` is called automatically when the x or y scale is replaced\n     * with {@link dc.coordinateGridMixin+x .x()} or {@link dc.coordinateGridMixin#y .y()}, and has\n     * no effect on elastic scales.)\n     * @method rescale\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {dc.coordinateGridMixin}\n     */\n    _chart.rescale = function () {\n        _unitCount = undefined;\n        _resizing = true;\n        return _chart;\n    };\n\n    _chart.resizing = function () {\n        return _resizing;\n    };\n\n    /**\n     * Get or set the range selection chart associated with this instance. Setting the range selection\n     * chart using this function will automatically update its selection brush when the current chart\n     * zooms in. In return the given range chart will also automatically attach this chart as its focus\n     * chart hence zoom in when range brush updates.\n     *\n     * Usually the range and focus charts will share a dimension. The range chart will set the zoom\n     * boundaries for the focus chart, so its dimension values must be compatible with the domain of\n     * the focus chart.\n     *\n     * See the [Nasdaq 100 Index](http://dc-js.github.com/dc.js/) example for this effect in action.\n     * @method rangeChart\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {dc.coordinateGridMixin} [rangeChart]\n     * @returns {dc.coordinateGridMixin}\n     */\n    _chart.rangeChart = function (rangeChart) {\n        if (!arguments.length) {\n            return _rangeChart;\n        }\n        _rangeChart = rangeChart;\n        _rangeChart.focusChart(_chart);\n        return _chart;\n    };\n\n    /**\n     * Get or set the scale extent for mouse zooms.\n     * @method zoomScale\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Array<Number|Date>} [extent=[1, Infinity]]\n     * @returns {Array<Number|Date>|dc.coordinateGridMixin}\n     */\n    _chart.zoomScale = function (extent) {\n        if (!arguments.length) {\n            return _zoomScale;\n        }\n        _zoomScale = extent;\n        return _chart;\n    };\n\n    /**\n     * Get or set the zoom restriction for the chart. If true limits the zoom to origional domain of the chart.\n     * @method zoomOutRestrict\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [zoomOutRestrict=true]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.zoomOutRestrict = function (zoomOutRestrict) {\n        if (!arguments.length) {\n            return _zoomOutRestrict;\n        }\n        _zoomOutRestrict = zoomOutRestrict;\n        return _chart;\n    };\n\n    _chart._generateG = function (parent) {\n        if (parent === undefined) {\n            _parent = _chart.svg();\n        } else {\n            _parent = parent;\n        }\n\n        var href = window.location.href.split('#')[0];\n\n        _g = _parent.append('g');\n\n        _chartBodyG = _g.append('g').attr('class', 'chart-body')\n            .attr('transform', 'translate(' + _chart.margins().left + ', ' + _chart.margins().top + ')')\n            .attr('clip-path', 'url(' + href + '#' + getClipPathId() + ')');\n\n        return _g;\n    };\n\n    /**\n     * Get or set the root g element. This method is usually used to retrieve the g element in order to\n     * overlay custom svg drawing programatically. **Caution**: The root g element is usually generated\n     * by dc.js internals, and resetting it might produce unpredictable result.\n     * @method g\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {SVGElement} [gElement]\n     * @returns {SVGElement|dc.coordinateGridMixin}\n     */\n    _chart.g = function (gElement) {\n        if (!arguments.length) {\n            return _g;\n        }\n        _g = gElement;\n        return _chart;\n    };\n\n    /**\n     * Set or get mouse zoom capability flag (default: false). When turned on the chart will be\n     * zoomable using the mouse wheel. If the range selector chart is attached zooming will also update\n     * the range selection brush on the associated range selector chart.\n     * @method mouseZoomable\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [mouseZoomable=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.mouseZoomable = function (mouseZoomable) {\n        if (!arguments.length) {\n            return _mouseZoomable;\n        }\n        _mouseZoomable = mouseZoomable;\n        return _chart;\n    };\n\n    /**\n     * Retrieve the svg group for the chart body.\n     * @method chartBodyG\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {SVGElement} [chartBodyG]\n     * @returns {SVGElement}\n     */\n    _chart.chartBodyG = function (chartBodyG) {\n        if (!arguments.length) {\n            return _chartBodyG;\n        }\n        _chartBodyG = chartBodyG;\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Get or set the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale} or\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales ordinal scale}\n     * @method x\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @example\n     * // set x to a linear scale\n     * chart.x(d3.scaleLinear().domain([-2500, 2500]))\n     * // set x to a time scale to generate histogram\n     * chart.x(d3.scaleTime().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\n     * @param {d3.scale} [xScale]\n     * @returns {d3.scale|dc.coordinateGridMixin}\n     */\n    _chart.x = function (xScale) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = xScale;\n        _xOriginalDomain = _x.domain();\n        _chart.rescale();\n        return _chart;\n    };\n\n    _chart.xOriginalDomain = function () {\n        return _xOriginalDomain;\n    };\n\n    /**\n     * Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate\n     * the number of data projections on the x axis such as the number of bars for a bar chart or the\n     * number of dots for a line chart.\n     *\n     * This function is expected to return a Javascript array of all data points on the x axis, or\n     * the number of points on the axis. d3 time range functions [d3.timeDays, d3.timeMonths, and\n     * d3.timeYears](https://github.com/d3/d3-time/blob/master/README.md#intervals) are all valid\n     * xUnits functions.\n     *\n     * dc.js also provides a few units function, see the {@link dc.units Units Namespace} for\n     * a list of built-in units functions.\n     *\n     * Note that as of dc.js 3.0, `dc.units.ordinal` is not a real function, because it is not\n     * possible to define this function compliant with the d3 range functions. It was already a\n     * magic value which caused charts to behave differently, and now it is completely so.\n     * @method xUnits\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * // set x units to count days\n     * chart.xUnits(d3.timeDays);\n     * // set x units to count months\n     * chart.xUnits(d3.timeMonths);\n     *\n     * // A custom xUnits function can be used as long as it follows the following interface:\n     * // units in integer\n     * function(start, end) {\n     *      // simply calculates how many integers in the domain\n     *      return Math.abs(end - start);\n     * }\n     *\n     * // fixed units\n     * function(start, end) {\n     *      // be aware using fixed units will disable the focus/zoom ability on the chart\n     *      return 1000;\n     * }\n     * @param {Function} [xUnits=dc.units.integers]\n     * @returns {Function|dc.coordinateGridMixin}\n     */\n    _chart.xUnits = function (xUnits) {\n        if (!arguments.length) {\n            return _xUnits;\n        }\n        _xUnits = xUnits;\n        return _chart;\n    };\n\n    /**\n     * Set or get the x axis used by a particular coordinate grid chart instance. This function is most\n     * useful when x axis customization is required. The x axis in dc.js is an instance of a\n     * {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3 bottom axis object};\n     * therefore it supports any valid d3 axisBottom manipulation.\n     *\n     * **Caution**: The x axis is usually generated internally by dc; resetting it may cause\n     * unexpected results. Note also that when used as a getter, this function is not chainable:\n     * it returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.xAxis()` will fail}.\n     * @method xAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3.axisBottom}\n     * @example\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function(v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axis} [xAxis=d3.axisBottom()]\n     * @returns {d3.axis|dc.coordinateGridMixin}\n     */\n    _chart.xAxis = function (xAxis) {\n        if (!arguments.length) {\n            return _xAxis;\n        }\n        _xAxis = xAxis;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will\n     * attempt to recalculate the x axis range whenever a redraw event is triggered.\n     * @method elasticX\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [elasticX=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.elasticX = function (elasticX) {\n        if (!arguments.length) {\n            return _xElasticity;\n        }\n        _xElasticity = elasticX;\n        return _chart;\n    };\n\n    /**\n     * Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x\n     * axis if elasticX is turned on; otherwise it is ignored.\n     *\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n     * number or date x axes.  When padding a date axis, an integer represents number of units being padded\n     * and a percentage string will be treated the same as an integer. The unit will be determined by the\n     * xAxisPaddingUnit variable.\n     * @method xAxisPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number|String} [padding=0]\n     * @returns {Number|String|dc.coordinateGridMixin}\n     */\n    _chart.xAxisPadding = function (padding) {\n        if (!arguments.length) {\n            return _xAxisPadding;\n        }\n        _xAxisPadding = padding;\n        return _chart;\n    };\n\n    /**\n     * Set or get x axis padding unit for the elastic x axis. The padding unit will determine which unit to\n     * use when applying xAxis padding if elasticX is turned on and if x-axis uses a time dimension;\n     * otherwise it is ignored.\n     *\n     * The padding unit should be a\n     * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n     * For backward compatibility with dc.js 2.0, it can also be the name of a d3 time interval\n     * ('day', 'hour', etc). Available arguments are the\n     * [d3 time intervals](https://github.com/d3/d3-time/blob/master/README.md#intervals d3.timeInterval).\n     * @method xAxisPaddingUnit\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [unit=d3.timeDay]\n     * @returns {String|dc.coordinateGridMixin}\n     */\n    _chart.xAxisPaddingUnit = function (unit) {\n        if (!arguments.length) {\n            return _xAxisPaddingUnit;\n        }\n        _xAxisPaddingUnit = unit;\n        return _chart;\n    };\n\n    /**\n     * Returns the number of units displayed on the x axis. If the x axis is ordinal (`xUnits` is\n     * `dc.units.ordinal`), this is the number of items in the domain of the x scale. Otherwise, the\n     * x unit count is calculated using the {@link dc.coordinateGridMixin#xUnits xUnits} function.\n     * @method xUnitCount\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {Number}\n     */\n    _chart.xUnitCount = function () {\n        if (_unitCount === undefined) {\n            if (_chart.isOrdinal()) {\n                // In this case it number of items in domain\n                _unitCount = _chart.x().domain().length;\n            } else {\n                _unitCount = _chart.xUnits()(_chart.x().domain()[0], _chart.x().domain()[1]);\n\n                // Sometimes xUnits() may return an array while sometimes directly the count\n                if (_unitCount instanceof Array) {\n                    _unitCount = _unitCount.length;\n                }\n            }\n        }\n\n        return _unitCount;\n    };\n\n    /**\n     * Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When\n     * used with a chart in a composite chart, allows both left and right Y axes to be shown on a\n     * chart.\n     * @method useRightYAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [useRightYAxis=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.useRightYAxis = function (useRightYAxis) {\n        if (!arguments.length) {\n            return _useRightYAxis;\n        }\n\n        // We need to warn if value is changing after _yAxis was created\n        if (_useRightYAxis !== useRightYAxis && _yAxis) {\n            dc.logger.warn('Value of useRightYAxis has been altered, after yAxis was created. ' +\n                'You might get unexpected yAxis behavior. ' +\n                'Make calls to useRightYAxis sooner in your chart creation process.');\n        }\n\n        _useRightYAxis = useRightYAxis;\n        return _chart;\n    };\n\n    /**\n     * Returns true if the chart is using ordinal xUnits ({@link dc.units.ordinal dc.units.ordinal}, or false\n     * otherwise. Most charts behave differently with ordinal data and use the result of this method to\n     * trigger the appropriate logic.\n     * @method isOrdinal\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {Boolean}\n     */\n    _chart.isOrdinal = function () {\n        return _chart.xUnits() === dc.units.ordinal;\n    };\n\n    _chart._useOuterPadding = function () {\n        return true;\n    };\n\n    _chart._ordinalXDomain = function () {\n        var groups = _chart._computeOrderedGroups(_chart.data());\n        return groups.map(_chart.keyAccessor());\n    };\n\n    function prepareXAxis (g, render) {\n        if (!_chart.isOrdinal()) {\n            if (_chart.elasticX()) {\n                _x.domain([_chart.xAxisMin(), _chart.xAxisMax()]);\n            }\n        } else { // _chart.isOrdinal()\n            // D3v4 - Ordinal charts would need scaleBand\n            // bandwidth is a method in scaleBand\n            // (https://github.com/d3/d3-scale/blob/master/README.md#scaleBand)\n            if (!_x.bandwidth) {\n                // If _x is not a scaleBand create a new scale and\n                // copy the original domain to the new scale\n                dc.logger.warn('For compatibility with d3v4+, dc.js d3.0 ordinal bar/line/bubble charts need ' +\n                               'd3.scaleBand() for the x scale, instead of d3.scaleOrdinal(). ' +\n                               'Replacing .x() with a d3.scaleBand with the same domain - ' +\n                               'make the same change in your code to avoid this warning!');\n                _x = d3.scaleBand().domain(_x.domain());\n            }\n\n            if (_chart.elasticX() || _x.domain().length === 0) {\n                _x.domain(_chart._ordinalXDomain());\n            }\n        }\n\n        // has the domain changed?\n        var xdom = _x.domain();\n        if (render || !dc.utils.arraysEqual(_lastXDomain, xdom)) {\n            _chart.rescale();\n        }\n        _lastXDomain = xdom;\n\n        // please can't we always use rangeBands for bar charts?\n        if (_chart.isOrdinal()) {\n            _x.range([0, _chart.xAxisLength()])\n                .paddingInner(_rangeBandPadding)\n                .paddingOuter(_chart._useOuterPadding() ? _outerRangeBandPadding : 0);\n        } else {\n            _x.range([0, _chart.xAxisLength()]);\n        }\n\n        _xAxis = _xAxis.scale(_chart.x());\n\n        renderVerticalGridLines(g);\n    }\n\n    _chart.renderXAxis = function (g) {\n        var axisXG = g.select('g.x');\n\n        if (axisXG.empty()) {\n            axisXG = g.append('g')\n                .attr('class', 'axis x')\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')');\n        }\n\n        var axisXLab = g.select('text.' + X_AXIS_LABEL_CLASS);\n        if (axisXLab.empty() && _chart.xAxisLabel()) {\n            axisXLab = g.append('text')\n                .attr('class', X_AXIS_LABEL_CLASS)\n                .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\n                      (_chart.height() - _xAxisLabelPadding) + ')')\n                .attr('text-anchor', 'middle');\n        }\n        if (_chart.xAxisLabel() && axisXLab.text() !== _chart.xAxisLabel()) {\n            axisXLab.text(_chart.xAxisLabel());\n        }\n\n        dc.transition(axisXG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')')\n            .call(_xAxis);\n        dc.transition(axisXLab, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\n                  (_chart.height() - _xAxisLabelPadding) + ')');\n    };\n\n    function renderVerticalGridLines (g) {\n        var gridLineG = g.select('g.' + VERTICAL_CLASS);\n\n        if (_renderVerticalGridLine) {\n            if (gridLineG.empty()) {\n                gridLineG = g.insert('g', ':first-child')\n                    .attr('class', GRID_LINE_CLASS + ' ' + VERTICAL_CLASS)\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n            }\n\n            var ticks = _xAxis.tickValues() ? _xAxis.tickValues() :\n                (typeof _x.ticks === 'function' ? _x.ticks.apply(_x, _xAxis.tickArguments()) : _x.domain());\n\n            var lines = gridLineG.selectAll('line')\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append('line')\n                .attr('x1', function (d) {\n                    return _x(d);\n                })\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\n                .attr('x2', function (d) {\n                    return _x(d);\n                })\n                .attr('y2', 0)\n                .attr('opacity', 0);\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', 0.5);\n\n            // update\n            dc.transition(lines, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('x1', function (d) {\n                    return _x(d);\n                })\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\n                .attr('x2', function (d) {\n                    return _x(d);\n                })\n                .attr('y2', 0);\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    }\n\n    _chart._xAxisY = function () {\n        return (_chart.height() - _chart.margins().bottom);\n    };\n\n    _chart.xAxisLength = function () {\n        return _chart.effectiveWidth();\n    };\n\n    /**\n     * Set or get the x axis label. If setting the label, you may optionally include additional padding to\n     * the margin to make room for the label. By default the padded is set to 12 to accomodate the text height.\n     * @method xAxisLabel\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [labelText]\n     * @param {Number} [padding=12]\n     * @returns {String}\n     */\n    _chart.xAxisLabel = function (labelText, padding) {\n        if (!arguments.length) {\n            return _xAxisLabel;\n        }\n        _xAxisLabel = labelText;\n        _chart.margins().bottom -= _xAxisLabelPadding;\n        _xAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        _chart.margins().bottom += _xAxisLabelPadding;\n        return _chart;\n    };\n\n    function createYAxis () {\n        return _useRightYAxis ? d3.axisRight() : d3.axisLeft();\n    }\n\n    _chart._prepareYAxis = function (g) {\n        if (_y === undefined || _chart.elasticY()) {\n            if (_y === undefined) {\n                _y = d3.scaleLinear();\n            }\n            var min = _chart.yAxisMin() || 0,\n                max = _chart.yAxisMax() || 0;\n            _y.domain([min, max]).rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _y.range([_chart.yAxisHeight(), 0]);\n\n        if (!_yAxis) {\n            _yAxis = createYAxis();\n        }\n\n        _yAxis.scale(_y);\n\n        _chart._renderHorizontalGridLinesForAxis(g, _y, _yAxis);\n    };\n\n    _chart.renderYAxisLabel = function (axisClass, text, rotation, labelXPosition) {\n        labelXPosition = labelXPosition || _yAxisLabelPadding;\n\n        var axisYLab = _chart.g().select('text.' + Y_AXIS_LABEL_CLASS + '.' + axisClass + '-label');\n        var labelYPosition = (_chart.margins().top + _chart.yAxisHeight() / 2);\n        if (axisYLab.empty() && text) {\n            axisYLab = _chart.g().append('text')\n                .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')')\n                .attr('class', Y_AXIS_LABEL_CLASS + ' ' + axisClass + '-label')\n                .attr('text-anchor', 'middle')\n                .text(text);\n        }\n        if (text && axisYLab.text() !== text) {\n            axisYLab.text(text);\n        }\n        dc.transition(axisYLab, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')');\n    };\n\n    _chart.renderYAxisAt = function (axisClass, axis, position) {\n        var axisYG = _chart.g().select('g.' + axisClass);\n        if (axisYG.empty()) {\n            axisYG = _chart.g().append('g')\n                .attr('class', 'axis ' + axisClass)\n                .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')');\n        }\n\n        dc.transition(axisYG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')')\n            .call(axis);\n    };\n\n    _chart.renderYAxis = function () {\n        var axisPosition = _useRightYAxis ? (_chart.width() - _chart.margins().right) : _chart._yAxisX();\n        _chart.renderYAxisAt('y', _yAxis, axisPosition);\n        var labelPosition = _useRightYAxis ? (_chart.width() - _yAxisLabelPadding) : _yAxisLabelPadding;\n        var rotation = _useRightYAxis ? 90 : -90;\n        _chart.renderYAxisLabel('y', _chart.yAxisLabel(), rotation, labelPosition);\n    };\n\n    _chart._renderHorizontalGridLinesForAxis = function (g, scale, axis) {\n        var gridLineG = g.select('g.' + HORIZONTAL_CLASS);\n\n        if (_renderHorizontalGridLine) {\n            // see https://github.com/d3/d3-axis/blob/master/src/axis.js#L48\n            var ticks = axis.tickValues() ? axis.tickValues() :\n                (scale.ticks ? scale.ticks.apply(scale, axis.tickArguments()) : scale.domain());\n\n            if (gridLineG.empty()) {\n                gridLineG = g.insert('g', ':first-child')\n                    .attr('class', GRID_LINE_CLASS + ' ' + HORIZONTAL_CLASS)\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n            }\n\n            var lines = gridLineG.selectAll('line')\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append('line')\n                .attr('x1', 1)\n                .attr('y1', function (d) {\n                    return scale(d);\n                })\n                .attr('x2', _chart.xAxisLength())\n                .attr('y2', function (d) {\n                    return scale(d);\n                })\n                .attr('opacity', 0);\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', 0.5);\n\n            // update\n            dc.transition(lines, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('x1', 1)\n                .attr('y1', function (d) {\n                    return scale(d);\n                })\n                .attr('x2', _chart.xAxisLength())\n                .attr('y2', function (d) {\n                    return scale(d);\n                });\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    };\n\n    _chart._yAxisX = function () {\n        return _chart.useRightYAxis() ? _chart.width() - _chart.margins().right : _chart.margins().left;\n    };\n\n    /**\n     * Set or get the y axis label. If setting the label, you may optionally include additional padding\n     * to the margin to make room for the label. By default the padding is set to 12 to accommodate the\n     * text height.\n     * @method yAxisLabel\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [labelText]\n     * @param {Number} [padding=12]\n     * @returns {String|dc.coordinateGridMixin}\n     */\n    _chart.yAxisLabel = function (labelText, padding) {\n        if (!arguments.length) {\n            return _yAxisLabel;\n        }\n        _yAxisLabel = labelText;\n        _chart.margins().left -= _yAxisLabelPadding;\n        _yAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        _chart.margins().left += _yAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y scale. The y scale is typically automatically determined by the chart implementation.\n     * @method y\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [yScale]\n     * @returns {d3.scale|dc.coordinateGridMixin}\n     */\n    _chart.y = function (yScale) {\n        if (!arguments.length) {\n            return _y;\n        }\n        _y = yScale;\n        _chart.rescale();\n        return _chart;\n    };\n\n    /**\n     * Set or get the y axis used by the coordinate grid chart instance. This function is most useful\n     * when y axis customization is required. Depending on `useRightYAxis` the y axis in dc.js is an instance of\n     * either [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft) or\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight); therefore it supports any\n     * valid d3 axis manipulation.\n     *\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * In addition, depending on whether you are going to use the axis on left or right\n     * you need to appropriately pass [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft)\n     * or [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight)\n     * @method yAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\n     * @example\n     * // customize y axis tick format\n     * chart.yAxis().tickFormat(function(v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.yAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axisLeft|d3.axisRight} [yAxis]\n     * @returns {d3.axisLeft|d3.axisRight|dc.coordinateGridMixin}\n     */\n    _chart.yAxis = function (yAxis) {\n        if (!arguments.length) {\n            if (!_yAxis) {\n                _yAxis = createYAxis();\n            }\n            return _yAxis;\n        }\n        _yAxis = yAxis;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will\n     * attempt to recalculate the y axis range whenever a redraw event is triggered.\n     * @method elasticY\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [elasticY=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.elasticY = function (elasticY) {\n        if (!arguments.length) {\n            return _yElasticity;\n        }\n        _yElasticity = elasticY;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off horizontal grid lines.\n     * @method renderHorizontalGridLines\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [renderHorizontalGridLines=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.renderHorizontalGridLines = function (renderHorizontalGridLines) {\n        if (!arguments.length) {\n            return _renderHorizontalGridLine;\n        }\n        _renderHorizontalGridLine = renderHorizontalGridLines;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off vertical grid lines.\n     * @method renderVerticalGridLines\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [renderVerticalGridLines=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.renderVerticalGridLines = function (renderVerticalGridLines) {\n        if (!arguments.length) {\n            return _renderVerticalGridLine;\n        }\n        _renderVerticalGridLine = renderVerticalGridLines;\n        return _chart;\n    };\n\n    /**\n     * Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.\n     * @method xAxisMin\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.xAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.subtract(min, _xAxisPadding, _xAxisPaddingUnit);\n    };\n\n    /**\n     * Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.\n     * @method xAxisMax\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.xAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.add(max, _xAxisPadding, _xAxisPaddingUnit);\n    };\n\n    /**\n     * Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.\n     * @method yAxisMin\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.yAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        return dc.utils.subtract(min, _yAxisPadding);\n    };\n\n    /**\n     * Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.\n     * @method yAxisMax\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.yAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        return dc.utils.add(max, _yAxisPadding);\n    };\n\n    /**\n     * Set or get y axis padding for the elastic y axis. The padding will be added to the top and\n     * bottom of the y axis if elasticY is turned on; otherwise it is ignored.\n     *\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n     * number or date axes. When padding a date axis, an integer represents number of days being padded\n     * and a percentage string will be treated the same as an integer.\n     * @method yAxisPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number|String} [padding=0]\n     * @returns {Number|dc.coordinateGridMixin}\n     */\n    _chart.yAxisPadding = function (padding) {\n        if (!arguments.length) {\n            return _yAxisPadding;\n        }\n        _yAxisPadding = padding;\n        return _chart;\n    };\n\n    _chart.yAxisHeight = function () {\n        return _chart.effectiveHeight();\n    };\n\n    /**\n     * Set or get the rounding function used to quantize the selection when brushing is enabled.\n     * @method round\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * // set x unit round to by month, this will make sure range selection brush will\n     * // select whole months\n     * chart.round(d3.timeMonth.round);\n     * @param {Function} [round]\n     * @returns {Function|dc.coordinateGridMixin}\n     */\n    _chart.round = function (round) {\n        if (!arguments.length) {\n            return _round;\n        }\n        _round = round;\n        return _chart;\n    };\n\n    _chart._rangeBandPadding = function (_) {\n        if (!arguments.length) {\n            return _rangeBandPadding;\n        }\n        _rangeBandPadding = _;\n        return _chart;\n    };\n\n    _chart._outerRangeBandPadding = function (_) {\n        if (!arguments.length) {\n            return _outerRangeBandPadding;\n        }\n        _outerRangeBandPadding = _;\n        return _chart;\n    };\n\n    dc.override(_chart, 'filter', function (_) {\n        if (!arguments.length) {\n            return _chart._filter();\n        }\n\n        _chart._filter(_);\n\n        _chart.redrawBrush(_, false);\n\n        return _chart;\n    });\n\n    /**\n     * Get or set the brush. Brush must be an instance of d3 brushes\n     * https://github.com/d3/d3-brush/blob/master/README.md\n     * You will use this only if you are writing a new chart type that supports brushing.\n     *\n     * **Caution**: dc creates and manages brushes internally. Go through and understand the source code\n     * if you want to pass a new brush object. Even if you are only using the getter,\n     * the brush object may not behave the way you expect.\n     *\n     * @method brush\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {d3.brush} [_]\n     * @returns {d3.brush|dc.coordinateGridMixin}\n     */\n    _chart.brush = function (_) {\n        if (!arguments.length) {\n            return _brush;\n        }\n        _brush = _;\n        return _chart;\n    };\n\n    _chart.renderBrush = function (g, doTransition) {\n        if (_brushOn) {\n            _brush.on('start brush end', _chart._brushing);\n\n            // To retrieve selection we need _gBrush\n            _gBrush = g.append('g')\n                .attr('class', 'brush')\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n            _chart.setBrushExtents();\n\n            _chart.createBrushHandlePaths(_gBrush, doTransition);\n\n            _chart.redrawBrush(_chart.filter(), doTransition);\n        }\n    };\n\n    _chart.createBrushHandlePaths = function (gBrush) {\n        var brushHandles = gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS).data([{type: 'w'}, {type: 'e'}]);\n\n        brushHandles = brushHandles\n            .enter()\n            .append('path')\n            .attr('class', CUSTOM_BRUSH_HANDLE_CLASS)\n            .merge(brushHandles);\n\n        brushHandles\n            .attr('d', _chart.resizeHandlePath);\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (brushSelection && _chart.round()) {\n            brushSelection[0] = _chart.round()(brushSelection[0]);\n            brushSelection[1] = _chart.round()(brushSelection[1]);\n        }\n        return brushSelection;\n    };\n\n    _chart.brushIsEmpty = function (brushSelection) {\n        return !brushSelection || brushSelection[1] <= brushSelection[0];\n    };\n\n    _chart._brushing = function () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when brush.move is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing brush move programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var brushSelection = d3.event.selection;\n        if (brushSelection) {\n            brushSelection = brushSelection.map(_chart.x().invert);\n        }\n\n        brushSelection = _chart.extendBrush(brushSelection);\n\n        _chart.redrawBrush(brushSelection, false);\n\n        var rangedFilter = _chart.brushIsEmpty(brushSelection) ? null : dc.filters.RangedFilter(brushSelection[0], brushSelection[1]);\n\n        dc.events.trigger(function () {\n            _chart.applyBrushSelection(rangedFilter);\n        }, dc.constants.EVENT_DELAY);\n    };\n\n    // This can be overridden in a derived chart. For example Composite chart overrides it\n    _chart.applyBrushSelection = function (rangedFilter) {\n        _chart.replaceFilter(rangedFilter);\n        _chart.redrawGroup();\n    };\n\n    _chart.setBrushExtents = function (doTransition) {\n        // Set boundaries of the brush, must set it before applying to _gBrush\n        _brush.extent([[0, 0], [_chart.effectiveWidth(), _chart.effectiveHeight()]]);\n\n        _gBrush\n            .call(_brush);\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        if (_brushOn && _gBrush) {\n            if (_resizing) {\n                _chart.setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                _gBrush\n                    .call(_brush.move, null);\n\n                _gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS)\n                    .attr('display', 'none');\n            } else {\n                var scaledSelection = [_x(brushSelection[0]), _x(brushSelection[1])];\n\n                var gBrush =\n                    dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(_gBrush);\n\n                gBrush\n                    .call(_brush.move, scaledSelection);\n\n                gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS)\n                    .attr('display', null)\n                    .attr('transform', function (d, i) {\n                        return 'translate(' + _x(brushSelection[i]) + ', 0)';\n                    })\n                    .attr('d', _chart.resizeHandlePath);\n            }\n        }\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        // do nothing, sub-chart should override this function\n    };\n\n    // borrowed from Crossfilter example\n    _chart.resizeHandlePath = function (d) {\n        d = d.type;\n        var e = +(d === 'e'), x = e ? 1 : -1, y = _chart.effectiveHeight() / 3;\n        return 'M' + (0.5 * x) + ',' + y +\n            'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6) +\n            'V' + (2 * y - 6) +\n            'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y) +\n            'Z' +\n            'M' + (2.5 * x) + ',' + (y + 8) +\n            'V' + (2 * y - 8) +\n            'M' + (4.5 * x) + ',' + (y + 8) +\n            'V' + (2 * y - 8);\n    };\n\n    function getClipPathId () {\n        return _chart.anchorName().replace(/[ .#=\\[\\]\"]/g, '-') + '-clip';\n    }\n\n    /**\n     * Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to\n     * the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area\n     * will be exactly the chart body area minus the margins.\n     * @method clipPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number} [padding=5]\n     * @returns {Number|dc.coordinateGridMixin}\n     */\n    _chart.clipPadding = function (padding) {\n        if (!arguments.length) {\n            return _clipPadding;\n        }\n        _clipPadding = padding;\n        return _chart;\n    };\n\n    function generateClipPath () {\n        var defs = dc.utils.appendOrSelect(_parent, 'defs');\n        // cannot select <clippath> elements; bug in WebKit, must select by id\n        // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n        var id = getClipPathId();\n        var chartBodyClip = dc.utils.appendOrSelect(defs, '#' + id, 'clipPath').attr('id', id);\n\n        var padding = _clipPadding * 2;\n\n        dc.utils.appendOrSelect(chartBodyClip, 'rect')\n            .attr('width', _chart.xAxisLength() + padding)\n            .attr('height', _chart.yAxisHeight() + padding)\n            .attr('transform', 'translate(-' + _clipPadding + ', -' + _clipPadding + ')');\n    }\n\n    _chart._preprocessData = function () {};\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _chart._preprocessData();\n\n        _chart._generateG();\n        generateClipPath();\n\n        drawChart(true);\n\n        configureMouseZoom();\n\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        _chart._preprocessData();\n\n        drawChart(false);\n        generateClipPath();\n\n        return _chart;\n    };\n\n    function drawChart (render) {\n        if (_chart.isOrdinal()) {\n            _brushOn = false;\n        }\n\n        prepareXAxis(_chart.g(), render);\n        _chart._prepareYAxis(_chart.g());\n\n        _chart.plotData();\n\n        if (_chart.elasticX() || _resizing || render) {\n            _chart.renderXAxis(_chart.g());\n        }\n\n        if (_chart.elasticY() || _resizing || render) {\n            _chart.renderYAxis(_chart.g());\n        }\n\n        if (render) {\n            _chart.renderBrush(_chart.g(), false);\n        } else {\n            // Animate the brush only while resizing\n            _chart.redrawBrush(_chart.filter(), _resizing);\n        }\n        _chart.fadeDeselectedArea(_chart.filter());\n        _resizing = false;\n    }\n\n    function configureMouseZoom () {\n        // Save a copy of original x scale\n        _origX = _x.copy();\n\n        if (_mouseZoomable) {\n            _chart._enableMouseZoom();\n        } else if (_hasBeenMouseZoomable) {\n            _chart._disableMouseZoom();\n        }\n    }\n\n    _chart._enableMouseZoom = function () {\n        _hasBeenMouseZoomable = true;\n\n        var extent = [[0, 0],[_chart.effectiveWidth(), _chart.effectiveHeight()]];\n\n        _zoom\n            .scaleExtent(_zoomScale)\n            .extent(extent)\n            .duration(_chart.transitionDuration());\n\n        if (_zoomOutRestrict) {\n            // Ensure minimum zoomScale is at least 1\n            var zoomScaleMin = Math.max(_zoomScale[0], 1);\n            _zoom\n                .translateExtent(extent)\n                .scaleExtent([zoomScaleMin, _zoomScale[1]]);\n        }\n\n        _chart.root().call(_zoom);\n\n        // Tell D3 zoom our current zoom/pan status\n        updateD3zoomTransform();\n    };\n\n    _chart._disableMouseZoom = function () {\n        _chart.root().call(_nullZoom);\n    };\n\n    function zoomHandler (newDomain, noRaiseEvents) {\n        var domFilter;\n\n        if (hasRangeSelected(newDomain)) {\n            _chart.x().domain(newDomain);\n            domFilter = dc.filters.RangedFilter(newDomain[0], newDomain[1]);\n        } else {\n            _chart.x().domain(_xOriginalDomain);\n            domFilter = null;\n        }\n\n        _chart.replaceFilter(domFilter);\n        _chart.rescale();\n        _chart.redraw();\n\n        if (!noRaiseEvents) {\n            if (_rangeChart && !dc.utils.arraysEqual(_chart.filter(), _rangeChart.filter())) {\n                dc.events.trigger(function () {\n                    _rangeChart.replaceFilter(domFilter);\n                    _rangeChart.redraw();\n                });\n            }\n\n            _chart._invokeZoomedListener();\n            dc.events.trigger(function () {\n                _chart.redrawGroup();\n            }, dc.constants.EVENT_DELAY);\n        }\n    }\n\n    // event.transform.rescaleX(_origX).domain() should give back newDomain\n    function domainToZoomTransform (newDomain, origDomain, xScale) {\n        var k = (origDomain[1] - origDomain[0]) / (newDomain[1] - newDomain[0]);\n        var xt = -1 * xScale(newDomain[0]);\n\n        return d3.zoomIdentity.scale(k).translate(xt, 0);\n    }\n\n    // If we changing zoom status (for example by calling focus), tell D3 zoom about it\n    function updateD3zoomTransform () {\n        if (_zoom) {\n            _zoom.transform(_chart.root(), domainToZoomTransform(_chart.x().domain(), _xOriginalDomain, _origX));\n        }\n    }\n\n    function onZoom () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when zoom is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing zoom programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'zoom', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var newDomain = d3.event.transform.rescaleX(_origX).domain();\n        _chart.focus(newDomain, false);\n    }\n\n    function checkExtents (ext, outerLimits) {\n        if (!ext || ext.length !== 2 || !outerLimits || outerLimits.length !== 2) {\n            return ext;\n        }\n\n        if (ext[0] > outerLimits[1] || ext[1] < outerLimits[0]) {\n            console.warn('Could not intersect extents, will reset');\n        }\n        // Math.max does not work (as the values may be dates as well)\n        return [ext[0] > outerLimits[0] ? ext[0] : outerLimits[0], ext[1] < outerLimits[1] ? ext[1] : outerLimits[1]];\n    }\n\n    /**\n     * Zoom this chart to focus on the given range. The given range should be an array containing only\n     * 2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set\n     * to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;\n     * otherwise focus will be ignored.\n     *\n     * To avoid ping-pong volley of events between a pair of range and focus charts please set\n     * `noRaiseEvents` to `true`. In that case it will update this chart but will not fire `zoom` event\n     * and not try to update back the associated range chart.\n     * If you are calling it manually - typically you will leave it to `false` (the default).\n     *\n     * @method focus\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * chart.on('renderlet', function(chart) {\n     *     // smooth the rendering through event throttling\n     *     dc.events.trigger(function(){\n     *          // focus some other chart to the range selected by user on this chart\n     *          someOtherChart.focus(chart.filter());\n     *     });\n     * })\n     * @param {Array<Number>} [range]\n     * @param {Boolean} [noRaiseEvents = false]\n     */\n    _chart.focus = function (range, noRaiseEvents) {\n        if (_zoomOutRestrict) {\n            // ensure range is within _xOriginalDomain\n            range = checkExtents(range, _xOriginalDomain);\n\n            // If it has an associated range chart ensure range is within domain of that rangeChart\n            if (_rangeChart) {\n                range = checkExtents(range, _rangeChart.x().domain());\n            }\n        }\n\n        zoomHandler(range, noRaiseEvents);\n        updateD3zoomTransform();\n    };\n\n    _chart.refocused = function () {\n        return !dc.utils.arraysEqual(_chart.x().domain(), _xOriginalDomain);\n    };\n\n    _chart.focusChart = function (c) {\n        if (!arguments.length) {\n            return _focusChart;\n        }\n        _focusChart = c;\n        _chart.on('filtered.dcjs-range-chart', function (chart) {\n            if (!chart.filter()) {\n                dc.events.trigger(function () {\n                    _focusChart.x().domain(_focusChart.xOriginalDomain(), true);\n                });\n            } else if (!dc.utils.arraysEqual(chart.filter(), _focusChart.filter())) {\n                dc.events.trigger(function () {\n                    _focusChart.focus(chart.filter(), true);\n                });\n            }\n        });\n        return _chart;\n    };\n\n    /**\n     * Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse\n     * across a chart with a quantitative scale to perform range filtering based on the extent of the\n     * brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and\n     * un-filter them. However turning on the brush filter will disable other interactive elements on\n     * the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible\n     * if enabled, but only via scrolling (panning will be disabled.)\n     * @method brushOn\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [brushOn=true]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.brushOn = function (brushOn) {\n        if (!arguments.length) {\n            return _brushOn;\n        }\n        _brushOn = brushOn;\n        return _chart;\n    };\n\n    /**\n     * This will be internally used by composite chart onto children. Please go not invoke directly.\n     *\n     * @method parentBrushOn\n     * @memberof dc.coordinateGridMixin\n     * @protected\n     * @instance\n     * @param {Boolean} [brushOn=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.parentBrushOn = function (brushOn) {\n        if (!arguments.length) {\n            return _parentBrushOn;\n        }\n        _parentBrushOn = brushOn;\n        return _chart;\n    };\n\n    // Get the SVG rendered brush\n    _chart.gBrush = function () {\n        return _gBrush;\n    };\n\n    function hasRangeSelected (range) {\n        return range instanceof Array && range.length > 1;\n    }\n\n    return _chart;\n};\n\n/**\n * Stack Mixin is an mixin that provides cross-chart support of stackability using d3.stackD3v3.\n * @name stackMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.stackMixin}\n */\ndc.stackMixin = function (_chart) {\n\n    function prepareValues (layer, layerIdx) {\n        var valAccessor = layer.accessor || _chart.valueAccessor();\n        layer.name = String(layer.name || layerIdx);\n        var allValues = layer.group.all().map(function (d, i) {\n            return {\n                x: _chart.keyAccessor()(d, i),\n                y: layer.hidden ? null : valAccessor(d, i),\n                data: d,\n                layer: layer.name,\n                hidden: layer.hidden\n            };\n        });\n\n        layer.domainValues = allValues.filter(domainFilter());\n        layer.values = _chart.evadeDomainFilter() ? allValues : layer.domainValues;\n    }\n\n    var _stackLayout = d3.stack();\n\n    var _stack = [];\n    var _titles = {};\n\n    var _hidableStacks = false;\n    var _evadeDomainFilter = false;\n\n    function domainFilter () {\n        if (!_chart.x()) {\n            return dc.utils.constant(true);\n        }\n        var xDomain = _chart.x().domain();\n        if (_chart.isOrdinal()) {\n            // TODO #416\n            //var domainSet = d3.set(xDomain);\n            return function () {\n                return true; //domainSet.has(p.x);\n            };\n        }\n        if (_chart.elasticX()) {\n            return function () { return true; };\n        }\n        return function (p) {\n            //return true;\n            return p.x >= xDomain[0] && p.x <= xDomain[xDomain.length - 1];\n        };\n    }\n\n    /**\n     * Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks\n     * in the same chart will share the same key accessor and therefore the same set of keys.\n     *\n     * For example, in a stacked bar chart, the bars of each stack will be positioned using the same set\n     * of keys on the x axis, while stacked vertically. If name is specified then it will be used to\n     * generate the legend label.\n     * @method stack\n     * @memberof dc.stackMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n     * @example\n     * // stack group using default accessor\n     * chart.stack(valueSumGroup)\n     * // stack group using custom accessor\n     * .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\n     * @param {crossfilter.group} group\n     * @param {String} [name]\n     * @param {Function} [accessor]\n     * @returns {Array<{group: crossfilter.group, name: String, accessor: Function}>|dc.stackMixin}\n     */\n    _chart.stack = function (group, name, accessor) {\n        if (!arguments.length) {\n            return _stack;\n        }\n\n        if (arguments.length <= 2) {\n            accessor = name;\n        }\n\n        var layer = {group: group};\n        if (typeof name === 'string') {\n            layer.name = name;\n        }\n        if (typeof accessor === 'function') {\n            layer.accessor = accessor;\n        }\n        _stack.push(layer);\n\n        return _chart;\n    };\n\n    dc.override(_chart, 'group', function (g, n, f) {\n        if (!arguments.length) {\n            return _chart._group();\n        }\n        _stack = [];\n        _titles = {};\n        _chart.stack(g, n);\n        if (f) {\n            _chart.valueAccessor(f);\n        }\n        return _chart._group(g, n);\n    });\n\n    /**\n     * Allow named stacks to be hidden or shown by clicking on legend items.\n     * This does not affect the behavior of hideStack or showStack.\n     * @method hidableStacks\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {Boolean} [hidableStacks=false]\n     * @returns {Boolean|dc.stackMixin}\n     */\n    _chart.hidableStacks = function (hidableStacks) {\n        if (!arguments.length) {\n            return _hidableStacks;\n        }\n        _hidableStacks = hidableStacks;\n        return _chart;\n    };\n\n    function findLayerByName (n) {\n        var i = _stack.map(dc.pluck('name')).indexOf(n);\n        return _stack[i];\n    }\n\n    /**\n     * Hide all stacks on the chart with the given name.\n     * The chart must be re-rendered for this change to appear.\n     * @method hideStack\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {String} stackName\n     * @returns {dc.stackMixin}\n     */\n    _chart.hideStack = function (stackName) {\n        var layer = findLayerByName(stackName);\n        if (layer) {\n            layer.hidden = true;\n        }\n        return _chart;\n    };\n\n    /**\n     * Show all stacks on the chart with the given name.\n     * The chart must be re-rendered for this change to appear.\n     * @method showStack\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {String} stackName\n     * @returns {dc.stackMixin}\n     */\n    _chart.showStack = function (stackName) {\n        var layer = findLayerByName(stackName);\n        if (layer) {\n            layer.hidden = false;\n        }\n        return _chart;\n    };\n\n    _chart.getValueAccessorByIndex = function (index) {\n        return _stack[index].accessor || _chart.valueAccessor();\n    };\n\n    _chart.yAxisMin = function () {\n        var min = d3.min(flattenStack(), function (p) {\n            return (p.y < 0) ? (p.y + p.y0) : p.y0;\n        });\n\n        return dc.utils.subtract(min, _chart.yAxisPadding());\n\n    };\n\n    _chart.yAxisMax = function () {\n        var max = d3.max(flattenStack(), function (p) {\n            return (p.y > 0) ? (p.y + p.y0) : p.y0;\n        });\n\n        return dc.utils.add(max, _chart.yAxisPadding());\n    };\n\n    function flattenStack () {\n        var valueses = _chart.data().map(function (layer) { return layer.domainValues; });\n        return Array.prototype.concat.apply([], valueses);\n    }\n\n    _chart.xAxisMin = function () {\n        var min = d3.min(flattenStack(), dc.pluck('x'));\n        return dc.utils.subtract(min, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    };\n\n    _chart.xAxisMax = function () {\n        var max = d3.max(flattenStack(), dc.pluck('x'));\n        return dc.utils.add(max, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    };\n\n    /**\n     * Set or get the title function. Chart class will use this function to render svg title (usually interpreted by\n     * browser as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart.\n     * Almost every chart supports title function however in grid coordinate chart you need to turn off brush in order to\n     * use title otherwise the brush layer will block tooltip trigger.\n     *\n     * If the first argument is a stack name, the title function will get or set the title for that stack. If stackName\n     * is not provided, the first stack is implied.\n     * @method title\n     * @memberof dc.stackMixin\n     * @instance\n     * @example\n     * // set a title function on 'first stack'\n     * chart.title('first stack', function(d) { return d.key + ': ' + d.value; });\n     * // get a title function from 'second stack'\n     * var secondTitleFunction = chart.title('second stack');\n     * @param {String} [stackName]\n     * @param {Function} [titleAccessor]\n     * @returns {String|dc.stackMixin}\n     */\n    dc.override(_chart, 'title', function (stackName, titleAccessor) {\n        if (!stackName) {\n            return _chart._title();\n        }\n\n        if (typeof stackName === 'function') {\n            return _chart._title(stackName);\n        }\n        if (stackName === _chart._groupName && typeof titleAccessor === 'function') {\n            return _chart._title(titleAccessor);\n        }\n\n        if (typeof titleAccessor !== 'function') {\n            return _titles[stackName] || _chart._title();\n        }\n\n        _titles[stackName] = titleAccessor;\n\n        return _chart;\n    });\n\n    /**\n     * Gets or sets the stack layout algorithm, which computes a baseline for each stack and\n     * propagates it to the next.\n     * @method stackLayout\n     * @memberof dc.stackMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md d3.stackD3v3}\n     * @param {Function} [stack=d3.stackD3v3]\n     * @returns {Function|dc.stackMixin}\n     */\n    _chart.stackLayout = function (stack) {\n        if (!arguments.length) {\n            return _stackLayout;\n        }\n        _stackLayout = stack;\n        return _chart;\n    };\n\n    /**\n     * Since dc.js 2.0, there has been {@link https://github.com/dc-js/dc.js/issues/949 an issue}\n     * where points are filtered to the current domain. While this is a useful optimization, it is\n     * incorrectly implemented: the next point outside the domain is required in order to draw lines\n     * that are clipped to the bounds, as well as bars that are partly clipped.\n     *\n     * A fix will be included in dc.js 2.1.x, but a workaround is needed for dc.js 2.0 and until\n     * that fix is published, so set this flag to skip any filtering of points.\n     *\n     * Once the bug is fixed, this flag will have no effect, and it will be deprecated.\n     * @method evadeDomainFilter\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {Boolean} [evadeDomainFilter=false]\n     * @returns {Boolean|dc.stackMixin}\n     */\n    _chart.evadeDomainFilter = function (evadeDomainFilter) {\n        if (!arguments.length) {\n            return _evadeDomainFilter;\n        }\n        _evadeDomainFilter = evadeDomainFilter;\n        return _chart;\n    };\n\n    function visibility (l) {\n        return !l.hidden;\n    }\n\n    _chart.data(function () {\n        var layers = _stack.filter(visibility);\n        if (!layers.length) {\n            return [];\n        }\n        layers.forEach(prepareValues);\n        var v4data = layers[0].values.map(function (v, i) {\n            var col = {x: v.x};\n            layers.forEach(function (layer) {\n                col[layer.name] = layer.values[i].y;\n            });\n            return col;\n        });\n        var keys = layers.map(function (layer) { return layer.name; });\n        var v4result = _chart.stackLayout().keys(keys)(v4data);\n        v4result.forEach(function (series, i) {\n            series.forEach(function (ys, j) {\n                layers[i].values[j].y0 = ys[0];\n                layers[i].values[j].y1 = ys[1];\n            });\n        });\n        return layers;\n    });\n\n    _chart._ordinalXDomain = function () {\n        var flat = flattenStack().map(dc.pluck('data'));\n        var ordered = _chart._computeOrderedGroups(flat);\n        return ordered.map(_chart.keyAccessor());\n    };\n\n    _chart.colorAccessor(function (d) {\n        var layer = this.layer || this.name || d.name || d.layer;\n        return layer;\n    });\n\n    _chart.legendables = function () {\n        return _stack.map(function (layer, i) {\n            return {\n                chart: _chart,\n                name: layer.name,\n                hidden: layer.hidden || false,\n                color: _chart.getColor.call(layer, layer.values, i)\n            };\n        });\n    };\n\n    _chart.isLegendableHidden = function (d) {\n        var layer = findLayerByName(d.name);\n        return layer ? layer.hidden : false;\n    };\n\n    _chart.legendToggle = function (d) {\n        if (_hidableStacks) {\n            if (_chart.isLegendableHidden(d)) {\n                _chart.showStack(d.name);\n            } else {\n                _chart.hideStack(d.name);\n            }\n            //_chart.redraw();\n            _chart.renderGroup();\n        }\n    };\n\n    return _chart;\n};\n\n/**\n * Cap is a mixin that groups small data elements below a _cap_ into an *others* grouping for both the\n * Row and Pie Charts.\n *\n * The top ordered elements in the group up to the cap amount will be kept in the chart, and the rest\n * will be replaced with an *others* element, with value equal to the sum of the replaced values. The\n * keys of the elements below the cap limit are recorded in order to filter by those keys when the\n * others* element is clicked.\n * @name capMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.capMixin}\n */\ndc.capMixin = function (_chart) {\n    var _cap = Infinity, _takeFront = true;\n    var _othersLabel = 'Others';\n\n    // emulate old group.top(N) ordering\n    _chart.ordering(function (kv) {\n        return -kv.value;\n    });\n\n    var _othersGrouper = function (topItems, restItems) {\n        var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n            restKeys = restItems.map(_chart.keyAccessor());\n        if (restItemsSum > 0) {\n            return topItems.concat([{\n                others: restKeys,\n                key: _chart.othersLabel(),\n                value: restItemsSum\n            }]);\n        }\n        return topItems;\n    };\n\n    _chart.cappedKeyAccessor = function (d, i) {\n        if (d.others) {\n            return d.key;\n        }\n        return _chart.keyAccessor()(d, i);\n    };\n\n    _chart.cappedValueAccessor = function (d, i) {\n        if (d.others) {\n            return d.value;\n        }\n        return _chart.valueAccessor()(d, i);\n    };\n\n    // return N \"top\" groups, where N is the cap, sorted by baseMixin.ordering\n    // whether top means front or back depends on takeFront\n    _chart.data(function (group) {\n        if (_cap === Infinity) {\n            return _chart._computeOrderedGroups(group.all());\n        } else {\n            var items = group.all(), rest;\n            items = _chart._computeOrderedGroups(items); // sort by baseMixin.ordering\n\n            if (_cap) {\n                if (_takeFront) {\n                    rest = items.slice(_cap);\n                    items = items.slice(0, _cap);\n                } else {\n                    var start = Math.max(0, items.length - _cap);\n                    rest = items.slice(0, start);\n                    items = items.slice(start);\n                }\n            }\n\n            if (_othersGrouper) {\n                return _othersGrouper(items, rest);\n            }\n            return items;\n        }\n    });\n\n    /**\n     * Get or set the count of elements to that will be included in the cap. If there is an\n     * {@link dc.capMixin#othersGrouper othersGrouper}, any further elements will be combined in an\n     * extra element with its name determined by {@link dc.capMixin#othersLabel othersLabel}.\n     *\n     * As of dc.js 2.1 and onward, the capped charts use\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all()}\n     * and {@link dc.baseMixin#ordering baseMixin.ordering()} to determine the order of\n     * elements. Then `cap` and {@link dc.capMixin#takeFront takeFront} determine how many elements\n     * to keep, from which end of the resulting array.\n     *\n     * **Migration note:** Up through dc.js 2.0.*, capping used\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_top group.top(N)},\n     * which selects the largest items according to\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_order group.order()}.\n     * The chart then sorted the items according to {@link dc.baseMixin#ordering baseMixin.ordering()}.\n     * So the two values essentially had to agree, but if the `group.order()` was incorrect (it's\n     * easy to forget about), the wrong rows or slices would be displayed, in the correct order.\n     *\n     * If your chart previously relied on `group.order()`, use `chart.ordering()` instead. As of\n     * 2.1.5, the ordering defaults to sorting from greatest to least like `group.top(N)` did.\n     *\n     * If you want to cap by one ordering but sort by another, please\n     * [file an issue](https://github.com/dc-js/dc.js/issues/new) - it's still possible but we'll\n     * need to work up an example.\n     * @method cap\n     * @memberof dc.capMixin\n     * @instance\n     * @param {Number} [count=Infinity]\n     * @returns {Number|dc.capMixin}\n     */\n    _chart.cap = function (count) {\n        if (!arguments.length) {\n            return _cap;\n        }\n        _cap = count;\n        return _chart;\n    };\n\n    /**\n     * Get or set the direction of capping. If set, the chart takes the first\n     * {@link dc.capMixin#cap cap} elements from the sorted array of elements; otherwise\n     * it takes the last `cap` elements.\n     * @method takeFront\n     * @memberof dc.capMixin\n     * @instance\n     * @param {Boolean} [takeFront=true]\n     * @returns {Boolean|dc.capMixin}\n     */\n    _chart.takeFront = function (takeFront) {\n        if (!arguments.length) {\n            return _takeFront;\n        }\n        _takeFront = takeFront;\n        return _chart;\n    };\n\n    /**\n     * Get or set the label for *Others* slice when slices cap is specified.\n     * @method othersLabel\n     * @memberof dc.capMixin\n     * @instance\n     * @param {String} [label=\"Others\"]\n     * @returns {String|dc.capMixin}\n     */\n    _chart.othersLabel = function (label) {\n        if (!arguments.length) {\n            return _othersLabel;\n        }\n        _othersLabel = label;\n        return _chart;\n    };\n\n    /**\n     * Get or set the grouper function that will perform the insertion of data for the *Others* slice\n     * if the slices cap is specified. If set to a falsy value, no others will be added.\n     *\n     * The grouper function takes an array of included (\"top\") items, and an array of the rest of\n     * the items. By default the grouper function computes the sum of the rest.\n     * @method othersGrouper\n     * @memberof dc.capMixin\n     * @instance\n     * @example\n     * // Do not show others\n     * chart.othersGrouper(null);\n     * // Default others grouper\n     * chart.othersGrouper(function (topItems, restItems) {\n     *     var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n     *         restKeys = restItems.map(_chart.keyAccessor());\n     *     if (restItemsSum > 0) {\n     *         return topItems.concat([{\n     *             others: restKeys,\n     *             key: _chart.othersLabel(),\n     *             value: restItemsSum\n     *         }]);\n     *     }\n     *     return topItems;\n     * });\n     * @param {Function} [grouperFunction]\n     * @returns {Function|dc.capMixin}\n     */\n    _chart.othersGrouper = function (grouperFunction) {\n        if (!arguments.length) {\n            return _othersGrouper;\n        }\n        _othersGrouper = grouperFunction;\n        return _chart;\n    };\n\n    dc.override(_chart, 'onClick', function (d) {\n        if (d.others) {\n            _chart.filter([d.others]);\n        }\n        _chart._onClick(d);\n    });\n\n    return _chart;\n};\n\n/**\n * This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.\n * @name bubbleMixin\n * @memberof dc\n * @mixin\n * @mixes dc.colorMixin\n * @param {Object} _chart\n * @returns {dc.bubbleMixin}\n */\ndc.bubbleMixin = function (_chart) {\n    var _maxBubbleRelativeSize = 0.3;\n    var _minRadiusWithLabel = 10;\n    var _sortBubbleSize = false;\n    var _elasticRadius = false;\n\n    _chart.BUBBLE_NODE_CLASS = 'node';\n    _chart.BUBBLE_CLASS = 'bubble';\n    _chart.MIN_RADIUS = 10;\n\n    _chart = dc.colorMixin(_chart);\n\n    _chart.renderLabel(true);\n\n    _chart.data(function (group) {\n        var data = group.all();\n        if (_sortBubbleSize) {\n            // sort descending so smaller bubbles are on top\n            var radiusAccessor = _chart.radiusValueAccessor();\n            data.sort(function (a, b) { return d3.descending(radiusAccessor(a), radiusAccessor(b)); });\n        }\n        return data;\n    });\n\n    var _r = d3.scaleLinear().domain([0, 100]);\n\n    var _rValueAccessor = function (d) {\n        return d.r;\n    };\n\n    /**\n     * Get or set the bubble radius scale. By default the bubble chart uses\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleLinear d3.scaleLinear().domain([0, 100])}\n     * as its radius scale.\n     * @method r\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [bubbleRadiusScale=d3.scaleLinear().domain([0, 100])]\n     * @returns {d3.scale|dc.bubbleMixin}\n     */\n    _chart.r = function (bubbleRadiusScale) {\n        if (!arguments.length) {\n            return _r;\n        }\n        _r = bubbleRadiusScale;\n        return _chart;\n    };\n\n    /**\n     * Turn on or off the elastic bubble radius feature, or return the value of the flag. If this\n     * feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.\n     * @method elasticRadius\n     * @memberof dc.bubbleChart\n     * @instance\n     * @param {Boolean} [elasticRadius=false]\n     * @returns {Boolean|dc.bubbleChart}\n     */\n    _chart.elasticRadius = function (elasticRadius) {\n        if (!arguments.length) {\n            return _elasticRadius;\n        }\n        _elasticRadius = elasticRadius;\n        return _chart;\n    };\n\n    _chart.calculateRadiusDomain = function () {\n        if (_elasticRadius) {\n            _chart.r().domain([_chart.rMin(), _chart.rMax()]);\n        }\n    };\n\n    /**\n     * Get or set the radius value accessor function. If set, the radius value accessor function will\n     * be used to retrieve a data value for each bubble. The data retrieved then will be mapped using\n     * the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble\n     * size.\n     * @method radiusValueAccessor\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Function} [radiusValueAccessor]\n     * @returns {Function|dc.bubbleMixin}\n     */\n    _chart.radiusValueAccessor = function (radiusValueAccessor) {\n        if (!arguments.length) {\n            return _rValueAccessor;\n        }\n        _rValueAccessor = radiusValueAccessor;\n        return _chart;\n    };\n\n    _chart.rMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return min;\n    };\n\n    _chart.rMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return max;\n    };\n\n    _chart.bubbleR = function (d) {\n        var value = _chart.radiusValueAccessor()(d);\n        var r = _chart.r()(value);\n        if (isNaN(r) || value <= 0) {\n            r = 0;\n        }\n        return r;\n    };\n\n    var labelFunction = function (d) {\n        return _chart.label()(d);\n    };\n\n    var shouldLabel = function (d) {\n        return (_chart.bubbleR(d) > _minRadiusWithLabel);\n    };\n\n    var labelOpacity = function (d) {\n        return shouldLabel(d) ? 1 : 0;\n    };\n\n    var labelPointerEvent = function (d) {\n        return shouldLabel(d) ? 'all' : 'none';\n    };\n\n    _chart._doRenderLabel = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var label = bubbleGEnter.select('text');\n\n            if (label.empty()) {\n                label = bubbleGEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                    .attr('dy', '.3em')\n                    .on('click', _chart.onClick);\n            }\n\n            label\n                .attr('opacity', 0)\n                .attr('pointer-events', labelPointerEvent)\n                .text(labelFunction);\n            dc.transition(label, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', labelOpacity);\n        }\n    };\n\n    _chart.doUpdateLabels = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var labels = bubbleGEnter.select('text')\n                .attr('pointer-events', labelPointerEvent)\n                .text(labelFunction);\n            dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', labelOpacity);\n        }\n    };\n\n    var titleFunction = function (d) {\n        return _chart.title()(d);\n    };\n\n    _chart._doRenderTitles = function (g) {\n        if (_chart.renderTitle()) {\n            var title = g.select('title');\n\n            if (title.empty()) {\n                g.append('title').text(titleFunction);\n            }\n        }\n    };\n\n    _chart.doUpdateTitles = function (g) {\n        if (_chart.renderTitle()) {\n            g.select('title').text(titleFunction);\n        }\n    };\n\n    /**\n     * Turn on or off the bubble sorting feature, or return the value of the flag. If enabled,\n     * bubbles will be sorted by their radius, with smaller bubbles in front.\n     * @method sortBubbleSize\n     * @memberof dc.bubbleChart\n     * @instance\n     * @param {Boolean} [sortBubbleSize=false]\n     * @returns {Boolean|dc.bubbleChart}\n     */\n    _chart.sortBubbleSize = function (sortBubbleSize) {\n        if (!arguments.length) {\n            return _sortBubbleSize;\n        }\n        _sortBubbleSize = sortBubbleSize;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimum radius. This will be used to initialize the radius scale's range.\n     * @method minRadius\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [radius=10]\n     * @returns {Number|dc.bubbleMixin}\n     */\n    _chart.minRadius = function (radius) {\n        if (!arguments.length) {\n            return _chart.MIN_RADIUS;\n        }\n        _chart.MIN_RADIUS = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimum radius for label rendering. If a bubble's radius is less than this value\n     * then no label will be rendered.\n     * @method minRadiusWithLabel\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [radius=10]\n     * @returns {Number|dc.bubbleMixin}\n     */\n\n    _chart.minRadiusWithLabel = function (radius) {\n        if (!arguments.length) {\n            return _minRadiusWithLabel;\n        }\n        _minRadiusWithLabel = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the maximum relative size of a bubble to the length of x axis. This value is useful\n     * when the difference in radius between bubbles is too great.\n     * @method maxBubbleRelativeSize\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [relativeSize=0.3]\n     * @returns {Number|dc.bubbleMixin}\n     */\n    _chart.maxBubbleRelativeSize = function (relativeSize) {\n        if (!arguments.length) {\n            return _maxBubbleRelativeSize;\n        }\n        _maxBubbleRelativeSize = relativeSize;\n        return _chart;\n    };\n\n    _chart.fadeDeselectedArea = function (selection) {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    _chart.onClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    return _chart;\n};\n\n/**\n * The pie chart implementation is usually used to visualize a small categorical distribution.  The pie\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering}\n * which defaults to sorting by key.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class pieChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a pie chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.pieChart('#chart-container1');\n * // create a pie chart under #chart-container2 element using chart group A\n * var chart2 = dc.pieChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.pieChart}\n */\ndc.pieChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = 'pie-slice';\n    var _labelCssClass = 'pie-label';\n    var _sliceGroupCssClass = 'pie-slice-group';\n    var _labelGroupCssClass = 'pie-label-group';\n    var _emptyCssClass = 'empty-chart';\n    var _emptyTitle = 'empty';\n\n    var _radius,\n        _givenRadius, // specified radius, if any\n        _innerRadius = 0,\n        _externalRadiusPadding = 0;\n\n    var _g;\n    var _cx;\n    var _cy;\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n    var _externalLabelRadius;\n    var _drawPaths = false;\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\n\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    /**\n     * Get or set the maximum number of slices the pie chart will generate. The top slices are determined by\n     * value from high to low. Other slices exeeding the cap will be rolled up into one single *Others* slice.\n     * @method slicesCap\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cap]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.slicesCap = _chart.cap;\n\n    _chart.label(_chart.cappedKeyAccessor);\n    _chart.renderLabel(true);\n\n    _chart.transitionDuration(350);\n    _chart.transitionDelay(0);\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n\n        _g.append('g').attr('class', _sliceGroupCssClass);\n        _g.append('g').attr('class', _labelGroupCssClass);\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart () {\n        // set radius from chart size if none given, or if given radius is too large\n        var maxRadius =  d3.min([_chart.width(), _chart.height()]) / 2;\n        _radius = _givenRadius && _givenRadius < maxRadius ? _givenRadius : maxRadius;\n\n        var arc = buildArcs();\n\n        var pie = pieLayout();\n        var pieData;\n        // if we have data...\n        if (d3.sum(_chart.data(), _chart.cappedValueAccessor)) {\n            pieData = pie(_chart.data());\n            _g.classed(_emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            pieData = pie([{key: _emptyTitle, value: 1, others: [_emptyTitle]}]);\n            _g.classed(_emptyCssClass, true);\n        }\n\n        if (_g) {\n            var slices = _g.select('g.' + _sliceGroupCssClass)\n                .selectAll('g.' + _sliceCssClass)\n                .data(pieData);\n\n            var labels = _g.select('g.' + _labelGroupCssClass)\n                .selectAll('text.' + _labelCssClass)\n                .data(pieData);\n\n            removeElements(slices, labels);\n\n            createElements(slices, labels, arc, pieData);\n\n            updateElements(pieData, arc);\n\n            highlightFilter();\n\n            dc.transition(_g, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n        }\n    }\n\n    function createElements (slices, labels, arc, pieData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n\n        createTitles(slicesEnter);\n\n        createLabels(labels, pieData, arc);\n    }\n\n    function createSliceNodes (slices) {\n        var slicesEnter = slices\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _sliceCssClass + ' _' + i;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath (slicesEnter, arc) {\n        var slicePath = slicesEnter.append('path')\n            .attr('fill', fill)\n            .on('click', onClick)\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n\n        var transition = dc.transition(slicePath, _chart.transitionDuration(), _chart.transitionDelay());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenPie);\n        }\n    }\n\n    function createTitles (slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append('title').text(function (d) {\n                return _chart.title()(d.data);\n            });\n        }\n    }\n\n    _chart._applyLabelText = function (labels) {\n        labels\n            .text(function (d) {\n                var data = d.data;\n                if ((sliceHasNoData(data) || sliceTooSmall(d)) && !isSelectedSlice(d)) {\n                    return '';\n                }\n                return _chart.label()(d.data);\n            });\n    };\n\n    function positionLabels (labels, arc) {\n        _chart._applyLabelText(labels);\n        dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', function (d) {\n                return labelPosition(d, arc);\n            })\n            .attr('text-anchor', 'middle');\n    }\n\n    function highlightSlice (i, whether) {\n        _chart.select('g.pie-slice._' + i)\n            .classed('highlight', whether);\n    }\n\n    function createLabels (labels, pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', function (d, i) {\n                    var classes = _sliceCssClass + ' ' + _labelCssClass + ' _' + i;\n                    if (_externalLabelRadius) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on('click', onClick)\n                .on('mouseover', function (d, i) {\n                    highlightSlice(i, true);\n                })\n                .on('mouseout', function (d, i) {\n                    highlightSlice(i, false);\n                });\n            positionLabels(labelsEnter, arc);\n            if (_externalLabelRadius && _drawPaths) {\n                updateLabelPaths(pieData, arc);\n            }\n        }\n    }\n\n    function updateLabelPaths (pieData, arc) {\n        var polyline = _g.selectAll('polyline.' + _sliceCssClass)\n                .data(pieData);\n\n        polyline.exit().remove();\n\n        polyline = polyline\n            .enter()\n            .append('polyline')\n            .attr('class', function (d, i) {\n                return 'pie-path _' + i + ' ' + _sliceCssClass;\n            })\n            .on('click', onClick)\n            .on('mouseover', function (d, i) {\n                highlightSlice(i, true);\n            })\n            .on('mouseout', function (d, i) {\n                highlightSlice(i, false);\n            })\n            .merge(polyline);\n\n        var arc2 = d3.arc()\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .innerRadius(_radius - _externalRadiusPadding);\n        var transition = dc.transition(polyline, _chart.transitionDuration(), _chart.transitionDelay());\n        // this is one rare case where d3.selection differs from d3.transition\n        if (transition.attrTween) {\n            transition\n                .attrTween('points', function (d) {\n                    var current = this._current || d;\n                    current = {startAngle: current.startAngle, endAngle: current.endAngle};\n                    var interpolate = d3.interpolate(current, d);\n                    this._current = interpolate(0);\n                    return function (t) {\n                        var d2 = interpolate(t);\n                        return [arc.centroid(d2), arc2.centroid(d2)];\n                    };\n                });\n        } else {\n            transition.attr('points', function (d) {\n                return [arc.centroid(d), arc2.centroid(d)];\n            });\n        }\n        transition.style('visibility', function (d) {\n            return d.endAngle - d.startAngle < 0.0001 ? 'hidden' : 'visible';\n        });\n\n    }\n\n    function updateElements (pieData, arc) {\n        updateSlicePaths(pieData, arc);\n        updateLabels(pieData, arc);\n        updateTitles(pieData);\n    }\n\n    function updateSlicePaths (pieData, arc) {\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\n            .data(pieData)\n            .select('path')\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        var transition = dc.transition(slicePaths, _chart.transitionDuration(), _chart.transitionDelay());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenPie);\n        }\n        transition.attr('fill', fill);\n    }\n\n    function updateLabels (pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _labelCssClass)\n                .data(pieData);\n            positionLabels(labels, arc);\n            if (_externalLabelRadius && _drawPaths) {\n                updateLabelPaths(pieData, arc);\n            }\n        }\n    }\n\n    function updateTitles (pieData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll('g.' + _sliceCssClass)\n                .data(pieData)\n                .select('title')\n                .text(function (d) {\n                    return _chart.title()(d.data);\n                });\n        }\n    }\n\n    function removeElements (slices, labels) {\n        slices.exit().remove();\n        labels.exit().remove();\n    }\n\n    function highlightFilter () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                if (isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _sliceCssClass).each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set the external radius padding of the pie chart. This will force the radius of the\n     * pie chart to become smaller or larger depending on the value.\n     * @method externalRadiusPadding\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [externalRadiusPadding=0]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.externalRadiusPadding = function (externalRadiusPadding) {\n        if (!arguments.length) {\n            return _externalRadiusPadding;\n        }\n        _externalRadiusPadding = externalRadiusPadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the\n     * pie chart will be rendered as a doughnut chart.\n     * @method innerRadius\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [innerRadius=0]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.innerRadius = function (innerRadius) {\n        if (!arguments.length) {\n            return _innerRadius;\n        }\n        _innerRadius = innerRadius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     * @method radius\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [radius]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.radius = function (radius) {\n        if (!arguments.length) {\n            return _givenRadius;\n        }\n        _givenRadius = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     * @method cx\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cx]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.cx = function (cx) {\n        if (!arguments.length) {\n            return (_cx ||  _chart.width() / 2);\n        }\n        _cx = cx;\n        return _chart;\n    };\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     * @method cy\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cy]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.cy = function (cy) {\n        if (!arguments.length) {\n            return (_cy ||  _chart.height() / 2);\n        }\n        _cy = cy;\n        return _chart;\n    };\n\n    function buildArcs () {\n        return d3.arc()\n            .outerRadius(_radius - _externalRadiusPadding)\n            .innerRadius(_innerRadius);\n    }\n\n    function isSelectedSlice (d) {\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d.data));\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @method minAngleForLabel\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [minAngleForLabel=0.5]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.minAngleForLabel = function (minAngleForLabel) {\n        if (!arguments.length) {\n            return _minAngleForLabel;\n        }\n        _minAngleForLabel = minAngleForLabel;\n        return _chart;\n    };\n\n    function pieLayout () {\n        return d3.pie().sort(null).value(_chart.cappedValueAccessor);\n    }\n\n    function sliceTooSmall (d) {\n        var angle = (d.endAngle - d.startAngle);\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData (d) {\n        return _chart.cappedValueAccessor(d) === 0;\n    }\n\n    function tweenPie (b) {\n        b.innerRadius = _innerRadius;\n        var current = this._current;\n        if (isOffCanvas(current)) {\n            current = {startAngle: 0, endAngle: 0};\n        } else {\n            // only interpolate startAngle & endAngle, not the whole data object\n            current = {startAngle: current.startAngle, endAngle: current.endAngle};\n        }\n        var i = d3.interpolate(current, b);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(i(t), 0, buildArcs());\n        };\n    }\n\n    function isOffCanvas (current) {\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\n    }\n\n    function fill (d, i) {\n        return _chart.getColor(d.data, i);\n    }\n\n    function onClick (d, i) {\n        if (_g.attr('class') !== _emptyCssClass) {\n            _chart.onClick(d.data, i);\n        }\n    }\n\n    function safeArc (d, i, arc) {\n        var path = arc(d, i);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    /**\n     * Title to use for the only slice when there is no data.\n     * @method emptyTitle\n     * @memberof dc.pieChart\n     * @instance\n     * @param {String} [title]\n     * @returns {String|dc.pieChart}\n     */\n    _chart.emptyTitle = function (title) {\n        if (arguments.length === 0) {\n            return _emptyTitle;\n        }\n        _emptyTitle = title;\n        return _chart;\n    };\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     * @method externalLabels\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [externalLabelRadius]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.externalLabels = function (externalLabelRadius) {\n        if (arguments.length === 0) {\n            return _externalLabelRadius;\n        } else if (externalLabelRadius) {\n            _externalLabelRadius = externalLabelRadius;\n        } else {\n            _externalLabelRadius = undefined;\n        }\n\n        return _chart;\n    };\n\n    /**\n     * Get or set whether to draw lines from pie slices to their labels.\n     *\n     * @method drawPaths\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Boolean} [drawPaths]\n     * @returns {Boolean|dc.pieChart}\n     */\n    _chart.drawPaths = function (drawPaths) {\n        if (arguments.length === 0) {\n            return _drawPaths;\n        }\n        _drawPaths = drawPaths;\n        return _chart;\n    };\n\n    function labelPosition (d, arc) {\n        var centroid;\n        if (_externalLabelRadius) {\n            centroid = d3.arc()\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .innerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .centroid(d);\n        } else {\n            centroid = arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return 'translate(' + centroid + ')';\n        }\n    }\n\n    _chart.legendables = function () {\n        return _chart.data().map(function (d, i) {\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\n            legendable.color = _chart.getColor(d, i);\n            return legendable;\n        });\n    };\n\n    _chart.legendHighlight = function (d) {\n        highlightSliceFromLegendable(d, true);\n    };\n\n    _chart.legendReset = function (d) {\n        highlightSliceFromLegendable(d, false);\n    };\n\n    _chart.legendToggle = function (d) {\n        _chart.onClick({key: d.name, others: d.others});\n    };\n\n    function highlightSliceFromLegendable (legendable, highlighted) {\n        _chart.selectAll('g.pie-slice').each(function (d) {\n            if (legendable.name === d.data.key) {\n                d3.select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The sunburst chart implementation is usually used to visualize a small tree distribution.  The sunburst\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering} which defaults to sorting\n * by key.\n *\n * The keys used in the sunburst chart should be arrays, representing paths in the tree.\n *\n * When filtering, the sunburst chart creates instances of {@link dc.filters.HierarchyFilter HierarchyFilter}.\n *\n * @class sunburstChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a sunburst chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.sunburstChart('#chart-container1');\n * // create a sunburst chart under #chart-container2 element using chart group A\n * var chart2 = dc.sunburstChart('#chart-container2', 'chartGroupA');\n *\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.sunburstChart}\n **/\ndc.sunburstChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = 'pie-slice';\n    var _emptyCssClass = 'empty-chart';\n    var _emptyTitle = 'empty';\n\n    var _radius,\n        _givenRadius, // given radius, if any\n        _innerRadius = 0;\n\n    var _g;\n    var _cx;\n    var _cy;\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n    var _externalLabelRadius;\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\n\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\n\n    // Handle cases if value corresponds to generated parent nodes\n    function extendedValueAccessor (d) {\n        if (d.path) {\n            return d.value;\n        }\n        return _chart.cappedValueAccessor(d);\n    }\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + extendedValueAccessor(d);\n    });\n\n    _chart.label(_chart.cappedKeyAccessor);\n    _chart.renderLabel(true);\n\n    _chart.transitionDuration(350);\n\n    _chart.filterHandler(function (dimension, filters) {\n        if (filters.length === 0) {\n            dimension.filter(null);\n        } else {\n            dimension.filterFunction(function (d) {\n                for (var i = 0; i < filters.length; i++) {\n                    var filter = filters[i];\n                    if (filter.isFiltered && filter.isFiltered(d)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return filters;\n    });\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart () {\n        // set radius from chart size if none given, or if given radius is too large\n        var maxRadius =  d3.min([_chart.width(), _chart.height()]) / 2;\n        _radius = _givenRadius && _givenRadius < maxRadius ? _givenRadius : maxRadius;\n\n        var arc = buildArcs();\n\n        var sunburstData, cdata;\n        // if we have data...\n        if (d3.sum(_chart.data(), _chart.valueAccessor())) {\n            cdata = dc.utils.toHierarchy(_chart.data(), _chart.valueAccessor());\n            sunburstData = partitionNodes(cdata);\n            // First one is the root, which is not needed\n            sunburstData.shift();\n            _g.classed(_emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            cdata = dc.utils.toHierarchy([], function (d) {\n                return d.value;\n            });\n            sunburstData = partitionNodes(cdata);\n            _g.classed(_emptyCssClass, true);\n        }\n\n        if (_g) {\n            var slices = _g.selectAll('g.' + _sliceCssClass)\n                .data(sunburstData);\n            createElements(slices, arc, sunburstData);\n\n            updateElements(sunburstData, arc);\n\n            removeElements(slices);\n\n            highlightFilter();\n\n            dc.transition(_g, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n        }\n    }\n\n    function createElements (slices, arc, sunburstData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n        createTitles(slicesEnter);\n        createLabels(sunburstData, arc);\n    }\n\n    function createSliceNodes (slices) {\n        var slicesEnter = slices\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _sliceCssClass +\n                    ' _' + i + ' ' +\n                    _sliceCssClass + '-level-' + d.depth;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath (slicesEnter, arc) {\n        var slicePath = slicesEnter.append('path')\n            .attr('fill', fill)\n            .on('click', onClick)\n            .attr('d', function (d) {\n                return safeArc(arc, d);\n            });\n\n        var transition = dc.transition(slicePath, _chart.transitionDuration());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenSlice);\n        }\n    }\n\n    function createTitles (slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append('title').text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    function positionLabels (labelsEnter, arc) {\n        dc.transition(labelsEnter, _chart.transitionDuration())\n            .attr('transform', function (d) {\n                return labelPosition(d, arc);\n            })\n            .attr('text-anchor', 'middle')\n            .text(function (d) {\n                // position label...\n                if (sliceHasNoData(d) || sliceTooSmall(d)) {\n                    return '';\n                }\n                return _chart.label()(d);\n            });\n    }\n\n    function createLabels (sunburstData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _sliceCssClass)\n                .data(sunburstData);\n\n            labels.exit().remove();\n\n            var labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', function (d, i) {\n                    var classes = _sliceCssClass + ' _' + i;\n                    if (_externalLabelRadius) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on('click', onClick);\n            positionLabels(labelsEnter, arc);\n        }\n    }\n\n    function updateElements (sunburstData, arc) {\n        updateSlicePaths(sunburstData, arc);\n        updateLabels(sunburstData, arc);\n        updateTitles(sunburstData);\n    }\n\n    function updateSlicePaths (sunburstData, arc) {\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\n            .data(sunburstData)\n            .select('path')\n            .attr('d', function (d, i) {\n                return safeArc(arc, d);\n            });\n        var transition = dc.transition(slicePaths, _chart.transitionDuration());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenSlice);\n        }\n        transition.attr('fill', fill);\n    }\n\n    function updateLabels (sunburstData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _sliceCssClass)\n                .data(sunburstData);\n            positionLabels(labels, arc);\n        }\n    }\n\n    function updateTitles (sunburstData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll('g.' + _sliceCssClass)\n                .data(sunburstData)\n                .select('title')\n                .text(function (d) {\n                    return _chart.title()(d);\n                });\n        }\n    }\n\n    function removeElements (slices) {\n        slices.exit().remove();\n    }\n\n    function highlightFilter () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                if (isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set the inner radius of the sunburst chart. If the inner radius is greater than 0px then the\n     * sunburst chart will be rendered as a doughnut chart. Default inner radius is 0px.\n     * @method innerRadius\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [innerRadius=0]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.innerRadius = function (innerRadius) {\n        if (!arguments.length) {\n            return _innerRadius;\n        }\n        _innerRadius = innerRadius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     * @method radius\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [radius]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.radius = function (radius) {\n        if (!arguments.length) {\n            return _givenRadius;\n        }\n        _givenRadius = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     * @method cx\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [cx]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.cx = function (cx) {\n        if (!arguments.length) {\n            return (_cx || _chart.width() / 2);\n        }\n        _cx = cx;\n        return _chart;\n    };\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     * @method cy\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [cy]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.cy = function (cy) {\n        if (!arguments.length) {\n            return (_cy || _chart.height() / 2);\n        }\n        _cy = cy;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @method minAngleForLabel\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [minAngleForLabel=0.5]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.minAngleForLabel = function (minAngleForLabel) {\n        if (!arguments.length) {\n            return _minAngleForLabel;\n        }\n        _minAngleForLabel = minAngleForLabel;\n        return _chart;\n    };\n\n    /**\n     * Title to use for the only slice when there is no data.\n     * @method emptyTitle\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {String} [title]\n     * @returns {String|dc.sunburstChart}\n     */\n    _chart.emptyTitle = function (title) {\n        if (arguments.length === 0) {\n            return _emptyTitle;\n        }\n        _emptyTitle = title;\n        return _chart;\n    };\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     * @method externalLabels\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [externalLabelRadius]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.externalLabels = function (externalLabelRadius) {\n        if (arguments.length === 0) {\n            return _externalLabelRadius;\n        } else if (externalLabelRadius) {\n            _externalLabelRadius = externalLabelRadius;\n        } else {\n            _externalLabelRadius = undefined;\n        }\n\n        return _chart;\n    };\n\n    function buildArcs () {\n        return d3.arc()\n            .startAngle(function (d) {\n                return d.x0;\n            })\n            .endAngle(function (d) {\n                return d.x1;\n            })\n            .innerRadius(function (d) {\n                return d.data.path && d.data.path.length === 1 ? _innerRadius : Math.sqrt(d.y0);\n            })\n            .outerRadius(function (d) {\n                return Math.sqrt(d.y1);\n            });\n    }\n\n    function isSelectedSlice (d) {\n        return isPathFiltered(d.path);\n    }\n\n    function isPathFiltered (path) {\n        for (var i = 0; i < _chart.filters().length; i++) {\n            var currentFilter = _chart.filters()[i];\n            if (currentFilter.isFiltered(path)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // returns all filters that are a parent or child of the path\n    function filtersForPath (path) {\n        var pathFilter = dc.filters.HierarchyFilter(path);\n        var filters = [];\n        for (var i = 0; i < _chart.filters().length; i++) {\n            var currentFilter = _chart.filters()[i];\n            if (currentFilter.isFiltered(path) || pathFilter.isFiltered(currentFilter)) {\n                filters.push(currentFilter);\n            }\n        }\n        return filters;\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    function partitionNodes (data) {\n        // The changes picked up from https://github.com/d3/d3-hierarchy/issues/50\n        var hierarchy = d3.hierarchy(data)\n            .sum(function (d) {\n                return d.children ? 0 : extendedValueAccessor(d);\n            })\n            .sort(function (a, b) {\n                return d3.ascending(a.data.path, b.data.path);\n            });\n\n        var partition = d3.partition()\n            .size([2 * Math.PI, _radius * _radius]);\n\n        partition(hierarchy);\n\n        // In D3v4 the returned data is slightly different, change it enough to suit our purposes.\n        var nodes = hierarchy.descendants().map(function (d) {\n            d.key = d.data.key;\n            d.path = d.data.path;\n            return d;\n        });\n\n        return nodes;\n    }\n\n    function sliceTooSmall (d) {\n        var angle = d.x1 - d.x0;\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData (d) {\n        return extendedValueAccessor(d) === 0;\n    }\n\n    function tweenSlice (d) {\n        var current = this._current;\n        if (isOffCanvas(current)) {\n            current = {x0: 0, x1: 0, y0: 0, y1: 0};\n        }\n        var tweenTarget = {\n            x0: d.x0,\n            x1: d.x1,\n            y0: d.y0,\n            y1: d.y1\n        };\n        var i = d3.interpolate(current, tweenTarget);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(buildArcs(), Object.assign({}, d, i(t)));\n        };\n    }\n\n    function isOffCanvas (d) {\n        return !d || isNaN(d.x0) || isNaN(d.y0);\n    }\n\n    function fill (d, i) {\n        return _chart.getColor(d.data, i);\n    }\n\n    function _onClick (d) {\n        // Clicking on Legends do not filter, it throws exception\n        // Must be better way to handle this, in legends we need to access `d.key`\n        var path = d.path || d.key;\n        var filter = dc.filters.HierarchyFilter(path);\n\n        // filters are equal to, parents or children of the path.\n        var filters = filtersForPath(path);\n        var exactMatch = false;\n        // clear out any filters that cover the path filtered.\n        for (var i = filters.length - 1; i >= 0; i--) {\n            var currentFilter = filters[i];\n            if (dc.utils.arraysIdentical(currentFilter, path)) {\n                exactMatch = true;\n            }\n            _chart.filter(filters[i]);\n        }\n        dc.events.trigger(function () {\n            // if it is a new filter - put it in.\n            if (!exactMatch) {\n                _chart.filter(filter);\n            }\n            _chart.redrawGroup();\n        });\n    }\n\n    _chart.onClick = onClick;\n\n    function onClick (d, i) {\n        if (_g.attr('class') !== _emptyCssClass) {\n            _onClick(d, i);\n        }\n    }\n\n    function safeArc (arc, d) {\n        var path = arc(d);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    function labelPosition (d, arc) {\n        var centroid;\n        if (_externalLabelRadius) {\n            centroid = d3.svg.arc()\n                .outerRadius(_radius + _externalLabelRadius)\n                .innerRadius(_radius + _externalLabelRadius)\n                .centroid(d);\n        } else {\n            centroid = arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return 'translate(' + centroid + ')';\n        }\n    }\n\n    _chart.legendables = function () {\n        return _chart.data().map(function (d, i) {\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\n            legendable.color = _chart.getColor(d, i);\n            return legendable;\n        });\n    };\n\n    _chart.legendHighlight = function (d) {\n        highlightSliceFromLegendable(d, true);\n    };\n\n    _chart.legendReset = function (d) {\n        highlightSliceFromLegendable(d, false);\n    };\n\n    _chart.legendToggle = function (d) {\n        _chart.onClick({key: d.name, others: d.others});\n    };\n\n    function highlightSliceFromLegendable (legendable, highlighted) {\n        _chart.selectAll('g.pie-slice').each(function (d) {\n            if (legendable.name === d.key) {\n                d3.select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Concrete bar chart/histogram implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class barChart\n * @memberof dc\n * @mixes dc.stackMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a bar chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.barChart('#chart-container1');\n * // create a bar chart under #chart-container2 element using chart group A\n * var chart2 = dc.barChart('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.barChart(compositeChart);\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the bar\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\n * composite chart instance instead.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.barChart}\n */\ndc.barChart = function (parent, chartGroup) {\n    var MIN_BAR_WIDTH = 1;\n    var DEFAULT_GAP_BETWEEN_BARS = 2;\n    var LABEL_PADDING = 3;\n\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\n\n    var _gap = DEFAULT_GAP_BETWEEN_BARS;\n    var _centerBar = false;\n    var _alwaysUseRounding = false;\n\n    var _barWidth;\n\n    dc.override(_chart, 'rescale', function () {\n        _chart._rescale();\n        _barWidth = undefined;\n        return _chart;\n    });\n\n    dc.override(_chart, 'render', function () {\n        if (_chart.round() && _centerBar && !_alwaysUseRounding) {\n            dc.logger.warn('By default, brush rounding is disabled if bars are centered. ' +\n                         'See dc.js bar chart API documentation for details.');\n        }\n\n        return _chart._render();\n    });\n\n    _chart.label(function (d) {\n        return dc.utils.printSingleValue(d.y0 + d.y);\n    }, false);\n\n    _chart.plotData = function () {\n        var layers = _chart.chartBodyG().selectAll('g.stack')\n            .data(_chart.data());\n\n        calculateBarWidth();\n\n        layers = layers\n            .enter()\n                .append('g')\n                .attr('class', function (d, i) {\n                    return 'stack ' + '_' + i;\n                })\n            .merge(layers);\n\n        var last = layers.size() - 1;\n        layers.each(function (d, i) {\n            var layer = d3.select(this);\n\n            renderBars(layer, i, d);\n\n            if (_chart.renderLabel() && last === i) {\n                renderLabels(layer, i, d);\n            }\n        });\n    };\n\n    function barHeight (d) {\n        return dc.utils.safeNumber(Math.abs(_chart.y()(d.y + d.y0) - _chart.y()(d.y0)));\n    }\n\n    function labelXPos (d) {\n        var x = _chart.x()(d.x);\n        if (!_centerBar) {\n            x += _barWidth / 2;\n        }\n        if (_chart.isOrdinal() && _gap !== undefined) {\n            x += _gap / 2;\n        }\n        return dc.utils.safeNumber(x);\n    }\n\n    function labelYPos (d) {\n        var y = _chart.y()(d.y + d.y0);\n\n        if (d.y < 0) {\n            y -= barHeight(d);\n        }\n\n        return dc.utils.safeNumber(y - LABEL_PADDING);\n    }\n\n    function renderLabels (layer, layerIndex, d) {\n        var labels = layer.selectAll('text.barLabel')\n            .data(d.values, dc.pluck('x'));\n\n        var labelsEnterUpdate = labels\n            .enter()\n                .append('text')\n                .attr('class', 'barLabel')\n                .attr('text-anchor', 'middle')\n                .attr('x', labelXPos)\n                .attr('y', labelYPos)\n            .merge(labels);\n\n        if (_chart.isOrdinal()) {\n            labelsEnterUpdate.on('click', _chart.onClick);\n            labelsEnterUpdate.attr('cursor', 'pointer');\n        }\n\n        dc.transition(labelsEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', labelXPos)\n            .attr('y', labelYPos)\n            .text(function (d) {\n                return _chart.label()(d);\n            });\n\n        dc.transition(labels.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('height', 0)\n            .remove();\n    }\n\n    function barXPos (d) {\n        var x = _chart.x()(d.x);\n        if (_centerBar) {\n            x -= _barWidth / 2;\n        }\n        if (_chart.isOrdinal() && _gap !== undefined) {\n            x += _gap / 2;\n        }\n        return dc.utils.safeNumber(x);\n    }\n\n    function renderBars (layer, layerIndex, d) {\n        var bars = layer.selectAll('rect.bar')\n            .data(d.values, dc.pluck('x'));\n\n        var enter = bars.enter()\n            .append('rect')\n            .attr('class', 'bar')\n            .attr('fill', dc.pluck('data', _chart.getColor))\n            .attr('x', barXPos)\n            .attr('y', _chart.yAxisHeight())\n            .attr('height', 0);\n\n        var barsEnterUpdate = enter.merge(bars);\n\n        if (_chart.renderTitle()) {\n            enter.append('title').text(dc.pluck('data', _chart.title(d.name)));\n        }\n\n        if (_chart.isOrdinal()) {\n            barsEnterUpdate.on('click', _chart.onClick);\n        }\n\n        dc.transition(barsEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', barXPos)\n            .attr('y', function (d) {\n                var y = _chart.y()(d.y + d.y0);\n\n                if (d.y < 0) {\n                    y -= barHeight(d);\n                }\n\n                return dc.utils.safeNumber(y);\n            })\n            .attr('width', _barWidth)\n            .attr('height', function (d) {\n                return barHeight(d);\n            })\n            .attr('fill', dc.pluck('data', _chart.getColor))\n            .select('title').text(dc.pluck('data', _chart.title(d.name)));\n\n        dc.transition(bars.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', function (d) { return _chart.x()(d.x); })\n            .attr('width', _barWidth * 0.9)\n            .remove();\n    }\n\n    function calculateBarWidth () {\n        if (_barWidth === undefined) {\n            var numberOfBars = _chart.xUnitCount();\n\n            // please can't we always use rangeBands for bar charts?\n            if (_chart.isOrdinal() && _gap === undefined) {\n                _barWidth = Math.floor(_chart.x().bandwidth());\n            } else if (_gap) {\n                _barWidth = Math.floor((_chart.xAxisLength() - (numberOfBars - 1) * _gap) / numberOfBars);\n            } else {\n                _barWidth = Math.floor(_chart.xAxisLength() / (1 + _chart.barPadding()) / numberOfBars);\n            }\n\n            if (_barWidth === Infinity || isNaN(_barWidth) || _barWidth < MIN_BAR_WIDTH) {\n                _barWidth = MIN_BAR_WIDTH;\n            }\n        }\n    }\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        var bars = _chart.chartBodyG().selectAll('rect.bar');\n\n        if (_chart.isOrdinal()) {\n            if (_chart.hasFilter()) {\n                bars.classed(dc.constants.SELECTED_CLASS, function (d) {\n                    return _chart.hasFilter(d.x);\n                });\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return !_chart.hasFilter(d.x);\n                });\n            } else {\n                bars.classed(dc.constants.SELECTED_CLASS, false);\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        } else if (_chart.brushOn() || _chart.parentBrushOn()) {\n            if (!_chart.brushIsEmpty(brushSelection)) {\n                var start = brushSelection[0];\n                var end = brushSelection[1];\n\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return d.x < start || d.x >= end;\n                });\n            } else {\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        }\n    };\n\n    /**\n     * Whether the bar chart will render each bar centered around the data position on the x-axis.\n     * @method centerBar\n     * @memberof dc.barChart\n     * @instance\n     * @param {Boolean} [centerBar=false]\n     * @returns {Boolean|dc.barChart}\n     */\n    _chart.centerBar = function (centerBar) {\n        if (!arguments.length) {\n            return _centerBar;\n        }\n        _centerBar = centerBar;\n        return _chart;\n    };\n\n    dc.override(_chart, 'onClick', function (d) {\n        _chart._onClick(d.data);\n    });\n\n    /**\n     * Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.\n     * Setting this value will also remove any previously set {@link dc.barChart#gap gap}. See the\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\n     * for a visual description of how the padding is applied.\n     * @method barPadding\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [barPadding=0]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.barPadding = function (barPadding) {\n        if (!arguments.length) {\n            return _chart._rangeBandPadding();\n        }\n        _chart._rangeBandPadding(barPadding);\n        _gap = undefined;\n        return _chart;\n    };\n\n    _chart._useOuterPadding = function () {\n        return _gap === undefined;\n    };\n\n    /**\n     * Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.\n     * Will pad the width by `padding * barWidth` on each side of the chart.\n     * @method outerPadding\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [padding=0.5]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.outerPadding = _chart._outerRangeBandPadding;\n\n    /**\n     * Manually set fixed gap (in px) between bars instead of relying on the default auto-generated\n     * gap.  By default the bar chart implementation will calculate and set the gap automatically\n     * based on the number of data points and the length of the x axis.\n     * @method gap\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [gap=2]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _chart;\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (brushSelection && _chart.round() && (!_centerBar || _alwaysUseRounding)) {\n            brushSelection[0] = _chart.round()(brushSelection[0]);\n            brushSelection[1] = _chart.round()(brushSelection[1]);\n        }\n        return brushSelection;\n    };\n\n    /**\n     * Set or get whether rounding is enabled when bars are centered. If false, using\n     * rounding with centered bars will result in a warning and rounding will be ignored.  This flag\n     * has no effect if bars are not {@link dc.barChart#centerBar centered}.\n     * When using standard d3.js rounding methods, the brush often doesn't align correctly with\n     * centered bars since the bars are offset.  The rounding function must add an offset to\n     * compensate, such as in the following example.\n     * @method alwaysUseRounding\n     * @memberof dc.barChart\n     * @instance\n     * @example\n     * chart.round(function(n) { return Math.floor(n) + 0.5; });\n     * @param {Boolean} [alwaysUseRounding=false]\n     * @returns {Boolean|dc.barChart}\n     */\n    _chart.alwaysUseRounding = function (alwaysUseRounding) {\n        if (!arguments.length) {\n            return _alwaysUseRounding;\n        }\n        _alwaysUseRounding = alwaysUseRounding;\n        return _chart;\n    };\n\n    function colorFilter (color, inv) {\n        return function () {\n            var item = d3.select(this);\n            var match = item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    _chart.legendHighlight = function (d) {\n        if (!_chart.isLegendableHidden(d)) {\n            _chart.g().selectAll('rect.bar')\n                .classed('highlight', colorFilter(d.color))\n                .classed('fadeout', colorFilter(d.color, true));\n        }\n    };\n\n    _chart.legendReset = function () {\n        _chart.g().selectAll('rect.bar')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    };\n\n    dc.override(_chart, 'xAxisMax', function () {\n        var max = this._xAxisMax();\n        if ('resolution' in _chart.xUnits()) {\n            var res = _chart.xUnits().resolution;\n            max += res;\n        }\n        return max;\n    });\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Concrete line/area chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class lineChart\n * @memberof dc\n * @mixes dc.stackMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a line chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.lineChart('#chart-container1');\n * // create a line chart under #chart-container2 element using chart group A\n * var chart2 = dc.lineChart('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.lineChart(compositeChart);\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the line\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\n * composite chart instance instead.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.lineChart}\n */\ndc.lineChart = function (parent, chartGroup) {\n    var DEFAULT_DOT_RADIUS = 5;\n    var TOOLTIP_G_CLASS = 'dc-tooltip';\n    var DOT_CIRCLE_CLASS = 'dot';\n    var Y_AXIS_REF_LINE_CLASS = 'yRef';\n    var X_AXIS_REF_LINE_CLASS = 'xRef';\n    var DEFAULT_DOT_OPACITY = 1e-6;\n    var LABEL_PADDING = 3;\n\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\n    var _renderArea = false;\n    var _dotRadius = DEFAULT_DOT_RADIUS;\n    var _dataPointRadius = null;\n    var _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n    var _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n    var _curve = null;\n    var _interpolate = null; // d3.curveLinear;  // deprecated in 3.0\n    var _tension = null;  // deprecated in 3.0\n    var _defined;\n    var _dashStyle;\n    var _xyTipsOn = true;\n\n    _chart.transitionDuration(500);\n    _chart.transitionDelay(0);\n    _chart._rangeBandPadding(1);\n\n    _chart.plotData = function () {\n        var chartBody = _chart.chartBodyG();\n        var layersList = chartBody.select('g.stack-list');\n\n        if (layersList.empty()) {\n            layersList = chartBody.append('g').attr('class', 'stack-list');\n        }\n\n        var layers = layersList.selectAll('g.stack').data(_chart.data());\n\n        var layersEnter = layers\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return 'stack ' + '_' + i;\n            });\n\n        layers = layersEnter.merge(layers);\n\n        drawLine(layersEnter, layers);\n\n        drawArea(layersEnter, layers);\n\n        drawDots(chartBody, layers);\n\n        if (_chart.renderLabel()) {\n            drawLabels(layers);\n        }\n    };\n\n    /**\n     * Gets or sets the curve factory to use for lines and areas drawn, allowing e.g. step\n     * functions, splines, and cubic interpolation. Typically you would use one of the interpolator functions\n     * provided by {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curves}.\n     *\n     * Replaces the use of {@link dc.lineChart#interpolate} and {@link dc.lineChart#tension}\n     * in dc.js < 3.0\n     *\n     * This is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve} and\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}.\n     * @example\n     * // default\n     * chart\n     *     .curve(d3.curveLinear);\n     * // Add tension to curves that support it\n     * chart\n     *     .curve(d3.curveCardinal.tension(0.5));\n     * // You can use some specialized variation like\n     * // https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n     * chart\n     *     .curve(d3.curveCatmullRom.alpha(0.5));\n     * @method curve\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve}\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}\n     * @param  {d3.curve} [curve=d3.curveLinear]\n     * @returns {d3.curve|dc.lineChart}\n     */\n    _chart.curve = function (curve) {\n        if (!arguments.length) {\n            return _curve;\n        }\n        _curve = curve;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step\n     * functions, splines, and cubic interpolation.\n     *\n     * Possible values are: 'linear', 'linear-closed', 'step', 'step-before', 'step-after', 'basis',\n     * 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', and\n     * 'monotone'.\n     *\n     * This function exists for backward compatibility. Use {@link dc.lineChart#curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @method interpolate\n     * @memberof dc.lineChart\n     * @instance\n     * @deprecated since version 3.0 use {@link dc.lineChart#curve} instead\n     * @see {@link dc.lineChart#curve}\n     * @param  {d3.curve} [interpolate=d3.curveLinear]\n     * @returns {d3.curve|dc.lineChart}\n     */\n    _chart.interpolate = dc.logger.deprecate(function (interpolate) {\n        if (!arguments.length) {\n            return _interpolate;\n        }\n        _interpolate = interpolate;\n        return _chart;\n    }, 'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\n\n    /**\n     * Gets or sets the tension to use for lines drawn, in the range 0 to 1.\n     *\n     * Passed to the {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curve function}\n     * if it provides a `.tension` function. Example:\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#curveCardinal_tension curveCardinal.tension}.\n     *\n     * This function exists for backward compatibility. Use {@link dc.lineChart#curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @method tension\n     * @memberof dc.lineChart\n     * @instance\n     * @deprecated since version 3.0 use {@link dc.lineChart#curve} instead\n     * @see {@link dc.lineChart#curve}\n     * @param  {Number} [tension=0]\n     * @returns {Number|dc.lineChart}\n     */\n    _chart.tension = dc.logger.deprecate(function (tension) {\n        if (!arguments.length) {\n            return _tension;\n        }\n        _tension = tension;\n        return _chart;\n    }, 'dc.lineChart.tension has been deprecated since version 3.0 use dc.lineChart.curve instead');\n\n    /**\n     * Gets or sets a function that will determine discontinuities in the line which should be\n     * skipped: the path will be broken into separate subpaths if some points are undefined.\n     * This function is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\n     *\n     * Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write\n     * custom reduce functions to get this to work, depending on your data. See\n     * {@link https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248 this GitHub comment}\n     * for more details and an example.\n     * @method defined\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\n     * @param  {Function} [defined]\n     * @returns {Function|dc.lineChart}\n     */\n    _chart.defined = function (defined) {\n        if (!arguments.length) {\n            return _defined;\n        }\n        _defined = defined;\n        return _chart;\n    };\n\n    /**\n     * Set the line's d3 dashstyle. This value becomes the 'stroke-dasharray' of line. Defaults to empty\n     * array (solid line).\n     * @method dashStyle\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray stroke-dasharray}\n     * @example\n     * // create a Dash Dot Dot Dot\n     * chart.dashStyle([3,1,1,1]);\n     * @param  {Array<Number>} [dashStyle=[]]\n     * @returns {Array<Number>|dc.lineChart}\n     */\n    _chart.dashStyle = function (dashStyle) {\n        if (!arguments.length) {\n            return _dashStyle;\n        }\n        _dashStyle = dashStyle;\n        return _chart;\n    };\n\n    /**\n     * Get or set render area flag. If the flag is set to true then the chart will render the area\n     * beneath each line and the line chart effectively becomes an area chart.\n     * @method renderArea\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Boolean} [renderArea=false]\n     * @returns {Boolean|dc.lineChart}\n     */\n    _chart.renderArea = function (renderArea) {\n        if (!arguments.length) {\n            return _renderArea;\n        }\n        _renderArea = renderArea;\n        return _chart;\n    };\n\n    function colors (d, i) {\n        return _chart.getColor.call(d, d.values, i);\n    }\n\n    // To keep it backward compatible, this covers multiple cases\n    // See https://github.com/dc-js/dc.js/issues/1376\n    // It will be removed when interpolate and tension are removed.\n    function getCurveFactory () {\n        var curve = null;\n\n        // _curve takes precedence\n        if (_curve) {\n            return _curve;\n        }\n\n        // Approximate the D3v3 behavior\n        if (typeof _interpolate === 'function') {\n            curve = _interpolate;\n        } else {\n            // If _interpolate is string\n            var mapping = {\n                'linear': d3.curveLinear,\n                'linear-closed': d3.curveLinearClosed,\n                'step': d3.curveStep,\n                'step-before': d3.curveStepBefore,\n                'step-after': d3.curveStepAfter,\n                'basis': d3.curveBasis,\n                'basis-open': d3.curveBasisOpen,\n                'basis-closed': d3.curveBasisClosed,\n                'bundle': d3.curveBundle,\n                'cardinal': d3.curveCardinal,\n                'cardinal-open': d3.curveCardinalOpen,\n                'cardinal-closed': d3.curveCardinalClosed,\n                'monotone': d3.curveMonotoneX\n            };\n            curve = mapping[_interpolate];\n        }\n\n        // Default value\n        if (!curve) {\n            curve = d3.curveLinear;\n        }\n\n        if (_tension !== null) {\n            if (typeof curve.tension !== 'function') {\n                dc.logger.warn('tension was specified but the curve/interpolate does not support it.');\n            } else {\n                curve = curve.tension(_tension);\n            }\n        }\n        return curve;\n    }\n\n    function drawLine (layersEnter, layers) {\n        var line = d3.line()\n            .x(function (d) {\n                return _chart.x()(d.x);\n            })\n            .y(function (d) {\n                return _chart.y()(d.y + d.y0);\n            })\n            .curve(getCurveFactory());\n        if (_defined) {\n            line.defined(_defined);\n        }\n\n        var path = layersEnter.append('path')\n            .attr('class', 'line')\n            .attr('stroke', colors);\n        if (_dashStyle) {\n            path.attr('stroke-dasharray', _dashStyle);\n        }\n\n        dc.transition(layers.select('path.line'), _chart.transitionDuration(), _chart.transitionDelay())\n            //.ease('linear')\n            .attr('stroke', colors)\n            .attr('d', function (d) {\n                return safeD(line(d.values));\n            });\n    }\n\n    function drawArea (layersEnter, layers) {\n        if (_renderArea) {\n            var area = d3.area()\n                .x(function (d) {\n                    return _chart.x()(d.x);\n                })\n                .y1(function (d) {\n                    return _chart.y()(d.y + d.y0);\n                })\n                .y0(function (d) {\n                    return _chart.y()(d.y0);\n                })\n                .curve(getCurveFactory());\n            if (_defined) {\n                area.defined(_defined);\n            }\n\n            layersEnter.append('path')\n                .attr('class', 'area')\n                .attr('fill', colors)\n                .attr('d', function (d) {\n                    return safeD(area(d.values));\n                });\n\n            dc.transition(layers.select('path.area'), _chart.transitionDuration(), _chart.transitionDelay())\n                //.ease('linear')\n                .attr('fill', colors)\n                .attr('d', function (d) {\n                    return safeD(area(d.values));\n                });\n        }\n    }\n\n    function safeD (d) {\n        return (!d || d.indexOf('NaN') >= 0) ? 'M0,0' : d;\n    }\n\n    function drawDots (chartBody, layers) {\n        if (_chart.xyTipsOn() === 'always' || (!(_chart.brushOn() || _chart.parentBrushOn()) && _chart.xyTipsOn())) {\n            var tooltipListClass = TOOLTIP_G_CLASS + '-list';\n            var tooltips = chartBody.select('g.' + tooltipListClass);\n\n            if (tooltips.empty()) {\n                tooltips = chartBody.append('g').attr('class', tooltipListClass);\n            }\n\n            layers.each(function (d, layerIndex) {\n                var points = d.values;\n                if (_defined) {\n                    points = points.filter(_defined);\n                }\n\n                var g = tooltips.select('g.' + TOOLTIP_G_CLASS + '._' + layerIndex);\n                if (g.empty()) {\n                    g = tooltips.append('g').attr('class', TOOLTIP_G_CLASS + ' _' + layerIndex);\n                }\n\n                createRefLines(g);\n\n                var dots = g.selectAll('circle.' + DOT_CIRCLE_CLASS)\n                    .data(points, dc.pluck('x'));\n\n                var dotsEnterModify = dots\n                    .enter()\n                        .append('circle')\n                        .attr('class', DOT_CIRCLE_CLASS)\n                        .attr('cx', function (d) {\n                            return dc.utils.safeNumber(_chart.x()(d.x));\n                        })\n                        .attr('cy', function (d) {\n                            return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                        })\n                        .attr('r', getDotRadius())\n                        .style('fill-opacity', _dataPointFillOpacity)\n                        .style('stroke-opacity', _dataPointStrokeOpacity)\n                        .attr('fill', _chart.getColor)\n                        .attr('stroke', _chart.getColor)\n                        .on('mousemove', function () {\n                            var dot = d3.select(this);\n                            showDot(dot);\n                            showRefLines(dot, g);\n                        })\n                        .on('mouseout', function () {\n                            var dot = d3.select(this);\n                            hideDot(dot);\n                            hideRefLines(g);\n                        })\n                    .merge(dots);\n\n                dotsEnterModify.call(renderTitle, d);\n\n                dc.transition(dotsEnterModify, _chart.transitionDuration())\n                    .attr('cx', function (d) {\n                        return dc.utils.safeNumber(_chart.x()(d.x));\n                    })\n                    .attr('cy', function (d) {\n                        return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                    })\n                    .attr('fill', _chart.getColor);\n\n                dots.exit().remove();\n            });\n        }\n    }\n\n    _chart.label(function (d) {\n        return dc.utils.printSingleValue(d.y0 + d.y);\n    }, false);\n\n    function drawLabels (layers) {\n        layers.each(function (d, layerIndex) {\n            var layer = d3.select(this);\n            var labels = layer.selectAll('text.lineLabel')\n                .data(d.values, dc.pluck('x'));\n\n            var labelsEnterModify = labels\n                .enter()\n                    .append('text')\n                    .attr('class', 'lineLabel')\n                    .attr('text-anchor', 'middle')\n                .merge(labels);\n\n            dc.transition(labelsEnterModify, _chart.transitionDuration())\n                .attr('x', function (d) {\n                    return dc.utils.safeNumber(_chart.x()(d.x));\n                })\n                .attr('y', function (d) {\n                    var y = _chart.y()(d.y + d.y0) - LABEL_PADDING;\n                    return dc.utils.safeNumber(y);\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n\n            dc.transition(labels.exit(), _chart.transitionDuration())\n                .attr('height', 0)\n                .remove();\n        });\n    }\n\n    function createRefLines (g) {\n        var yRefLine = g.select('path.' + Y_AXIS_REF_LINE_CLASS).empty() ?\n            g.append('path').attr('class', Y_AXIS_REF_LINE_CLASS) : g.select('path.' + Y_AXIS_REF_LINE_CLASS);\n        yRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n\n        var xRefLine = g.select('path.' + X_AXIS_REF_LINE_CLASS).empty() ?\n            g.append('path').attr('class', X_AXIS_REF_LINE_CLASS) : g.select('path.' + X_AXIS_REF_LINE_CLASS);\n        xRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n    }\n\n    function showDot (dot) {\n        dot.style('fill-opacity', 0.8);\n        dot.style('stroke-opacity', 0.8);\n        dot.attr('r', _dotRadius);\n        return dot;\n    }\n\n    function showRefLines (dot, g) {\n        var x = dot.attr('cx');\n        var y = dot.attr('cy');\n        var yAxisX = (_chart._yAxisX() - _chart.margins().left);\n        var yAxisRefPathD = 'M' + yAxisX + ' ' + y + 'L' + (x) + ' ' + (y);\n        var xAxisRefPathD = 'M' + x + ' ' + _chart.yAxisHeight() + 'L' + x + ' ' + y;\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', '').attr('d', yAxisRefPathD);\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', '').attr('d', xAxisRefPathD);\n    }\n\n    function getDotRadius () {\n        return _dataPointRadius || _dotRadius;\n    }\n\n    function hideDot (dot) {\n        dot.style('fill-opacity', _dataPointFillOpacity)\n            .style('stroke-opacity', _dataPointStrokeOpacity)\n            .attr('r', getDotRadius());\n    }\n\n    function hideRefLines (g) {\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', 'none');\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', 'none');\n    }\n\n    function renderTitle (dot, d) {\n        if (_chart.renderTitle()) {\n            dot.select('title').remove();\n            dot.append('title').text(dc.pluck('data', _chart.title(d.name)));\n        }\n    }\n\n    /**\n     * Turn on/off the mouseover behavior of an individual data point which renders a circle and x/y axis\n     * dashed lines back to each respective axis.  This is ignored if the chart\n     * {@link dc.coordinateGridMixin#brushOn brush} is on\n     * @method xyTipsOn\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Boolean} [xyTipsOn=false]\n     * @returns {Boolean|dc.lineChart}\n     */\n    _chart.xyTipsOn = function (xyTipsOn) {\n        if (!arguments.length) {\n            return _xyTipsOn;\n        }\n        _xyTipsOn = xyTipsOn;\n        return _chart;\n    };\n\n    /**\n     * Get or set the radius (in px) for dots displayed on the data points.\n     * @method dotRadius\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Number} [dotRadius=5]\n     * @returns {Number|dc.lineChart}\n     */\n    _chart.dotRadius = function (dotRadius) {\n        if (!arguments.length) {\n            return _dotRadius;\n        }\n        _dotRadius = dotRadius;\n        return _chart;\n    };\n\n    /**\n     * Always show individual dots for each datapoint.\n     *\n     * If `options` is falsy, it disables data point rendering. If no `options` are provided, the\n     * current `options` values are instead returned.\n     * @method renderDataPoints\n     * @memberof dc.lineChart\n     * @instance\n     * @example\n     * chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.0})\n     * @param  {{fillOpacity: Number, strokeOpacity: Number, radius: Number}} [options={fillOpacity: 0.8, strokeOpacity: 0.0, radius: 2}]\n     * @returns {{fillOpacity: Number, strokeOpacity: Number, radius: Number}|dc.lineChart}\n     */\n    _chart.renderDataPoints = function (options) {\n        if (!arguments.length) {\n            return {\n                fillOpacity: _dataPointFillOpacity,\n                strokeOpacity: _dataPointStrokeOpacity,\n                radius: _dataPointRadius\n            };\n        } else if (!options) {\n            _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n            _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n            _dataPointRadius = null;\n        } else {\n            _dataPointFillOpacity = options.fillOpacity || 0.8;\n            _dataPointStrokeOpacity = options.strokeOpacity || 0.0;\n            _dataPointRadius = options.radius || 2;\n        }\n        return _chart;\n    };\n\n    function colorFilter (color, dashstyle, inv) {\n        return function () {\n            var item = d3.select(this);\n            var match = (item.attr('stroke') === color &&\n                item.attr('stroke-dasharray') === ((dashstyle instanceof Array) ?\n                    dashstyle.join(',') : null)) || item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    _chart.legendHighlight = function (d) {\n        if (!_chart.isLegendableHidden(d)) {\n            _chart.g().selectAll('path.line, path.area')\n                .classed('highlight', colorFilter(d.color, d.dashstyle))\n                .classed('fadeout', colorFilter(d.color, d.dashstyle, true));\n        }\n    };\n\n    _chart.legendReset = function () {\n        _chart.g().selectAll('path.line, path.area')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    };\n\n    dc.override(_chart, 'legendables', function () {\n        var legendables = _chart._legendables();\n        if (!_dashStyle) {\n            return legendables;\n        }\n        return legendables.map(function (l) {\n            l.dashstyle = _dashStyle;\n            return l;\n        });\n    });\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The data count widget is a simple widget designed to display the number of records selected by the\n * current filters out of the total number of records in the data set. Once created the data count widget\n * will automatically update the text content of child elements with the following classes:\n *\n * * `.total-count` - total number of records\n * * `.filter-count` - number of records matched by the current filters\n *\n * Note: this widget works best for the specific case of showing the number of records out of a\n * total. If you want a more general-purpose numeric display, please use the\n * {@link dc.numberDisplay} widget instead.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class dataCount\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * var ndx = crossfilter(data);\n * var all = ndx.groupAll();\n *\n * dc.dataCount('.dc-data-count')\n *     .crossfilter(ndx)\n *     .groupAll(all);\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataCount}\n */\ndc.dataCount = function (parent, chartGroup) {\n    var _formatNumber = d3.format(',d');\n    var _chart = dc.baseMixin({});\n    var _crossfilter = null, _groupAll = null;\n    var _html = {some: '', all: ''};\n\n    _chart._mandatoryAttributes(['crossfilter', 'groupAll']);\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending how many items are\n     * selected. The text `%total-count` will replaced with the total number of records, and the text\n     * `%filter-count` will be replaced with the number of selected records.\n     * - all: HTML template to use if all items are selected\n     * - some: HTML template to use if not all items are selected\n     * @method html\n     * @memberof dc.dataCount\n     * @instance\n     * @example\n     * counter.html({\n     *      some: '%filter-count out of %total-count records selected',\n     *      all: 'All records selected. Click on charts to apply filters'\n     * })\n     * @param {{some:String, all: String}} [options]\n     * @returns {{some:String, all: String}|dc.dataCount}\n     */\n    _chart.html = function (options) {\n        if (!arguments.length) {\n            return _html;\n        }\n        if (options.all) {\n            _html.all = options.all;\n        }\n        if (options.some) {\n            _html.some = options.some;\n        }\n        return _chart;\n    };\n\n    /**\n     * Gets or sets an optional function to format the filter count and total count.\n     * @method formatNumber\n     * @memberof dc.dataCount\n     * @instance\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @example\n     * counter.formatNumber(d3.format('.2g'))\n     * @param {Function} [formatter=d3.format('.2g')]\n     * @returns {Function|dc.dataCount}\n     */\n    _chart.formatNumber = function (formatter) {\n        if (!arguments.length) {\n            return _formatNumber;\n        }\n        _formatNumber = formatter;\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        var tot = _chart.crossfilter().size(),\n            val = _chart.groupAll().value();\n        var all = _formatNumber(tot);\n        var selected = _formatNumber(val);\n\n        if ((tot === val) && (_html.all !== '')) {\n            _chart.root().html(_html.all.replace('%total-count', all).replace('%filter-count', selected));\n        } else if (_html.some !== '') {\n            _chart.root().html(_html.some.replace('%total-count', all).replace('%filter-count', selected));\n        } else {\n            _chart.selectAll('.total-count').text(all);\n            _chart.selectAll('.filter-count').text(selected);\n        }\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    _chart.crossfilter = function (cf) {\n        if (!arguments.length) {\n            return _crossfilter;\n        }\n        _crossfilter = cf;\n        return this;\n    };\n    _chart.dimension = dc.logger.annotate(_chart.crossfilter,\n                                          'consider using dataCount.crossfilter instead of dataCount.dimension for clarity');\n\n    _chart.groupAll = function (groupAll) {\n        if (!arguments.length) {\n            return _groupAll;\n        }\n        _groupAll = groupAll;\n        return this;\n    };\n    _chart.group = dc.logger.annotate(_chart.groupAll,\n                                      'consider using dataCount.groupAll instead of dataCount.group for clarity');\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The data table is a simple widget designed to list crossfilter focused data set (rows being\n * filtered) in a good old tabular fashion.\n *\n * An interesting feature of the data table is that you can pass a crossfilter group to the `dimension`, as\n * long as you specify the {@link dc.dataTable#order order} as `d3.descending`, since the data\n * table will use `dimension.top()` to fetch the data in that case, and the method is equally\n * supported on the crossfilter group as the crossfilter dimension.\n *\n * Note: Formerly the data table (and data grid chart) used the {@link dc.dataTable#group group} attribute as a\n * keying function for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data\n * together in sections.  This was confusing so it has been renamed to `section`, although `group` still works.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.io/dc.js/examples/table-on-aggregated-data.html dataTable on a crossfilter group}\n * ({@link https://github.com/dc-js/dc.js/blob/develop/web/examples/table-on-aggregated-data.html source})\n * @class dataTable\n * @memberof dc\n * @mixes dc.baseMixin\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataTable}\n */\ndc.dataTable = function (parent, chartGroup) {\n    var LABEL_CSS_CLASS = 'dc-table-label';\n    var ROW_CSS_CLASS = 'dc-table-row';\n    var COLUMN_CSS_CLASS = 'dc-table-column';\n    var SECTION_CSS_CLASS = 'dc-table-section dc-table-group';\n    var HEAD_CSS_CLASS = 'dc-table-head';\n\n    var _chart = dc.baseMixin({});\n\n    var _size = 25;\n    var _columns = [];\n    var _sortBy = function (d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _beginSlice = 0;\n    var _endSlice;\n    var _showSections = true;\n    var _section = function () { return ''; }; // all in one section\n\n    _chart._mandatoryAttributes(['dimension']);\n\n    _chart._doRender = function () {\n        _chart.selectAll('tbody').remove();\n\n        renderRows(renderSections());\n\n        return _chart;\n    };\n\n    _chart._doColumnValueFormat = function (v, d) {\n        return ((typeof v === 'function') ?\n                v(d) :                          // v as function\n                ((typeof v === 'string') ?\n                 d[v] :                         // v is field name string\n                 v.format(d)                        // v is Object, use fn (element 2)\n                )\n               );\n    };\n\n    _chart._doColumnHeaderFormat = function (d) {\n        // if 'function', convert to string representation\n        // show a string capitalized\n        // if an object then display its label string as-is.\n        return (typeof d === 'function') ?\n                _chart._doColumnHeaderFnToString(d) :\n                ((typeof d === 'string') ?\n                 _chart._doColumnHeaderCapitalize(d) : String(d.label));\n    };\n\n    _chart._doColumnHeaderCapitalize = function (s) {\n        // capitalize\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n\n    _chart._doColumnHeaderFnToString = function (f) {\n        // columnString(f) {\n        var s = String(f);\n        var i1 = s.indexOf('return ');\n        if (i1 >= 0) {\n            var i2 = s.lastIndexOf(';');\n            if (i2 >= 0) {\n                s = s.substring(i1 + 7, i2);\n                var i3 = s.indexOf('numberFormat');\n                if (i3 >= 0) {\n                    s = s.replace('numberFormat', '');\n                }\n            }\n        }\n        return s;\n    };\n\n    function renderSections () {\n        // The 'original' example uses all 'functions'.\n        // If all 'functions' are used, then don't remove/add a header, and leave\n        // the html alone. This preserves the functionality of earlier releases.\n        // A 2nd option is a string representing a field in the data.\n        // A third option is to supply an Object such as an array of 'information', and\n        // supply your own _doColumnHeaderFormat and _doColumnValueFormat functions to\n        // create what you need.\n        var bAllFunctions = true;\n        _columns.forEach(function (f) {\n            bAllFunctions = bAllFunctions & (typeof f === 'function');\n        });\n\n        if (!bAllFunctions) {\n            // ensure one thead\n            var thead = _chart.selectAll('thead').data([0]);\n            thead.exit().remove();\n            thead = thead.enter()\n                    .append('thead')\n                .merge(thead);\n\n            // with one tr\n            var headrow = thead.selectAll('tr').data([0]);\n            headrow.exit().remove();\n            headrow = headrow.enter()\n                    .append('tr')\n                .merge(headrow);\n\n            // with a th for each column\n            var headcols = headrow.selectAll('th')\n                .data(_columns);\n            headcols.exit().remove();\n            headcols.enter().append('th')\n                .merge(headcols)\n                    .attr('class', HEAD_CSS_CLASS)\n                    .html(function (d) {\n                        return (_chart._doColumnHeaderFormat(d));\n                    });\n        }\n\n        var sections = _chart.root().selectAll('tbody')\n            .data(nestEntries(), function (d) {\n                return _chart.keyAccessor()(d);\n            });\n\n        var rowSection = sections\n            .enter()\n            .append('tbody');\n\n        if (_showSections === true) {\n            rowSection\n                .append('tr')\n                .attr('class', SECTION_CSS_CLASS)\n                    .append('td')\n                    .attr('class', LABEL_CSS_CLASS)\n                    .attr('colspan', _columns.length)\n                    .html(function (d) {\n                        return _chart.keyAccessor()(d);\n                    });\n        }\n\n        sections.exit().remove();\n\n        return rowSection;\n    }\n\n    function nestEntries () {\n        var entries;\n        if (_order === d3.ascending) {\n            entries = _chart.dimension().bottom(_size);\n        } else {\n            entries = _chart.dimension().top(_size);\n        }\n\n        return d3.nest()\n            .key(_chart.section())\n            .sortKeys(_order)\n            .entries(entries.sort(function (a, b) {\n                return _order(_sortBy(a), _sortBy(b));\n            }).slice(_beginSlice, _endSlice));\n    }\n\n    function renderRows (sections) {\n        var rows = sections.order()\n            .selectAll('tr.' + ROW_CSS_CLASS)\n            .data(function (d) {\n                return d.values;\n            });\n\n        var rowEnter = rows.enter()\n            .append('tr')\n            .attr('class', ROW_CSS_CLASS);\n\n        _columns.forEach(function (v, i) {\n            rowEnter.append('td')\n                .attr('class', COLUMN_CSS_CLASS + ' _' + i)\n                .html(function (d) {\n                    return _chart._doColumnValueFormat(v, d);\n                });\n        });\n\n        rows.exit().remove();\n\n        return rows;\n    }\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set the section function for the data table. The section function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into sections. By default there will be only one section with no name.\n     *\n     * Set {@link dc.dataTable#showSections showSections} to false to hide the section headers\n     *\n     * @method section\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * // section rows by the value of their field\n     * chart\n     *     .section(function(d) { return d.field; })\n     * @param {Function} section Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.section = function (section) {\n        if (!arguments.length) {\n            return _section;\n        }\n        _section = section;\n        return _chart;\n    };\n\n    /**\n     * Backward-compatible synonym for {@link dc.dataTable#section section}.\n     *\n     * @method group\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.group = dc.logger.annotate(_chart.section,\n                                      'consider using dataTable.section instead of dataTable.group for clarity');\n\n    /**\n     * Get or set the table size which determines the number of rows displayed by the widget.\n     * @method size\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number} [size=25]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.size = function (size) {\n        if (!arguments.length) {\n            return _size;\n        }\n        _size = size;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed\n     * by the widget. Useful when implementing pagination.\n     *\n     * Note: the sortBy function will determine how the rows are ordered for pagination purposes.\n\n     * See the {@link http://dc-js.github.io/dc.js/examples/table-pagination.html table pagination example}\n     * to see how to implement the pagination user interface using `beginSlice` and `endSlice`.\n     * @method beginSlice\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number} [beginSlice=0]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.beginSlice = function (beginSlice) {\n        if (!arguments.length) {\n            return _beginSlice;\n        }\n        _beginSlice = beginSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the\n     * widget. Useful when implementing pagination. See {@link dc.dataTable#beginSlice `beginSlice`} for more information.\n     * @method endSlice\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number|undefined} [endSlice=undefined]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.endSlice = function (endSlice) {\n        if (!arguments.length) {\n            return _endSlice;\n        }\n        _endSlice = endSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set column functions. The data table widget supports several methods of specifying the\n     * columns to display.\n     *\n     * The original method uses an array of functions to generate dynamic columns. Column functions\n     * are simple javascript functions with only one input argument `d` which represents a row in\n     * the data set. The return value of these functions will be used to generate the content for\n     * each cell. However, this method requires the HTML for the table to have a fixed set of column\n     * headers.\n     *\n     * <pre><code>chart.columns([\n     *     function(d) { return d.date; },\n     *     function(d) { return d.open; },\n     *     function(d) { return d.close; },\n     *     function(d) { return numberFormat(d.close - d.open); },\n     *     function(d) { return d.volume; }\n     * ]);\n     * </code></pre>\n     *\n     * In the second method, you can list the columns to read from the data without specifying it as\n     * a function, except where necessary (ie, computed columns).  Note the data element name is\n     * capitalized when displayed in the table header. You can also mix in functions as necessary,\n     * using the third `{label, format}` form, as shown below.\n     *\n     * <pre><code>chart.columns([\n     *     \"date\",    // d[\"date\"], ie, a field accessor; capitalized automatically\n     *     \"open\",    // ...\n     *     \"close\",   // ...\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) {\n     *             return numberFormat(d.close - d.open);\n     *         }\n     *     },\n     *     \"volume\"   // d[\"volume\"], ie, a field accessor; capitalized automatically\n     * ]);\n     * </code></pre>\n     *\n     * In the third example, we specify all fields using the `{label, format}` method:\n     * <pre><code>chart.columns([\n     *     {\n     *         label: \"Date\",\n     *         format: function (d) { return d.date; }\n     *     },\n     *     {\n     *         label: \"Open\",\n     *         format: function (d) { return numberFormat(d.open); }\n     *     },\n     *     {\n     *         label: \"Close\",\n     *         format: function (d) { return numberFormat(d.close); }\n     *     },\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) { return numberFormat(d.close - d.open); }\n     *     },\n     *     {\n     *         label: \"Volume\",\n     *         format: function (d) { return d.volume; }\n     *     }\n     * ]);\n     * </code></pre>\n     *\n     * You may wish to override the dataTable functions `_doColumnHeaderCapitalize` and\n     * `_doColumnHeaderFnToString`, which are used internally to translate the column information or\n     * function into a displayed header. The first one is used on the \"string\" column specifier; the\n     * second is used to transform a stringified function into something displayable. For the Stock\n     * example, the function for Change becomes the table header **d.close - d.open**.\n     *\n     * Finally, you can even specify a completely different form of column definition. To do this,\n     * override `_chart._doColumnHeaderFormat` and `_chart._doColumnValueFormat` Be aware that\n     * fields without numberFormat specification will be displayed just as they are stored in the\n     * data, unformatted.\n     * @method columns\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Array<Function>} [columns=[]]\n     * @returns {Array<Function>}|dc.dataTable}\n     */\n    _chart.columns = function (columns) {\n        if (!arguments.length) {\n            return _columns;\n        }\n        _columns = columns;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at row level and returns a\n     * particular field to be sorted by.\n     * @method sortBy\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     * @param {Function} [sortBy=identity function]\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.sortBy = function (sortBy) {\n        if (!arguments.length) {\n            return _sortBy;\n        }\n        _sortBy = sortBy;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort order. If the order is `d3.ascending`, the data table will use\n     * `dimension().bottom()` to fetch the data; otherwise it will use `dimension().top()`\n     * @method order\n     * @memberof dc.dataTable\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param {Function} [order=d3.ascending]\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set if section header rows will be shown.\n     * @method showSections\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * chart\n     *     .section([value], [name])\n     *     .showSections(true|false);\n     * @param {Boolean} [showSections=true]\n     * @returns {Boolean|dc.dataTable}\n     */\n    _chart.showSections = function (showSections) {\n        if (!arguments.length) {\n            return _showSections;\n        }\n        _showSections = showSections;\n        return _chart;\n    };\n\n    /**\n     * Backward-compatible synonym for {@link dc.dataTable#showSections showSections}.\n     * @method showGroups\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Boolean} [showGroups=true]\n     * @returns {Boolean|dc.dataTable}\n     */\n    _chart.showGroups = dc.logger.annotate(_chart.showSections,\n                                           'consider using dataTable.showSections instead of dataTable.showGroups for clarity');\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Data grid is a simple widget designed to list the filtered records, providing\n * a simple way to define how the items are displayed.\n *\n *\n * Note: Formerly the data grid chart (and data table) used the {@link dc.dataGrid#group group} attribute as a\n * keying function for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data\n * together in sections.  This was confusing so it has been renamed to `section`, although `group` still works.\n *\n * Examples:\n * - {@link http://europarl.me/dc.js/web/ep/index.html List of members of the european parliament}\n * @class dataGrid\n * @memberof dc\n * @mixes dc.baseMixin\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataGrid}\n */\ndc.dataGrid = function (parent, chartGroup) {\n    var LABEL_CSS_CLASS = 'dc-grid-label';\n    var ITEM_CSS_CLASS = 'dc-grid-item';\n    var SECTION_CSS_CLASS = 'dc-grid-section dc-grid-group';\n    var GRID_CSS_CLASS = 'dc-grid-top';\n\n    var _chart = dc.baseMixin({});\n\n    var _section = null;\n    var _size = 999; // shouldn't be needed, but you might\n    var _html = function (d) { return 'you need to provide an html() handling param:  ' + JSON.stringify(d); };\n    var _sortBy = function (d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _beginSlice = 0, _endSlice;\n\n    var _htmlSection = function (d) {\n        return '<div class=\\'' + SECTION_CSS_CLASS + '\\'><h1 class=\\'' + LABEL_CSS_CLASS + '\\'>' +\n            _chart.keyAccessor()(d) + '</h1></div>';\n    };\n\n    _chart._mandatoryAttributes(['dimension', 'section']);\n\n    _chart._doRender = function () {\n        _chart.selectAll('div.' + GRID_CSS_CLASS).remove();\n\n        renderItems(renderSections());\n\n        return _chart;\n    };\n\n    function renderSections () {\n        var sections = _chart.root().selectAll('div.' + GRID_CSS_CLASS)\n                .data(nestEntries(), function (d) {\n                    return _chart.keyAccessor()(d);\n                });\n\n        var itemSection = sections\n                .enter()\n                .append('div')\n                .attr('class', GRID_CSS_CLASS);\n\n        if (_htmlSection) {\n            itemSection\n                .html(function (d) {\n                    return _htmlSection(d);\n                });\n        }\n\n        sections.exit().remove();\n        return itemSection;\n    }\n\n    function nestEntries () {\n        var entries = _chart.dimension().top(_size);\n\n        return d3.nest()\n            .key(_chart.section())\n            .sortKeys(_order)\n            .entries(entries.sort(function (a, b) {\n                return _order(_sortBy(a), _sortBy(b));\n            }).slice(_beginSlice, _endSlice));\n    }\n\n    function renderItems (sections) {\n        var items = sections.order()\n                .selectAll('div.' + ITEM_CSS_CLASS)\n                .data(function (d) {\n                    return d.values;\n                });\n\n        items.exit().remove();\n\n        items = items\n            .enter()\n                .append('div')\n                .attr('class', ITEM_CSS_CLASS)\n                .html(function (d) {\n                    return _html(d);\n                })\n            .merge(items);\n\n        return items;\n    }\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set the section function for the data grid. The section function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into sections.\n     *\n     * Do not pass in a crossfilter section as this will not work.\n     * @method section\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * // section rows by the value of their field\n     * chart\n     *     .section(function(d) { return d.field; })\n     * @param {Function} section Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.section = function (section) {\n        if (!arguments.length) {\n            return _section;\n        }\n        _section = section;\n        return _chart;\n    };\n\n    /**\n     * Backward-compatible synonym for {@link dc.dataGrid#section section}.\n     *\n     * @method group\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.group = dc.logger.annotate(_chart.section,\n                                      'consider using dataGrid.section instead of dataGrid.group for clarity');\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @method beginSlice\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [beginSlice=0]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.beginSlice = function (beginSlice) {\n        if (!arguments.length) {\n            return _beginSlice;\n        }\n        _beginSlice = beginSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @method endSlice\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [endSlice]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.endSlice = function (endSlice) {\n        if (!arguments.length) {\n            return _endSlice;\n        }\n        _endSlice = endSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the grid size which determines the number of items displayed by the widget.\n     * @method size\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [size=999]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.size = function (size) {\n        if (!arguments.length) {\n            return _size;\n        }\n        _size = size;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that formats an item. The data grid widget uses a\n     * function to generate dynamic html. Use your favourite templating engine or\n     * generate the string directly.\n     * @method html\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.html(function (d) { return '<div class='item '+data.exampleCategory+''>'+data.exampleString+'</div>';});\n     * @param {Function} [html]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.html = function (html) {\n        if (!arguments.length) {\n            return _html;\n        }\n        _html = html;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that formats a section label.\n     * @method htmlSection\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.htmlSection (function (d) { return '<h2>'.d.key . 'with ' . d.values.length .' items</h2>'});\n     * @param {Function} [htmlSection]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.htmlSection = function (htmlSection) {\n        if (!arguments.length) {\n            return _htmlSection;\n        }\n        _htmlSection = htmlSection;\n        return _chart;\n    };\n\n    /**\n     * Backward-compatible synonym for {@link dc.dataGrid#htmlSection htmlSection}.\n     * @method htmlGroup\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Function} [htmlGroup]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.htmlGroup = dc.logger.annotate(_chart.htmlSection,\n                                          'consider using dataGrid.htmlSection instead of dataGrid.htmlGroup for clarity');\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at the item\n     * level and returns a particular field to be sorted.\n     * @method sortBy\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     * @param {Function} [sortByFunction]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.sortBy = function (sortByFunction) {\n        if (!arguments.length) {\n            return _sortBy;\n        }\n        _sortBy = sortByFunction;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort the order function.\n     * @method order\n     * @memberof dc.dataGrid\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param {Function} [order=d3.ascending]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A concrete implementation of a general purpose bubble chart that allows data visualization using the\n * following dimensions:\n * - x axis position\n * - y axis position\n * - bubble radius\n * - color\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\n * @class bubbleChart\n * @memberof dc\n * @mixes dc.bubbleMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a bubble chart under #chart-container1 element using the default global chart group\n * var bubbleChart1 = dc.bubbleChart('#chart-container1');\n * // create a bubble chart under #chart-container2 element using chart group A\n * var bubbleChart2 = dc.bubbleChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.bubbleChart}\n */\ndc.bubbleChart = function (parent, chartGroup) {\n    var _chart = dc.bubbleMixin(dc.coordinateGridMixin({}));\n\n    _chart.transitionDuration(750);\n\n    _chart.transitionDelay(0);\n\n    var bubbleLocator = function (d) {\n        return 'translate(' + (bubbleX(d)) + ',' + (bubbleY(d)) + ')';\n    };\n\n    _chart.plotData = function () {\n        _chart.calculateRadiusDomain();\n        _chart.r().range([_chart.MIN_RADIUS, _chart.xAxisLength() * _chart.maxBubbleRelativeSize()]);\n\n        var data = _chart.data();\n        var bubbleG = _chart.chartBodyG().selectAll('g.' + _chart.BUBBLE_NODE_CLASS)\n                .data(data, function (d) { return d.key; });\n        if (_chart.sortBubbleSize()) {\n            // update dom order based on sort\n            bubbleG.order();\n        }\n\n        removeNodes(bubbleG);\n\n        bubbleG = renderNodes(bubbleG);\n\n        updateNodes(bubbleG);\n\n        _chart.fadeDeselectedArea(_chart.filter());\n    };\n\n    function renderNodes (bubbleG) {\n        var bubbleGEnter = bubbleG.enter().append('g');\n\n        bubbleGEnter\n            .attr('class', _chart.BUBBLE_NODE_CLASS)\n            .attr('transform', bubbleLocator)\n            .append('circle').attr('class', function (d, i) {\n                return _chart.BUBBLE_CLASS + ' _' + i;\n            })\n            .on('click', _chart.onClick)\n            .attr('fill', _chart.getColor)\n            .attr('r', 0);\n\n        bubbleG = bubbleGEnter.merge(bubbleG);\n\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\n            .select('circle.' + _chart.BUBBLE_CLASS)\n            .attr('r', function (d) {\n                return _chart.bubbleR(d);\n            })\n            .attr('opacity', function (d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart._doRenderLabel(bubbleGEnter);\n\n        _chart._doRenderTitles(bubbleGEnter);\n\n        return bubbleG;\n    }\n\n    function updateNodes (bubbleG) {\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', bubbleLocator)\n            .select('circle.' + _chart.BUBBLE_CLASS)\n            .attr('fill', _chart.getColor)\n            .attr('r', function (d) {\n                return _chart.bubbleR(d);\n            })\n            .attr('opacity', function (d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart.doUpdateLabels(bubbleG);\n        _chart.doUpdateTitles(bubbleG);\n    }\n\n    function removeNodes (bubbleG) {\n        bubbleG.exit().remove();\n    }\n\n    function bubbleX (d) {\n        var x = _chart.x()(_chart.keyAccessor()(d));\n        if (isNaN(x) || !isFinite(x)) {\n            x = 0;\n        }\n        return x;\n    }\n\n    function bubbleY (d) {\n        var y = _chart.y()(_chart.valueAccessor()(d));\n        if (isNaN(y) || !isFinite(y)) {\n            y = 0;\n        }\n        return y;\n    }\n\n    _chart.renderBrush = function () {\n        // override default x axis brush from parent chart\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Composite charts are a special kind of chart that render multiple charts on the same Coordinate\n * Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to\n * achieve some quite flexible charting effects.\n * @class compositeChart\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a composite chart under #chart-container1 element using the default global chart group\n * var compositeChart1 = dc.compositeChart('#chart-container1');\n * // create a composite chart under #chart-container2 element using chart group A\n * var compositeChart2 = dc.compositeChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.compositeChart}\n */\ndc.compositeChart = function (parent, chartGroup) {\n\n    var SUB_CHART_CLASS = 'sub';\n    var DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;\n\n    var _chart = dc.coordinateGridMixin({});\n    var _children = [];\n\n    var _childOptions = {};\n\n    var _shareColors = false,\n        _shareTitle = true,\n        _alignYAxes = false;\n\n    var _rightYAxis = d3.axisRight(),\n        _rightYAxisLabel = 0,\n        _rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING,\n        _rightY,\n        _rightAxisGridLines = false;\n\n    _chart._mandatoryAttributes([]);\n    _chart.transitionDuration(500);\n    _chart.transitionDelay(0);\n\n    dc.override(_chart, '_generateG', function () {\n        var g = this.__generateG();\n\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            generateChildG(child, i);\n\n            if (!child.dimension()) {\n                child.dimension(_chart.dimension());\n            }\n            if (!child.group()) {\n                child.group(_chart.group());\n            }\n\n            child.chartGroup(_chart.chartGroup());\n            child.svg(_chart.svg());\n            child.xUnits(_chart.xUnits());\n            child.transitionDuration(_chart.transitionDuration(), _chart.transitionDelay());\n            child.parentBrushOn(_chart.brushOn());\n            child.brushOn(false);\n            child.renderTitle(_chart.renderTitle());\n            child.elasticX(_chart.elasticX());\n        }\n\n        return g;\n    });\n\n    _chart.on('filtered.dcjs-composite-chart', function (chart) {\n        // Propagate the filters onto the children\n        // Notice that on children the call is .replaceFilter and not .filter\n        //   the reason is that _chart.filter() returns the entire current set of filters not just the last added one\n        for (var i = 0; i < _children.length; ++i) {\n            _children[i].replaceFilter(_chart.filter());\n        }\n    });\n\n    _chart._prepareYAxis = function () {\n        var left = (leftYAxisChildren().length !== 0);\n        var right = (rightYAxisChildren().length !== 0);\n        var ranges = calculateYAxisRanges(left, right);\n\n        if (left) { prepareLeftYAxis(ranges); }\n        if (right) { prepareRightYAxis(ranges); }\n\n        if (leftYAxisChildren().length > 0 && !_rightAxisGridLines) {\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _chart.y(), _chart.yAxis());\n        } else if (rightYAxisChildren().length > 0) {\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _rightY, _rightYAxis);\n        }\n    };\n\n    _chart.renderYAxis = function () {\n        if (leftYAxisChildren().length !== 0) {\n            _chart.renderYAxisAt('y', _chart.yAxis(), _chart.margins().left);\n            _chart.renderYAxisLabel('y', _chart.yAxisLabel(), -90);\n        }\n\n        if (rightYAxisChildren().length !== 0) {\n            _chart.renderYAxisAt('yr', _chart.rightYAxis(), _chart.width() - _chart.margins().right);\n            _chart.renderYAxisLabel('yr', _chart.rightYAxisLabel(), 90, _chart.width() - _rightYAxisLabelPadding);\n        }\n    };\n\n    function calculateYAxisRanges (left, right) {\n        var lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax;\n        var ranges;\n\n        if (left) {\n            lyAxisMin = yAxisMin();\n            lyAxisMax = yAxisMax();\n        }\n\n        if (right) {\n            ryAxisMin = rightYAxisMin();\n            ryAxisMax = rightYAxisMax();\n        }\n\n        if (_chart.alignYAxes() && left && right) {\n            ranges = alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax);\n        }\n\n        return ranges || {\n            lyAxisMin: lyAxisMin,\n            lyAxisMax: lyAxisMax,\n            ryAxisMin: ryAxisMin,\n            ryAxisMax: ryAxisMax\n        };\n    }\n\n    function alignYAxisRanges (lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax) {\n        // since the two series will share a zero, each Y is just a multiple\n        // of the other. and the ratio should be the ratio of the ranges of the\n        // input data, so that they come out the same height. so we just min/max\n\n        // note: both ranges already include zero due to the stack mixin (#667)\n        // if #667 changes, we can reconsider whether we want data height or\n        // height from zero to be equal. and it will be possible for the axes\n        // to be aligned but not visible.\n        var extentRatio = (ryAxisMax - ryAxisMin) / (lyAxisMax - lyAxisMin);\n\n        return {\n            lyAxisMin: Math.min(lyAxisMin, ryAxisMin / extentRatio),\n            lyAxisMax: Math.max(lyAxisMax, ryAxisMax / extentRatio),\n            ryAxisMin: Math.min(ryAxisMin, lyAxisMin * extentRatio),\n            ryAxisMax: Math.max(ryAxisMax, lyAxisMax * extentRatio)\n        };\n    }\n\n    function prepareRightYAxis (ranges) {\n        var needDomain = _chart.rightY() === undefined || _chart.elasticY(),\n            needRange = needDomain || _chart.resizing();\n        if (_chart.rightY() === undefined) {\n            _chart.rightY(d3.scaleLinear());\n        }\n        if (needDomain) {\n            _chart.rightY().domain([ranges.ryAxisMin, ranges.ryAxisMax]);\n        }\n        if (needRange) {\n            _chart.rightY().rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _chart.rightY().range([_chart.yAxisHeight(), 0]);\n        _chart.rightYAxis(_chart.rightYAxis().scale(_chart.rightY()));\n\n        // In D3v4 create a RightAxis\n        // _chart.rightYAxis().orient('right');\n    }\n\n    function prepareLeftYAxis (ranges) {\n        var needDomain = _chart.y() === undefined || _chart.elasticY(),\n            needRange = needDomain || _chart.resizing();\n        if (_chart.y() === undefined) {\n            _chart.y(d3.scaleLinear());\n        }\n        if (needDomain) {\n            _chart.y().domain([ranges.lyAxisMin, ranges.lyAxisMax]);\n        }\n        if (needRange) {\n            _chart.y().rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _chart.y().range([_chart.yAxisHeight(), 0]);\n        _chart.yAxis(_chart.yAxis().scale(_chart.y()));\n\n        // In D3v4 create a LeftAxis\n        // _chart.yAxis().orient('left');\n    }\n\n    function generateChildG (child, i) {\n        child._generateG(_chart.g());\n        child.g().attr('class', SUB_CHART_CLASS + ' _' + i);\n    }\n\n    _chart.plotData = function () {\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            if (!child.g()) {\n                generateChildG(child, i);\n            }\n\n            if (_shareColors) {\n                child.colors(_chart.colors());\n            }\n\n            child.x(_chart.x());\n\n            child.xAxis(_chart.xAxis());\n\n            if (child.useRightYAxis()) {\n                child.y(_chart.rightY());\n                child.yAxis(_chart.rightYAxis());\n            } else {\n                child.y(_chart.y());\n                child.yAxis(_chart.yAxis());\n            }\n\n            child.plotData();\n\n            child._activateRenderlets();\n        }\n    };\n\n    /**\n     * Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the\n     * default behavior. This option is only respected when subcharts with both left and right y-axes\n     * are present.\n     * @method useRightAxisGridLines\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [useRightAxisGridLines=false]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.useRightAxisGridLines = function (useRightAxisGridLines) {\n        if (!arguments) {\n            return _rightAxisGridLines;\n        }\n\n        _rightAxisGridLines = useRightAxisGridLines;\n        return _chart;\n    };\n\n    /**\n     * Get or set chart-specific options for all child charts. This is equivalent to calling\n     * {@link dc.baseMixin#options .options} on each child chart.\n     *\n     * Note: currently you must call this before `compose` in order for the options to be propagated.\n     * @method childOptions\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Object} [childOptions]\n     * @returns {Object|dc.compositeChart}\n     */\n    _chart.childOptions = function (childOptions) {\n        if (!arguments.length) {\n            return _childOptions;\n        }\n        _childOptions = childOptions;\n        _children.forEach(function (child) {\n            child.options(_childOptions);\n        });\n        return _chart;\n    };\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        if (_chart.brushOn()) {\n            for (var i = 0; i < _children.length; ++i) {\n                var child = _children[i];\n                child.fadeDeselectedArea(brushSelection);\n            }\n        }\n    };\n\n    /**\n     * Set or get the right y axis label.\n     * @method rightYAxisLabel\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {String} [rightYAxisLabel]\n     * @param {Number} [padding]\n     * @returns {String|dc.compositeChart}\n     */\n    _chart.rightYAxisLabel = function (rightYAxisLabel, padding) {\n        if (!arguments.length) {\n            return _rightYAxisLabel;\n        }\n        _rightYAxisLabel = rightYAxisLabel;\n        _chart.margins().right -= _rightYAxisLabelPadding;\n        _rightYAxisLabelPadding = (padding === undefined) ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;\n        _chart.margins().right += _rightYAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n     * Combine the given charts into one single composite coordinate grid chart.\n     *\n     * Note: currently due to the way it is implemented, you must call this function at the end of\n     * initialization of the composite chart, in particular after `shareTitle`, `childOptions`,\n     * `width`, `height`, and `margins`, in order for the settings to get propagated to the children\n     * correctly.\n     * @method compose\n     * @memberof dc.compositeChart\n     * @instance\n     * @example\n     * moveChart.compose([\n     *     // when creating sub-chart you need to pass in the parent chart\n     *     dc.lineChart(moveChart)\n     *         .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\n     *         .valueAccessor(function (d){return d.value.avg;})\n     *         // most of the normal functions will continue to work in a composed chart\n     *         .renderArea(true)\n     *         .stack(monthlyMoveGroup, function (d){return d.value;})\n     *         .title(function (d){\n     *             var value = d.value.avg?d.value.avg:d.value;\n     *             if(isNaN(value)) value = 0;\n     *             return dateFormat(d.key) + '\\n' + numberFormat(value);\n     *         }),\n     *     dc.barChart(moveChart)\n     *         .group(volumeByMonthGroup)\n     *         .centerBar(true)\n     * ]);\n     * @param {Array<Chart>} [subChartArray]\n     * @returns {dc.compositeChart}\n     */\n    _chart.compose = function (subChartArray) {\n        _children = subChartArray;\n        _children.forEach(function (child) {\n            child.height(_chart.height());\n            child.width(_chart.width());\n            child.margins(_chart.margins());\n\n            if (_shareTitle) {\n                child.title(_chart.title());\n            }\n\n            child.options(_childOptions);\n        });\n        return _chart;\n    };\n\n    /**\n     * Returns the child charts which are composed into the composite chart.\n     * @method children\n     * @memberof dc.compositeChart\n     * @instance\n     * @returns {Array<dc.baseMixin>}\n     */\n    _chart.children = function () {\n        return _children;\n    };\n\n    /**\n     * Get or set color sharing for the chart. If set, the {@link dc.colorMixin#colors .colors()} value from this chart\n     * will be shared with composed children. Additionally if the child chart implements\n     * Stackable and has not set a custom .colorAccessor, then it will generate a color\n     * specific to its order in the composition.\n     * @method shareColors\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [shareColors=false]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.shareColors = function (shareColors) {\n        if (!arguments.length) {\n            return _shareColors;\n        }\n        _shareColors = shareColors;\n        return _chart;\n    };\n\n    /**\n     * Get or set title sharing for the chart. If set, the {@link dc.baseMixin#title .title()} value from\n     * this chart will be shared with composed children.\n     *\n     * Note: currently you must call this before `compose` or the child will still get the parent's\n     * `title` function!\n     * @method shareTitle\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [shareTitle=true]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.shareTitle = function (shareTitle) {\n        if (!arguments.length) {\n            return _shareTitle;\n        }\n        _shareTitle = shareTitle;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y scale for the right axis. The right y scale is typically automatically\n     * generated by the chart implementation.\n     * @method rightY\n     * @memberof dc.compositeChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [yScale]\n     * @returns {d3.scale|dc.compositeChart}\n     */\n    _chart.rightY = function (yScale) {\n        if (!arguments.length) {\n            return _rightY;\n        }\n        _rightY = yScale;\n        _chart.rescale();\n        return _chart;\n    };\n\n    /**\n     * Get or set alignment between left and right y axes. A line connecting '0' on both y axis\n     * will be parallel to x axis. This only has effect when {@link #dc.coordinateGridMixin+elasticY elasticY} is true.\n     * @method alignYAxes\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [alignYAxes=false]\n     * @returns {Chart}\n     */\n    _chart.alignYAxes = function (alignYAxes) {\n        if (!arguments.length) {\n            return _alignYAxes;\n        }\n        _alignYAxes = alignYAxes;\n        _chart.rescale();\n        return _chart;\n    };\n\n    function leftYAxisChildren () {\n        return _children.filter(function (child) {\n            return !child.useRightYAxis();\n        });\n    }\n\n    function rightYAxisChildren () {\n        return _children.filter(function (child) {\n            return child.useRightYAxis();\n        });\n    }\n\n    function getYAxisMin (charts) {\n        return charts.map(function (c) {\n            return c.yAxisMin();\n        });\n    }\n\n    delete _chart.yAxisMin;\n    function yAxisMin () {\n        return d3.min(getYAxisMin(leftYAxisChildren()));\n    }\n\n    function rightYAxisMin () {\n        return d3.min(getYAxisMin(rightYAxisChildren()));\n    }\n\n    function getYAxisMax (charts) {\n        return charts.map(function (c) {\n            return c.yAxisMax();\n        });\n    }\n\n    delete _chart.yAxisMax;\n    function yAxisMax () {\n        return dc.utils.add(d3.max(getYAxisMax(leftYAxisChildren())), _chart.yAxisPadding());\n    }\n\n    function rightYAxisMax () {\n        return dc.utils.add(d3.max(getYAxisMax(rightYAxisChildren())), _chart.yAxisPadding());\n    }\n\n    function getAllXAxisMinFromChildCharts () {\n        return _children.map(function (c) {\n            return c.xAxisMin();\n        });\n    }\n\n    dc.override(_chart, 'xAxisMin', function () {\n        return dc.utils.subtract(d3.min(getAllXAxisMinFromChildCharts()), _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    });\n\n    function getAllXAxisMaxFromChildCharts () {\n        return _children.map(function (c) {\n            return c.xAxisMax();\n        });\n    }\n\n    dc.override(_chart, 'xAxisMax', function () {\n        return dc.utils.add(d3.max(getAllXAxisMaxFromChildCharts()), _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    });\n\n    _chart.legendables = function () {\n        return _children.reduce(function (items, child) {\n            if (_shareColors) {\n                child.colors(_chart.colors());\n            }\n            items.push.apply(items, child.legendables());\n            return items;\n        }, []);\n    };\n\n    _chart.legendHighlight = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendHighlight(d);\n        }\n    };\n\n    _chart.legendReset = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendReset(d);\n        }\n    };\n\n    _chart.legendToggle = function () {\n        console.log('composite should not be getting legendToggle itself');\n    };\n\n    /**\n     * Set or get the right y axis used by the composite chart. This function is most useful when y\n     * axis customization is required. The y axis in dc.js is an instance of a\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight) therefore it supports any valid\n     * d3 axis manipulation.\n     *\n     * **Caution**: The right y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * @method rightYAxis\n     * @memberof dc.compositeChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisRight}\n     * @example\n     * // customize y axis tick format\n     * chart.rightYAxis().tickFormat(function (v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.rightYAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axisRight} [rightYAxis]\n     * @returns {d3.axisRight|dc.compositeChart}\n     */\n    _chart.rightYAxis = function (rightYAxis) {\n        if (!arguments.length) {\n            return _rightYAxis;\n        }\n        _rightYAxis = rightYAxis;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A series chart is a chart that shows multiple series of data overlaid on one chart, where the\n * series is specified in the data. It is a specialization of Composite Chart and inherits all\n * composite features other than recomposing the chart.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/series.html Series Chart}\n * @class seriesChart\n * @memberof dc\n * @mixes dc.compositeChart\n * @example\n * // create a series chart under #chart-container1 element using the default global chart group\n * var seriesChart1 = dc.seriesChart(\"#chart-container1\");\n * // create a series chart under #chart-container2 element using chart group A\n * var seriesChart2 = dc.seriesChart(\"#chart-container2\", \"chartGroupA\");\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.seriesChart}\n */\ndc.seriesChart = function (parent, chartGroup) {\n    var _chart = dc.compositeChart(parent, chartGroup);\n\n    function keySort (a, b) {\n        return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n    }\n\n    var _charts = {};\n    var _chartFunction = dc.lineChart;\n    var _seriesAccessor;\n    var _seriesSort = d3.ascending;\n    var _valueSort = keySort;\n\n    _chart._mandatoryAttributes().push('seriesAccessor', 'chart');\n    _chart.shareColors(true);\n\n    _chart._preprocessData = function () {\n        var keep = [];\n        var childrenChanged;\n        var nester = d3.nest().key(_seriesAccessor);\n        if (_seriesSort) {\n            nester.sortKeys(_seriesSort);\n        }\n        if (_valueSort) {\n            nester.sortValues(_valueSort);\n        }\n        var nesting = nester.entries(_chart.data());\n        var children =\n            nesting.map(function (sub, i) {\n                var subChart = _charts[sub.key] || _chartFunction.call(_chart, _chart, chartGroup, sub.key, i);\n                if (!_charts[sub.key]) {\n                    childrenChanged = true;\n                }\n                _charts[sub.key] = subChart;\n                keep.push(sub.key);\n                return subChart\n                    .dimension(_chart.dimension())\n                    .group({\n                        all: typeof sub.values === 'function' ? sub.values : dc.utils.constant(sub.values)\n                    }, sub.key)\n                    .keyAccessor(_chart.keyAccessor())\n                    .valueAccessor(_chart.valueAccessor())\n                    .brushOn(false);\n            });\n        // this works around the fact compositeChart doesn't really\n        // have a removal interface\n        Object.keys(_charts)\n            .filter(function (c) {return keep.indexOf(c) === -1;})\n            .forEach(function (c) {\n                clearChart(c);\n                childrenChanged = true;\n            });\n        _chart._compose(children);\n        if (childrenChanged && _chart.legend()) {\n            _chart.legend().render();\n        }\n    };\n\n    function clearChart (c) {\n        if (_charts[c].g()) {\n            _charts[c].g().remove();\n        }\n        delete _charts[c];\n    }\n\n    function resetChildren () {\n        Object.keys(_charts).map(clearChart);\n        _charts = {};\n    }\n\n    /**\n     * Get or set the chart function, which generates the child charts.\n     * @method chart\n     * @memberof dc.seriesChart\n     * @instance\n     * @example\n     * // put curve on the line charts used for the series\n     * chart.chart(function(c) { return dc.lineChart(c).curve(d3.curveBasis); })\n     * // do a scatter series chart\n     * chart.chart(dc.scatterPlot)\n     * @param {Function} [chartFunction=dc.lineChart]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.chart = function (chartFunction) {\n        if (!arguments.length) {\n            return _chartFunction;\n        }\n        _chartFunction = chartFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Get or set accessor function for the displayed series. Given a datum, this function\n     * should return the series that datum belongs to.\n     * @method seriesAccessor\n     * @memberof dc.seriesChart\n     * @instance\n     * @example\n     * // simple series accessor\n     * chart.seriesAccessor(function(d) { return \"Expt: \" + d.key[0]; })\n     * @param {Function} [accessor]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.seriesAccessor = function (accessor) {\n        if (!arguments.length) {\n            return _seriesAccessor;\n        }\n        _seriesAccessor = accessor;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * Get or set a function to sort the list of series by, given series values.\n     * @method seriesSort\n     * @memberof dc.seriesChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.seriesSort(d3.descending);\n     * @param {Function} [sortFunction=d3.ascending]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.seriesSort = function (sortFunction) {\n        if (!arguments.length) {\n            return _seriesSort;\n        }\n        _seriesSort = sortFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * Get or set a function to sort each series values by. By default this is the key accessor which,\n     * for example, will ensure a lineChart series connects its points in increasing key/x order,\n     * rather than haphazardly.\n     * @method valueSort\n     * @memberof dc.seriesChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * // Default value sort\n     * _chart.valueSort(function keySort (a, b) {\n     *     return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n     * });\n     * @param {Function} [sortFunction]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.valueSort = function (sortFunction) {\n        if (!arguments.length) {\n            return _valueSort;\n        }\n        _valueSort = sortFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    // make compose private\n    _chart._compose = _chart.compose;\n    delete _chart.compose;\n\n    return _chart;\n};\n\n/**\n * The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map\n * from GeoJson data. This chart implementation was inspired by\n * {@link http://bl.ocks.org/4060606 the great d3 choropleth example}.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\n * @class geoChoroplethChart\n * @memberof dc\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a choropleth chart under '#us-chart' element using the default global chart group\n * var chart1 = dc.geoChoroplethChart('#us-chart');\n * // create a choropleth chart under '#us-chart2' element using chart group A\n * var chart2 = dc.compositeChart('#us-chart2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.geoChoroplethChart}\n */\ndc.geoChoroplethChart = function (parent, chartGroup) {\n    var _chart = dc.colorMixin(dc.baseMixin({}));\n\n    _chart.colorAccessor(function (d) {\n        return d || 0;\n    });\n\n    var _geoPath = d3.geoPath();\n    var _projectionFlag;\n    var _projection;\n\n    var _geoJsons = [];\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            var states = _chart.svg().append('g')\n                .attr('class', 'layer' + layerIndex);\n\n            var regionG = states.selectAll('g.' + geoJson(layerIndex).name)\n                .data(geoJson(layerIndex).data);\n\n            regionG = regionG.enter()\n                    .append('g')\n                    .attr('class', geoJson(layerIndex).name)\n                .merge(regionG);\n\n            regionG\n                .append('path')\n                .attr('fill', 'white')\n                .attr('d', _getGeoPath());\n\n            regionG.append('title');\n\n            plotData(layerIndex);\n        }\n        _projectionFlag = false;\n    };\n\n    function plotData (layerIndex) {\n        var data = generateLayeredData();\n\n        if (isDataLayer(layerIndex)) {\n            var regionG = renderRegionG(layerIndex);\n\n            renderPaths(regionG, layerIndex, data);\n\n            renderTitle(regionG, layerIndex, data);\n        }\n    }\n\n    function generateLayeredData () {\n        var data = {};\n        var groupAll = _chart.data();\n        for (var i = 0; i < groupAll.length; ++i) {\n            data[_chart.keyAccessor()(groupAll[i])] = _chart.valueAccessor()(groupAll[i]);\n        }\n        return data;\n    }\n\n    function isDataLayer (layerIndex) {\n        return geoJson(layerIndex).keyAccessor;\n    }\n\n    function renderRegionG (layerIndex) {\n        var regionG = _chart.svg()\n            .selectAll(layerSelector(layerIndex))\n            .classed('selected', function (d) {\n                return isSelected(layerIndex, d);\n            })\n            .classed('deselected', function (d) {\n                return isDeselected(layerIndex, d);\n            })\n            .attr('class', function (d) {\n                var layerNameClass = geoJson(layerIndex).name;\n                var regionClass = dc.utils.nameToId(geoJson(layerIndex).keyAccessor(d));\n                var baseClasses = layerNameClass + ' ' + regionClass;\n                if (isSelected(layerIndex, d)) {\n                    baseClasses += ' selected';\n                }\n                if (isDeselected(layerIndex, d)) {\n                    baseClasses += ' deselected';\n                }\n                return baseClasses;\n            });\n        return regionG;\n    }\n\n    function layerSelector (layerIndex) {\n        return 'g.layer' + layerIndex + ' g.' + geoJson(layerIndex).name;\n    }\n\n    function isSelected (layerIndex, d) {\n        return _chart.hasFilter() && _chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function isDeselected (layerIndex, d) {\n        return _chart.hasFilter() && !_chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function getKey (layerIndex, d) {\n        return geoJson(layerIndex).keyAccessor(d);\n    }\n\n    function geoJson (index) {\n        return _geoJsons[index];\n    }\n\n    function renderPaths (regionG, layerIndex, data) {\n        var paths = regionG\n            .select('path')\n            .attr('fill', function () {\n                var currentFill = d3.select(this).attr('fill');\n                if (currentFill) {\n                    return currentFill;\n                }\n                return 'none';\n            })\n            .on('click', function (d) {\n                return _chart.onClick(d, layerIndex);\n            });\n\n        dc.transition(paths, _chart.transitionDuration(), _chart.transitionDelay()).attr('fill', function (d, i) {\n            return _chart.getColor(data[geoJson(layerIndex).keyAccessor(d)], i);\n        });\n    }\n\n    _chart.onClick = function (d, layerIndex) {\n        var selectedRegion = geoJson(layerIndex).keyAccessor(d);\n        dc.events.trigger(function () {\n            _chart.filter(selectedRegion);\n            _chart.redrawGroup();\n        });\n    };\n\n    function renderTitle (regionG, layerIndex, data) {\n        if (_chart.renderTitle()) {\n            regionG.selectAll('title').text(function (d) {\n                var key = getKey(layerIndex, d);\n                var value = data[key];\n                return _chart.title()({key: key, value: value});\n            });\n        }\n    }\n\n    _chart._doRedraw = function () {\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            plotData(layerIndex);\n            if (_projectionFlag) {\n                _chart.svg().selectAll('g.' + geoJson(layerIndex).name + ' path').attr('d', _getGeoPath());\n            }\n        }\n        _projectionFlag = false;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Use this function to insert a new GeoJson map layer. This function can be invoked multiple times\n     * if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple\n     * layers with the same name the new overlay will override the existing one.\n     * @method overlayGeoJson\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link http://geojson.org/ GeoJSON}\n     * @see {@link https://github.com/topojson/topojson/wiki TopoJSON}\n     * @see {@link https://github.com/topojson/topojson-1.x-api-reference/blob/master/API-Reference.md#wiki-feature topojson.feature}\n     * @example\n     * // insert a layer for rendering US states\n     * chart.overlayGeoJson(statesJson.features, 'state', function(d) {\n     *      return d.properties.name;\n     * });\n     * @param {geoJson} json - a geojson feed\n     * @param {String} name - name of the layer\n     * @param {Function} keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by\n     * this function should match the keys returned by the crossfilter groups.\n     * @returns {dc.geoChoroplethChart}\n     */\n    _chart.overlayGeoJson = function (json, name, keyAccessor) {\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            if (_geoJsons[i].name === name) {\n                _geoJsons[i].data = json;\n                _geoJsons[i].keyAccessor = keyAccessor;\n                return _chart;\n            }\n        }\n        _geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});\n        return _chart;\n    };\n\n    /**\n     * Gets or sets a custom geo projection function. See the available\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3 geo projection functions}.\n     *\n     * Starting version 3.0 it has been deprecated to rely on the default projection being\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#geoAlbersUsa d3.geoAlbersUsa()}. Please\n     * set it explicitly. {@link https://bl.ocks.org/mbostock/5557726\n     * Considering that `null` is also a valid value for projection}, if you need\n     * projection to be `null` please set it explicitly to `null`.\n     * @method projection\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3.projection}\n     * @see {@link https://github.com/d3/d3-geo-projection d3-geo-projection}\n     * @param {d3.projection} [projection=d3.geoAlbersUsa()]\n     * @returns {d3.projection|dc.geoChoroplethChart}\n     */\n    _chart.projection = function (projection) {\n        if (!arguments.length) {\n            return _projection;\n        }\n\n        _projection = projection;\n        _projectionFlag = true;\n        return _chart;\n    };\n\n    var _getGeoPath = function () {\n        if (_projection === undefined) {\n            dc.logger.warn('choropleth projection default of geoAlbers is deprecated,' +\n                ' in next version projection will need to be set explicitly');\n            return _geoPath.projection(d3.geoAlbersUsa());\n        }\n\n        return _geoPath.projection(_projection);\n    };\n\n    /**\n     * Returns all GeoJson layers currently registered with this chart. The returned array is a\n     * reference to this chart's internal data structure, so any modification to this array will also\n     * modify this chart's internal registration.\n     * @method geoJsons\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @returns {Array<{name:String, data: Object, accessor: Function}>}\n     */\n    _chart.geoJsons = function () {\n        return _geoJsons;\n    };\n\n    /**\n     * Returns the {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath} object used to\n     * render the projection and features.  Can be useful for figuring out the bounding box of the\n     * feature set and thus a way to calculate scale and translation for the projection.\n     * @method geoPath\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath}\n     * @returns {d3.geoPath}\n     */\n    _chart.geoPath = function () {\n        return _geoPath;\n    };\n\n    /**\n     * Remove a GeoJson layer from this chart by name\n     * @method removeGeoJson\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @param {String} name\n     * @returns {dc.geoChoroplethChart}\n     */\n    _chart.removeGeoJson = function (name) {\n        var geoJsons = [];\n\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            var layer = _geoJsons[i];\n            if (layer.name !== name) {\n                geoJsons.push(layer);\n            }\n        }\n\n        _geoJsons = geoJsons;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay\n * chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the\n * typical x and y positioning while retaining the capability to visualize data using bubble radius\n * and coloring.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class bubbleOverlay\n * @memberof dc\n * @mixes dc.bubbleMixin\n * @mixes dc.baseMixin\n * @example\n * // create a bubble overlay chart on top of the '#chart-container1 svg' element using the default global chart group\n * var bubbleChart1 = dc.bubbleOverlayChart('#chart-container1').svg(d3.select('#chart-container1 svg'));\n * // create a bubble overlay chart on top of the '#chart-container2 svg' element using chart group A\n * var bubbleChart2 = dc.compositeChart('#chart-container2', 'chartGroupA').svg(d3.select('#chart-container2 svg'));\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.bubbleOverlay}\n */\ndc.bubbleOverlay = function (parent, chartGroup) {\n    var BUBBLE_OVERLAY_CLASS = 'bubble-overlay';\n    var BUBBLE_NODE_CLASS = 'node';\n    var BUBBLE_CLASS = 'bubble';\n\n    /**\n     * **mandatory**\n     *\n     * Set the underlying svg image element. Unlike other dc charts this chart will not generate a svg\n     * element; therefore the bubble overlay chart will not work if this function is not invoked. If the\n     * underlying image is a bitmap, then an empty svg will need to be created on top of the image.\n     * @method svg\n     * @memberof dc.bubbleOverlay\n     * @instance\n     * @example\n     * // set up underlying svg element\n     * chart.svg(d3.select('#chart svg'));\n     * @param {SVGElement|d3.selection} [imageElement]\n     * @returns {dc.bubbleOverlay}\n     */\n    var _chart = dc.bubbleMixin(dc.baseMixin({}));\n    var _g;\n    var _points = [];\n\n    _chart.transitionDuration(750);\n\n    _chart.transitionDelay(0);\n\n    _chart.radiusValueAccessor(function (d) {\n        return d.value;\n    });\n\n    /**\n     * **mandatory**\n     *\n     * Set up a data point on the overlay. The name of a data point should match a specific 'key' among\n     * data groups generated using keyAccessor.  If a match is found (point name <-> data group key)\n     * then a bubble will be generated at the position specified by the function. x and y\n     * value specified here are relative to the underlying svg.\n     * @method point\n     * @memberof dc.bubbleOverlay\n     * @instance\n     * @param {String} name\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {dc.bubbleOverlay}\n     */\n    _chart.point = function (name, x, y) {\n        _points.push({name: name, x: x, y: y});\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        _g = initOverlayG();\n\n        _chart.r().range([_chart.MIN_RADIUS, _chart.width() * _chart.maxBubbleRelativeSize()]);\n\n        initializeBubbles();\n\n        _chart.fadeDeselectedArea(_chart.filter());\n\n        return _chart;\n    };\n\n    function initOverlayG () {\n        _g = _chart.select('g.' + BUBBLE_OVERLAY_CLASS);\n        if (_g.empty()) {\n            _g = _chart.svg().append('g').attr('class', BUBBLE_OVERLAY_CLASS);\n        }\n        return _g;\n    }\n\n    function initializeBubbles () {\n        var data = mapData();\n        _chart.calculateRadiusDomain();\n\n        _points.forEach(function (point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\n\n            if (circle.empty()) {\n                circle = nodeG.append('circle')\n                    .attr('class', BUBBLE_CLASS)\n                    .attr('r', 0)\n                    .attr('fill', _chart.getColor)\n                    .on('click', _chart.onClick);\n            }\n\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('r', function (d) {\n                    return _chart.bubbleR(d);\n                });\n\n            _chart._doRenderLabel(nodeG);\n\n            _chart._doRenderTitles(nodeG);\n        });\n    }\n\n    function mapData () {\n        var data = {};\n        _chart.data().forEach(function (datum) {\n            data[_chart.keyAccessor()(datum)] = datum;\n        });\n        return data;\n    }\n\n    function getNodeG (point, data) {\n        var bubbleNodeClass = BUBBLE_NODE_CLASS + ' ' + dc.utils.nameToId(point.name);\n\n        var nodeG = _g.select('g.' + dc.utils.nameToId(point.name));\n\n        if (nodeG.empty()) {\n            nodeG = _g.append('g')\n                .attr('class', bubbleNodeClass)\n                .attr('transform', 'translate(' + point.x + ',' + point.y + ')');\n        }\n\n        nodeG.datum(data[point.name]);\n\n        return nodeG;\n    }\n\n    _chart._doRedraw = function () {\n        updateBubbles();\n\n        _chart.fadeDeselectedArea(_chart.filter());\n\n        return _chart;\n    };\n\n    function updateBubbles () {\n        var data = mapData();\n        _chart.calculateRadiusDomain();\n\n        _points.forEach(function (point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\n\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('r', function (d) {\n                    return _chart.bubbleR(d);\n                })\n                .attr('fill', _chart.getColor);\n\n            _chart.doUpdateLabels(nodeG);\n\n            _chart.doUpdateTitles(nodeG);\n        });\n    }\n\n    _chart.debug = function (flag) {\n        if (flag) {\n            var debugG = _chart.select('g.' + dc.constants.DEBUG_GROUP_CLASS);\n\n            if (debugG.empty()) {\n                debugG = _chart.svg()\n                    .append('g')\n                    .attr('class', dc.constants.DEBUG_GROUP_CLASS);\n            }\n\n            var debugText = debugG.append('text')\n                .attr('x', 10)\n                .attr('y', 20);\n\n            debugG\n                .append('rect')\n                .attr('width', _chart.width())\n                .attr('height', _chart.height())\n                .on('mousemove', function () {\n                    var position = d3.mouse(debugG.node());\n                    var msg = position[0] + ', ' + position[1];\n                    debugText.text(msg);\n                });\n        } else {\n            _chart.selectAll('.debug').remove();\n        }\n\n        return _chart;\n    };\n\n    _chart.anchor(parent, chartGroup);\n\n    return _chart;\n};\n\n/**\n * Concrete row chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class rowChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.marginMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a row chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.rowChart('#chart-container1');\n * // create a row chart under #chart-container2 element using chart group A\n * var chart2 = dc.rowChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.rowChart}\n */\ndc.rowChart = function (parent, chartGroup) {\n\n    var _g;\n\n    var _labelOffsetX = 10;\n    var _labelOffsetY = 15;\n    var _hasLabelOffsetY = false;\n    var _dyOffset = '0.35em';  // this helps center labels https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#svg_text\n    var _titleLabelOffsetX = 2;\n\n    var _gap = 5;\n\n    var _fixedBarHeight = false;\n    var _rowCssClass = 'row';\n    var _titleRowCssClass = 'titlerow';\n    var _renderTitleLabel = false;\n\n    var _chart = dc.capMixin(dc.marginMixin(dc.colorMixin(dc.baseMixin({}))));\n\n    var _x;\n\n    var _elasticX;\n\n    var _xAxis = d3.axisBottom();\n\n    var _rowData;\n\n    _chart.rowsCap = _chart.cap;\n\n    function calculateAxisScale () {\n        if (!_x || _elasticX) {\n            var extent = d3.extent(_rowData, _chart.cappedValueAccessor);\n            if (extent[0] > 0) {\n                extent[0] = 0;\n            }\n            if (extent[1] < 0) {\n                extent[1] = 0;\n            }\n            _x = d3.scaleLinear().domain(extent)\n                .range([0, _chart.effectiveWidth()]);\n        }\n        _xAxis.scale(_x);\n    }\n\n    function drawAxis () {\n        var axisG = _g.select('g.axis');\n\n        calculateAxisScale();\n\n        if (axisG.empty()) {\n            axisG = _g.append('g').attr('class', 'axis');\n        }\n        axisG.attr('transform', 'translate(0, ' + _chart.effectiveHeight() + ')');\n\n        dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\n            .call(_xAxis);\n    }\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n        drawChart();\n\n        return _chart;\n    };\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    _chart.label(_chart.cappedKeyAccessor);\n\n    /**\n     * Gets or sets the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}.\n     * @method x\n     * @memberof dc.rowChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [scale]\n     * @returns {d3.scale|dc.rowChart}\n     */\n    _chart.x = function (scale) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = scale;\n        return _chart;\n    };\n\n    function drawGridLines () {\n        _g.selectAll('g.tick')\n            .select('line.grid-line')\n            .remove();\n\n        _g.selectAll('g.tick')\n            .append('line')\n            .attr('class', 'grid-line')\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', 0)\n            .attr('y2', function () {\n                return -_chart.effectiveHeight();\n            });\n    }\n\n    function drawChart () {\n        _rowData = _chart.data();\n\n        drawAxis();\n        drawGridLines();\n\n        var rows = _g.selectAll('g.' + _rowCssClass)\n            .data(_rowData);\n\n        removeElements(rows);\n        rows = createElements(rows)\n            .merge(rows);\n        updateElements(rows);\n    }\n\n    function createElements (rows) {\n        var rowEnter = rows.enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _rowCssClass + ' _' + i;\n            });\n\n        rowEnter.append('rect').attr('width', 0);\n\n        createLabels(rowEnter);\n\n        return rowEnter;\n    }\n\n    function removeElements (rows) {\n        rows.exit().remove();\n    }\n\n    function rootValue () {\n        var root = _x(0);\n        return (root === -Infinity || root !== root) ? _x(1) : root;\n    }\n\n    function updateElements (rows) {\n        var n = _rowData.length;\n\n        var height;\n        if (!_fixedBarHeight) {\n            height = (_chart.effectiveHeight() - (n + 1) * _gap) / n;\n        } else {\n            height = _fixedBarHeight;\n        }\n\n        // vertically align label in center unless they override the value via property setter\n        if (!_hasLabelOffsetY) {\n            _labelOffsetY = height / 2;\n        }\n\n        var rect = rows.attr('transform', function (d, i) {\n                return 'translate(0,' + ((i + 1) * _gap + i * height) + ')';\n            }).select('rect')\n            .attr('height', height)\n            .attr('fill', _chart.getColor)\n            .on('click', onClick)\n            .classed('deselected', function (d) {\n                return (_chart.hasFilter()) ? !isSelectedRow(d) : false;\n            })\n            .classed('selected', function (d) {\n                return (_chart.hasFilter()) ? isSelectedRow(d) : false;\n            });\n\n        dc.transition(rect, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('width', function (d) {\n                return Math.abs(rootValue() - _x(_chart.cappedValueAccessor(d)));\n            })\n            .attr('transform', translateX);\n\n        createTitles(rows);\n        updateLabels(rows);\n    }\n\n    function createTitles (rows) {\n        if (_chart.renderTitle()) {\n            rows.select('title').remove();\n            rows.append('title').text(_chart.title());\n        }\n    }\n\n    function createLabels (rowEnter) {\n        if (_chart.renderLabel()) {\n            rowEnter.append('text')\n                .on('click', onClick);\n        }\n        if (_chart.renderTitleLabel()) {\n            rowEnter.append('text')\n                .attr('class', _titleRowCssClass)\n                .on('click', onClick);\n        }\n    }\n\n    function updateLabels (rows) {\n        if (_chart.renderLabel()) {\n            var lab = rows.select('text')\n                .attr('x', _labelOffsetX)\n                .attr('y', _labelOffsetY)\n                .attr('dy', _dyOffset)\n                .on('click', onClick)\n                .attr('class', function (d, i) {\n                    return _rowCssClass + ' _' + i;\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n            dc.transition(lab, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', translateX);\n        }\n        if (_chart.renderTitleLabel()) {\n            var titlelab = rows.select('.' + _titleRowCssClass)\n                    .attr('x', _chart.effectiveWidth() - _titleLabelOffsetX)\n                    .attr('y', _labelOffsetY)\n                    .attr('dy', _dyOffset)\n                    .attr('text-anchor', 'end')\n                    .on('click', onClick)\n                    .attr('class', function (d, i) {\n                        return _titleRowCssClass + ' _' + i ;\n                    })\n                    .text(function (d) {\n                        return _chart.title()(d);\n                    });\n            dc.transition(titlelab, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', translateX);\n        }\n    }\n\n    /**\n     * Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'.\n     * @method renderTitleLabel\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Boolean} [renderTitleLabel=false]\n     * @returns {Boolean|dc.rowChart}\n     */\n    _chart.renderTitleLabel = function (renderTitleLabel) {\n        if (!arguments.length) {\n            return _renderTitleLabel;\n        }\n        _renderTitleLabel = renderTitleLabel;\n        return _chart;\n    };\n\n    function onClick (d) {\n        _chart.onClick(d);\n    }\n\n    function translateX (d) {\n        var x = _x(_chart.cappedValueAccessor(d)),\n            x0 = rootValue(),\n            s = x > x0 ? x0 : x;\n        return 'translate(' + s + ',0)';\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n     * Get or sets the x axis for the row chart instance.\n     * See the {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\n     * documention for more information.\n     * @method xAxis\n     * @memberof dc.rowChart\n     * @instance\n     * @example\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function (v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * // use a top-oriented axis. Note: position of the axis and grid lines will need to\n     * // be set manually, see https://dc-js.github.io/dc.js/examples/row-top-axis.html\n     * chart.xAxis(d3.axisTop())\n     * @returns {d3.axis}\n     */\n    _chart.xAxis = function (xAxis) {\n        if (!arguments.length) {\n            return _xAxis;\n        }\n        _xAxis = xAxis;\n        return this;\n    };\n\n    /**\n     * Get or set the fixed bar height. Default is [false] which will auto-scale bars.\n     * For example, if you want to fix the height for a specific number of bars (useful in TopN charts)\n     * you could fix height as follows (where count = total number of bars in your TopN and gap is\n     * your vertical gap space).\n     * @method fixedBarHeight\n     * @memberof dc.rowChart\n     * @instance\n     * @example\n     * chart.fixedBarHeight( chartheight - (count + 1) * gap / count);\n     * @param {Boolean|Number} [fixedBarHeight=false]\n     * @returns {Boolean|Number|dc.rowChart}\n     */\n    _chart.fixedBarHeight = function (fixedBarHeight) {\n        if (!arguments.length) {\n            return _fixedBarHeight;\n        }\n        _fixedBarHeight = fixedBarHeight;\n        return _chart;\n    };\n\n    /**\n     * Get or set the vertical gap space between rows on a particular row chart instance.\n     * @method gap\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [gap=5]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _chart;\n    };\n\n    /**\n     * Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescale to auto-fit the\n     * data range when filtered.\n     * @method elasticX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Boolean} [elasticX]\n     * @returns {Boolean|dc.rowChart}\n     */\n    _chart.elasticX = function (elasticX) {\n        if (!arguments.length) {\n            return _elasticX;\n        }\n        _elasticX = elasticX;\n        return _chart;\n    };\n\n    /**\n     * Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart.\n     * @method labelOffsetX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [labelOffsetX=10]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.labelOffsetX = function (labelOffsetX) {\n        if (!arguments.length) {\n            return _labelOffsetX;\n        }\n        _labelOffsetX = labelOffsetX;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart.\n     * @method labelOffsetY\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [labelOffsety=15]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.labelOffsetY = function (labelOffsety) {\n        if (!arguments.length) {\n            return _labelOffsetY;\n        }\n        _labelOffsetY = labelOffsety;\n        _hasLabelOffsetY = true;\n        return _chart;\n    };\n\n    /**\n     * Get of set the x offset (horizontal space between right edge of row and right edge or text.\n     * @method titleLabelOffsetX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [titleLabelOffsetX=2]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.titleLabelOffsetX = function (titleLabelOffsetX) {\n        if (!arguments.length) {\n            return _titleLabelOffsetX;\n        }\n        _titleLabelOffsetX = titleLabelOffsetX;\n        return _chart;\n    };\n\n    function isSelectedRow (d) {\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d));\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Legend is a attachable widget that can be added to other dc charts to render horizontal legend\n * labels.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class legend\n * @memberof dc\n * @example\n * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n * @returns {dc.legend}\n */\ndc.legend = function () {\n    var LABEL_GAP = 2;\n\n    var _legend = {},\n        _parent,\n        _x = 0,\n        _y = 0,\n        _itemHeight = 12,\n        _gap = 5,\n        _horizontal = false,\n        _legendWidth = 560,\n        _itemWidth = 70,\n        _autoItemWidth = false,\n        _legendText = dc.pluck('name'),\n        _maxItems;\n\n    var _g;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) {\n            return _parent;\n        }\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        _parent.svg().select('g.dc-legend').remove();\n        _g = _parent.svg().append('g')\n            .attr('class', 'dc-legend')\n            .attr('transform', 'translate(' + _x + ',' + _y + ')');\n        var legendables = _parent.legendables();\n\n        if (_maxItems !== undefined) {\n            legendables = legendables.slice(0, _maxItems);\n        }\n\n        var itemEnter = _g.selectAll('g.dc-legend-item')\n            .data(legendables)\n            .enter()\n            .append('g')\n            .attr('class', 'dc-legend-item')\n            .on('mouseover', function (d) {\n                _parent.legendHighlight(d);\n            })\n            .on('mouseout', function (d) {\n                _parent.legendReset(d);\n            })\n            .on('click', function (d) {\n                d.chart.legendToggle(d);\n            });\n\n        _g.selectAll('g.dc-legend-item')\n            .classed('fadeout', function (d) {\n                return d.chart.isLegendableHidden(d);\n            });\n\n        if (legendables.some(dc.pluck('dashstyle'))) {\n            itemEnter\n                .append('line')\n                .attr('x1', 0)\n                .attr('y1', _itemHeight / 2)\n                .attr('x2', _itemHeight)\n                .attr('y2', _itemHeight / 2)\n                .attr('stroke-width', 2)\n                .attr('stroke-dasharray', dc.pluck('dashstyle'))\n                .attr('stroke', dc.pluck('color'));\n        } else {\n            itemEnter\n                .append('rect')\n                .attr('width', _itemHeight)\n                .attr('height', _itemHeight)\n                .attr('fill', function (d) {return d ? d.color : 'blue';});\n        }\n\n        itemEnter.append('text')\n                .text(_legendText)\n                .attr('x', _itemHeight + LABEL_GAP)\n                .attr('y', function () {\n                    return _itemHeight / 2 + (this.clientHeight ? this.clientHeight : 13) / 2 - 2;\n                });\n\n        var _cumulativeLegendTextWidth = 0;\n        var row = 0;\n        itemEnter.attr('transform', function (d, i) {\n            if (_horizontal) {\n                var itemWidth   = _autoItemWidth === true ? this.getBBox().width + _gap : _itemWidth;\n                if ((_cumulativeLegendTextWidth + itemWidth) > _legendWidth && _cumulativeLegendTextWidth > 0) {\n                    ++row;\n                    _cumulativeLegendTextWidth = 0;\n                }\n                var translateBy = 'translate(' + _cumulativeLegendTextWidth + ',' + row * legendItemHeight() + ')';\n                _cumulativeLegendTextWidth += itemWidth;\n                return translateBy;\n            } else {\n                return 'translate(0,' + i * legendItemHeight() + ')';\n            }\n        });\n    };\n\n    function legendItemHeight () {\n        return _gap + _itemHeight;\n    }\n\n    /**\n     * Set or get x coordinate for legend widget.\n     * @method x\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [x=0]\n     * @returns {Number|dc.legend}\n     */\n    _legend.x = function (x) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = x;\n        return _legend;\n    };\n\n    /**\n     * Set or get y coordinate for legend widget.\n     * @method y\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [y=0]\n     * @returns {Number|dc.legend}\n     */\n    _legend.y = function (y) {\n        if (!arguments.length) {\n            return _y;\n        }\n        _y = y;\n        return _legend;\n    };\n\n    /**\n     * Set or get gap between legend items.\n     * @method gap\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [gap=5]\n     * @returns {Number|dc.legend}\n     */\n    _legend.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _legend;\n    };\n\n    /**\n     * Set or get legend item height.\n     * @method itemHeight\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [itemHeight=12]\n     * @returns {Number|dc.legend}\n     */\n    _legend.itemHeight = function (itemHeight) {\n        if (!arguments.length) {\n            return _itemHeight;\n        }\n        _itemHeight = itemHeight;\n        return _legend;\n    };\n\n    /**\n     * Position legend horizontally instead of vertically.\n     * @method horizontal\n     * @memberof dc.legend\n     * @instance\n     * @param  {Boolean} [horizontal=false]\n     * @returns {Boolean|dc.legend}\n     */\n    _legend.horizontal = function (horizontal) {\n        if (!arguments.length) {\n            return _horizontal;\n        }\n        _horizontal = horizontal;\n        return _legend;\n    };\n\n    /**\n     * Maximum width for horizontal legend.\n     * @method legendWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [legendWidth=500]\n     * @returns {Number|dc.legend}\n     */\n    _legend.legendWidth = function (legendWidth) {\n        if (!arguments.length) {\n            return _legendWidth;\n        }\n        _legendWidth = legendWidth;\n        return _legend;\n    };\n\n    /**\n     * Legend item width for horizontal legend.\n     * @method itemWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [itemWidth=70]\n     * @returns {Number|dc.legend}\n     */\n    _legend.itemWidth = function (itemWidth) {\n        if (!arguments.length) {\n            return _itemWidth;\n        }\n        _itemWidth = itemWidth;\n        return _legend;\n    };\n\n    /**\n     * Turn automatic width for legend items on or off. If true, {@link dc.legend#itemWidth itemWidth} is ignored.\n     * This setting takes into account the {@link dc.legend#gap gap}.\n     * @method autoItemWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Boolean} [autoItemWidth=false]\n     * @returns {Boolean|dc.legend}\n     */\n    _legend.autoItemWidth = function (autoItemWidth) {\n        if (!arguments.length) {\n            return _autoItemWidth;\n        }\n        _autoItemWidth = autoItemWidth;\n        return _legend;\n    };\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     * @method legendText\n     * @memberof dc.legend\n     * @instance\n     * @param  {Function} [legendText]\n     * @returns {Function|dc.legend}\n     * @example\n     * // default legendText\n     * legend.legendText(dc.pluck('name'))\n     *\n     * // create numbered legend items\n     * chart.legend(dc.legend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(dc.legend().legendText(function(d) { return d.name + ': ' d.data; }))\n     **/\n    _legend.legendText = function (legendText) {\n        if (!arguments.length) {\n            return _legendText;\n        }\n        _legendText = legendText;\n        return _legend;\n    };\n\n    /**\n     * Maximum number of legend items to display\n     * @method maxItems\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [maxItems]\n     * @return {dc.legend}\n     */\n    _legend.maxItems = function (maxItems) {\n        if (!arguments.length) {\n            return _maxItems;\n        }\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\n        return _legend;\n    };\n\n    return _legend;\n};\n\n/**\n * htmlLegend is a attachable widget that can be added to other dc charts to render horizontal/vertical legend\n * labels.\n *\n * @class htmlLegend\n * @memberof dc\n * @example\n * chart.legend(dc.htmlLegend().container(legendContainerElement).horizontal(false))\n * @returns {dc.htmlLegend}\n */\ndc.htmlLegend = function () {\n    var _legend = {},\n        _htmlLegendDivCssClass = 'dc-html-legend',\n        _legendItemCssClassHorizontal = 'dc-legend-item-horizontal',\n        _legendItemCssClassVertical = 'dc-legend-item-vertical',\n        _parent,\n        _container,\n        _legendText = dc.pluck('name'),\n        _maxItems,\n        _horizontal = false,\n        _legendItemClass,\n        _highlightSelected = false;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) {\n            return _parent;\n        }\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        var _defaultLegendItemCssClass = _horizontal ?  _legendItemCssClassHorizontal : _legendItemCssClassVertical;\n        _container.select('div.dc-html-legend').remove();\n\n        var _l = _container.append('div').attr('class', _htmlLegendDivCssClass);\n        _l.attr('style', 'max-width:' + _container.nodes()[0].style.width);\n\n        var legendables = _parent.legendables();\n        var filters = _parent.filters();\n\n        if (_maxItems !== undefined) {\n            legendables = legendables.slice(0, _maxItems);\n        }\n\n        var legendItemClassName = _legendItemClass ? _legendItemClass : _defaultLegendItemCssClass;\n\n        var itemEnter = _l.selectAll('div.' + legendItemClassName)\n            .data(legendables).enter()\n            .append('div')\n            .classed(legendItemClassName, true)\n            .on('mouseover', _parent.legendHighlight)\n            .on('mouseout', _parent.legendReset)\n            .on('click', _parent.legendToggle);\n\n        if (_highlightSelected) {\n            itemEnter.classed(dc.constants.SELECTED_CLASS, function (d) {\n                return filters.indexOf(d.name) !== -1;\n            });\n        }\n\n        itemEnter.append('span')\n            .attr('class', 'dc-legend-item-color')\n            .style('background-color', dc.pluck('color'));\n\n        itemEnter.append('span')\n            .attr('class', 'dc-legend-item-label')\n            .attr('title', _legendText)\n            .text(_legendText);\n    };\n\n    /**\n     #### .container([selector])\n     Set the container selector for the legend widget. Required.\n     **/\n    _legend.container = function (c) {\n        if (!arguments.length) {\n            return _container;\n        }\n        _container = d3.select(c);\n        return _legend;\n    };\n\n    /**\n     #### .legendItemClass([selector])\n     This can be optionally used to override class for legenditem and just use this class style.\n     The reason to have this is so this can be done for a particular chart rather than overriding the style for all charts\n     Setting this will disable the highlighting of selected items also.\n     **/\n    _legend.legendItemClass = function (c) {\n        if (!arguments.length) {\n            return _legendItemClass;\n        }\n        _legendItemClass = c;\n        return _legend;\n    };\n\n    /**\n     #### .highlightSelected([boolean])\n     This can be optionally used to enable highlighting legends for the selections/filters for the chart.\n     **/\n    _legend.highlightSelected = function (c) {\n        if (!arguments.length) {\n            return _highlightSelected;\n        }\n        _highlightSelected = c;\n        return _legend;\n    };\n\n    /**\n     #### .horizontal([boolean])\n     Display the legend horizontally instead of vertically\n     **/\n    _legend.horizontal = function (b) {\n        if (!arguments.length) {\n            return _horizontal;\n        }\n        _horizontal = b;\n        return _legend;\n    };\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     * @method legendText\n     * @memberof dc.htmlLegend\n     * @instance\n     * @param  {Function} [legendText]\n     * @returns {Function|dc.htmlLegend}\n     * @example\n     * // default legendText\n     * legend.legendText(dc.pluck('name'))\n     *\n     * // create numbered legend items\n     * chart.legend(dc.htmlLegend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(dc.htmlLegend().legendText(function(d) { return d.name + ': ' d.data; }))\n     **/\n    _legend.legendText = function (legendText) {\n        if (!arguments.length) {\n            return _legendText;\n        }\n        _legendText = legendText;\n        return _legend;\n    };\n\n    /**\n     * Maximum number of legend items to display\n     * @method maxItems\n     * @memberof dc.htmlLegend\n     * @instance\n     * @param  {Number} [maxItems]\n     * @return {dc.htmlLegend}\n     */\n    _legend.maxItems = function (maxItems) {\n        if (!arguments.length) {\n            return _maxItems;\n        }\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\n        return _legend;\n    };\n\n    return _legend;\n};\n\n\n/**\n * A scatter plot chart\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/scatter.html Scatter Chart}\n * - {@link http://dc-js.github.io/dc.js/examples/multi-scatter.html Multi-Scatter Chart}\n * @class scatterPlot\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a scatter plot under #chart-container1 element using the default global chart group\n * var chart1 = dc.scatterPlot('#chart-container1');\n * // create a scatter plot under #chart-container2 element using chart group A\n * var chart2 = dc.scatterPlot('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.scatterPlot(compositeChart);\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.scatterPlot}\n */\ndc.scatterPlot = function (parent, chartGroup) {\n    var _chart = dc.coordinateGridMixin({});\n    var _symbol = d3.symbol();\n\n    var _existenceAccessor = function (d) { return d.value; };\n\n    var originalKeyAccessor = _chart.keyAccessor();\n    _chart.keyAccessor(function (d) { return originalKeyAccessor(d)[0]; });\n    _chart.valueAccessor(function (d) { return originalKeyAccessor(d)[1]; });\n    _chart.colorAccessor(function () { return _chart._groupName; });\n\n    _chart.title(function (d) {\n        // this basically just counteracts the setting of its own key/value accessors\n        // see https://github.com/dc-js/dc.js/issues/702\n        return _chart.keyAccessor()(d) + ',' + _chart.valueAccessor()(d) + ': ' +\n            _chart.existenceAccessor()(d);\n    });\n\n    var _locator = function (d) {\n        return 'translate(' + _chart.x()(_chart.keyAccessor()(d)) + ',' +\n                              _chart.y()(_chart.valueAccessor()(d)) + ')';\n    };\n\n    var _highlightedSize = 7;\n    var _symbolSize = 5;\n    var _excludedSize = 3;\n    var _excludedColor = null;\n    var _excludedOpacity = 1.0;\n    var _emptySize = 0;\n    var _emptyOpacity = 0;\n    var _nonemptyOpacity = 1;\n    var _emptyColor = null;\n    var _filtered = [];\n\n    // Use a 2 dimensional brush\n    _chart.brush(d3.brush());\n\n    function elementSize (d, i) {\n        if (!_existenceAccessor(d)) {\n            return Math.pow(_emptySize, 2);\n        } else if (_filtered[i]) {\n            return Math.pow(_symbolSize, 2);\n        } else {\n            return Math.pow(_excludedSize, 2);\n        }\n    }\n    _symbol.size(elementSize);\n\n    dc.override(_chart, '_filter', function (filter) {\n        if (!arguments.length) {\n            return _chart.__filter();\n        }\n\n        return _chart.__filter(dc.filters.RangedTwoDimensionalFilter(filter));\n    });\n\n    _chart.plotData = function () {\n        var symbols = _chart.chartBodyG().selectAll('path.symbol')\n            .data(_chart.data());\n\n        dc.transition(symbols.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('opacity', 0).remove();\n\n        symbols = symbols\n            .enter()\n                .append('path')\n                .attr('class', 'symbol')\n                .attr('opacity', 0)\n                .attr('fill', _chart.getColor)\n                .attr('transform', _locator)\n            .merge(symbols);\n\n        symbols.call(renderTitles, _chart.data());\n\n        symbols.each(function (d, i) {\n            _filtered[i] = !_chart.filter() || _chart.filter().isFiltered([_chart.keyAccessor()(d), _chart.valueAccessor()(d)]);\n        });\n\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('opacity', function (d, i) {\n                if (!_existenceAccessor(d)) {\n                    return _emptyOpacity;\n                } else if (_filtered[i]) {\n                    return _nonemptyOpacity;\n                } else {\n                    return _chart.excludedOpacity();\n                }\n            })\n            .attr('fill', function (d, i) {\n                if (_emptyColor && !_existenceAccessor(d)) {\n                    return _emptyColor;\n                } else if (_chart.excludedColor() && !_filtered[i]) {\n                    return _chart.excludedColor();\n                } else {\n                    return _chart.getColor(d);\n                }\n            })\n            .attr('transform', _locator)\n            .attr('d', _symbol);\n    };\n\n    function renderTitles (symbol, d) {\n        if (_chart.renderTitle()) {\n            symbol.selectAll('title').remove();\n            symbol.append('title').text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    /**\n     * Get or set the existence accessor.  If a point exists, it is drawn with\n     * {@link dc.scatterPlot#symbolSize symbolSize} radius and\n     * opacity 1; if it does not exist, it is drawn with\n     * {@link dc.scatterPlot#emptySize emptySize} radius and opacity 0. By default,\n     * the existence accessor checks if the reduced value is truthy.\n     * @method existenceAccessor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link dc.scatterPlot#symbolSize symbolSize}\n     * @see {@link dc.scatterPlot#emptySize emptySize}\n     * @example\n     * // default accessor\n     * chart.existenceAccessor(function (d) { return d.value; });\n     * @param {Function} [accessor]\n     * @returns {Function|dc.scatterPlot}\n     */\n    _chart.existenceAccessor = function (accessor) {\n        if (!arguments.length) {\n            return _existenceAccessor;\n        }\n        _existenceAccessor = accessor;\n        return this;\n    };\n\n    /**\n     * Get or set the symbol type used for each point. By default the symbol is a circle (d3.symbolCircle).\n     * Type can be a constant or an accessor.\n     * @method symbol\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_type symbol.type}\n     * @example\n     * // Circle type\n     * chart.symbol(d3.symbolCircle);\n     * // Square type\n     * chart.symbol(d3.symbolSquare);\n     * @param {Function} [type=d3.symbolCircle]\n     * @returns {Function|dc.scatterPlot}\n     */\n    _chart.symbol = function (type) {\n        if (!arguments.length) {\n            return _symbol.type();\n        }\n        _symbol.type(type);\n        return _chart;\n    };\n\n    /**\n     * Get or set the symbol generator. By default `dc.scatterPlot` will use\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol()}\n     * to generate symbols. `dc.scatterPlot` will set the\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size symbol size accessor}\n     * on the symbol generator.\n     * @method customSymbol\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol}\n     * @see {@link https://stackoverflow.com/questions/25332120/create-additional-d3-js-symbols Create additional D3.js symbols}\n     * @param {String|Function} [customSymbol=d3.symbol()]\n     * @returns {String|Function|dc.scatterPlot}\n     */\n    _chart.customSymbol = function (customSymbol) {\n        if (!arguments.length) {\n            return _symbol;\n        }\n        _symbol = customSymbol;\n        _symbol.size(elementSize);\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for symbols.\n     * @method symbolSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [symbolSize=3]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.symbolSize = function (symbolSize) {\n        if (!arguments.length) {\n            return _symbolSize;\n        }\n        _symbolSize = symbolSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for highlighted symbols.\n     * @method highlightedSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [highlightedSize=5]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.highlightedSize = function (highlightedSize) {\n        if (!arguments.length) {\n            return _highlightedSize;\n        }\n        _highlightedSize = highlightedSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get size for symbols excluded from this chart's filter. If null, no\n     * special size is applied for symbols based on their filter status.\n     * @method excludedSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [excludedSize=null]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedSize = function (excludedSize) {\n        if (!arguments.length) {\n            return _excludedSize;\n        }\n        _excludedSize = excludedSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get color for symbols excluded from this chart's filter. If null, no\n     * special color is applied for symbols based on their filter status.\n     * @method excludedColor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [excludedColor=null]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedColor = function (excludedColor) {\n        if (!arguments.length) {\n            return _excludedColor;\n        }\n        _excludedColor = excludedColor;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols excluded from this chart's filter.\n     * @method excludedOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [excludedOpacity=1.0]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedOpacity = function (excludedOpacity) {\n        if (!arguments.length) {\n            return _excludedOpacity;\n        }\n        _excludedOpacity = excludedOpacity;\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for symbols when the group is empty.\n     * @method emptySize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [emptySize=0]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.hiddenSize = _chart.emptySize = function (emptySize) {\n        if (!arguments.length) {\n            return _emptySize;\n        }\n        _emptySize = emptySize;\n        return _chart;\n    };\n\n    /**\n     * Set or get color for symbols when the group is empty. If null, just use the\n     * {@link dc.colorMixin#colors colorMixin.colors} color scale zero value.\n     * @name emptyColor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {String} [emptyColor=null]\n     * @return {String}\n     * @return {dc.scatterPlot}/\n     */\n    _chart.emptyColor = function (emptyColor) {\n        if (!arguments.length) {\n            return _emptyColor;\n        }\n        _emptyColor = emptyColor;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols when the group is empty.\n     * @name emptyOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [emptyOpacity=0]\n     * @return {Number}\n     * @return {dc.scatterPlot}\n     */\n    _chart.emptyOpacity = function (emptyOpacity) {\n        if (!arguments.length) {\n            return _emptyOpacity;\n        }\n        _emptyOpacity = emptyOpacity;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols when the group is not empty.\n     * @name nonemptyOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [nonemptyOpacity=1]\n     * @return {Number}\n     * @return {dc.scatterPlot}\n     */\n    _chart.nonemptyOpacity = function (nonemptyOpacity) {\n        if (!arguments.length) {\n            return _emptyOpacity;\n        }\n        _nonemptyOpacity = nonemptyOpacity;\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        return [{chart: _chart, name: _chart._groupName, color: _chart.getColor()}];\n    };\n\n    _chart.legendHighlight = function (d) {\n        resizeSymbolsWhere(function (symbol) {\n            return symbol.attr('fill') === d.color;\n        }, _highlightedSize);\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return d3.select(this).attr('fill') !== d.color;\n        }).classed('fadeout', true);\n    };\n\n    _chart.legendReset = function (d) {\n        resizeSymbolsWhere(function (symbol) {\n            return symbol.attr('fill') === d.color;\n        }, _symbolSize);\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return d3.select(this).attr('fill') !== d.color;\n        }).classed('fadeout', false);\n    };\n\n    function resizeSymbolsWhere (condition, size) {\n        var symbols = _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return condition(d3.select(this));\n        });\n        var oldSize = _symbol.size();\n        _symbol.size(Math.pow(size, 2));\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay()).attr('d', _symbol);\n        _symbol.size(oldSize);\n    }\n\n    _chart.createBrushHandlePaths = function () {\n        // no handle paths for poly-brushes\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (_chart.round()) {\n            brushSelection[0] = brushSelection[0].map(_chart.round());\n            brushSelection[1] = brushSelection[1].map(_chart.round());\n        }\n        return brushSelection;\n    };\n\n    _chart.brushIsEmpty = function (brushSelection) {\n        return !brushSelection || brushSelection[0][0] >= brushSelection[1][0] || brushSelection[0][1] >= brushSelection[1][1];\n    };\n\n    _chart._brushing = function () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when brush.move is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing brush move programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var brushSelection = d3.event.selection;\n\n        // Testing with pixels is more reliable\n        var brushIsEmpty = _chart.brushIsEmpty(brushSelection);\n\n        if (brushSelection) {\n            brushSelection = brushSelection.map(function (point) {\n                return point.map(function (coord, i) {\n                    var scale = i === 0 ? _chart.x() : _chart.y();\n                    return scale.invert(coord);\n                });\n            });\n\n            brushSelection = _chart.extendBrush(brushSelection);\n\n            // The rounding process might have made brushSelection empty, so we need to recheck\n            brushIsEmpty = brushIsEmpty && _chart.brushIsEmpty(brushSelection);\n        }\n\n        _chart.redrawBrush(brushSelection, false);\n\n        var ranged2DFilter = brushIsEmpty ? null : dc.filters.RangedTwoDimensionalFilter(brushSelection);\n\n        dc.events.trigger(function () {\n            _chart.replaceFilter(ranged2DFilter);\n            _chart.redrawGroup();\n        }, dc.constants.EVENT_DELAY);\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        var _brush = _chart.brush();\n        var _gBrush = _chart.gBrush();\n\n        if (_chart.brushOn() && _gBrush) {\n            if (_chart.resizing()) {\n                _chart.setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                _gBrush\n                    .call(_brush.move, brushSelection);\n\n            } else {\n                brushSelection = brushSelection.map(function (point) {\n                    return point.map(function (coord, i) {\n                        var scale = i === 0 ? _chart.x() : _chart.y();\n                        return scale(coord);\n                    });\n                });\n\n                var gBrush =\n                    dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(_gBrush);\n\n                gBrush\n                    .call(_brush.move, brushSelection);\n\n            }\n        }\n\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    _chart.setBrushY = function (gBrush) {\n        gBrush.call(_chart.brush().y(_chart.y()));\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A display of a single numeric value.\n * Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and\n * a valueAccessor that returns a single value.\n * @class numberDisplay\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a number display under #chart-container1 element using the default global chart group\n * var display1 = dc.numberDisplay('#chart-container1');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.numberDisplay}\n */\ndc.numberDisplay = function (parent, chartGroup) {\n    var SPAN_CLASS = 'number-display';\n    var _formatNumber = d3.format('.2s');\n    var _chart = dc.baseMixin({});\n    var _html = {one: '', some: '', none: ''};\n    var _lastValue;\n\n    // dimension not required\n    _chart._mandatoryAttributes(['group']);\n\n    // default to ordering by value, to emulate old group.top(1) behavior when multiple groups\n    _chart.ordering(function (kv) { return kv.value; });\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending on the number\n     * displayed.  The text `%number` will be replaced with the current value.\n     * - one: HTML template to use if the number is 1\n     * - zero: HTML template to use if the number is 0\n     * - some: HTML template to use otherwise\n     * @method html\n     * @memberof dc.numberDisplay\n     * @instance\n     * @example\n     * numberWidget.html({\n     *      one:'%number record',\n     *      some:'%number records',\n     *      none:'no records'})\n     * @param {{one:String, some:String, none:String}} [html={one: '', some: '', none: ''}]\n     * @returns {{one:String, some:String, none:String}|dc.numberDisplay}\n     */\n    _chart.html = function (html) {\n        if (!arguments.length) {\n            return _html;\n        }\n        if (html.none) {\n            _html.none = html.none;//if none available\n        } else if (html.one) {\n            _html.none = html.one;//if none not available use one\n        } else if (html.some) {\n            _html.none = html.some;//if none and one not available use some\n        }\n        if (html.one) {\n            _html.one = html.one;//if one available\n        } else if (html.some) {\n            _html.one = html.some;//if one not available use some\n        }\n        if (html.some) {\n            _html.some = html.some;//if some available\n        } else if (html.one) {\n            _html.some = html.one;//if some not available use one\n        }\n        return _chart;\n    };\n\n    /**\n     * Calculate and return the underlying value of the display.\n     * @method value\n     * @memberof dc.numberDisplay\n     * @instance\n     * @returns {Number}\n     */\n    _chart.value = function () {\n        return _chart.data();\n    };\n\n    function maxBin (all) {\n        if (!all.length) {\n            return null;\n        }\n        var sorted = _chart._computeOrderedGroups(all);\n        return sorted[sorted.length - 1];\n    }\n    _chart.data(function (group) {\n        var valObj = group.value ? group.value() : maxBin(group.all());\n        return _chart.valueAccessor()(valObj);\n    });\n\n    _chart.transitionDuration(250); // good default\n    _chart.transitionDelay(0);\n\n    _chart._doRender = function () {\n        var newValue = _chart.value(),\n            span = _chart.selectAll('.' + SPAN_CLASS);\n\n        if (span.empty()) {\n            span = span.data([0])\n                .enter()\n                    .append('span')\n                    .attr('class', SPAN_CLASS)\n                .merge(span);\n        }\n\n        span.transition()\n            .duration(_chart.transitionDuration())\n            .delay(_chart.transitionDelay())\n            .ease(d3.easeQuad)\n            .tween('text', function () {\n                // [XA] don't try and interpolate from Infinity, else this breaks.\n                var interpStart = isFinite(_lastValue) ? _lastValue : 0;\n                var interp = d3.interpolateNumber(interpStart || 0, newValue);\n                _lastValue = newValue;\n\n                // need to save it in D3v4\n                var node = this;\n                return function (t) {\n                    var html = null, num = _chart.formatNumber()(interp(t));\n                    if (newValue === 0 && (_html.none !== '')) {\n                        html = _html.none;\n                    } else if (newValue === 1 && (_html.one !== '')) {\n                        html = _html.one;\n                    } else if (_html.some !== '') {\n                        html = _html.some;\n                    }\n                    node.innerHTML = html ? html.replace('%number', num) : num;\n                };\n            });\n    };\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set a function to format the value for the display.\n     * @method formatNumber\n     * @memberof dc.numberDisplay\n     * @instance\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @param {Function} [formatter=d3.format('.2s')]\n     * @returns {Function|dc.numberDisplay}\n     */\n    _chart.formatNumber = function (formatter) {\n        if (!arguments.length) {\n            return _formatNumber;\n        }\n        _formatNumber = formatter;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A heat map is matrix that represents the values of two dimensions of data using colors.\n * @class heatMap\n * @memberof dc\n * @mixes dc.colorMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @example\n * // create a heat map under #chart-container1 element using the default global chart group\n * var heatMap1 = dc.heatMap('#chart-container1');\n * // create a heat map under #chart-container2 element using chart group A\n * var heatMap2 = dc.heatMap('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.heatMap}\n */\ndc.heatMap = function (parent, chartGroup) {\n\n    var DEFAULT_BORDER_RADIUS = 6.75;\n\n    var _chartBody;\n\n    var _cols;\n    var _rows;\n    var _colOrdering = d3.ascending;\n    var _rowOrdering = d3.ascending;\n    var _colScale = d3.scaleBand();\n    var _rowScale = d3.scaleBand();\n\n    var _xBorderRadius = DEFAULT_BORDER_RADIUS;\n    var _yBorderRadius = DEFAULT_BORDER_RADIUS;\n\n    var _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin({})));\n    _chart._mandatoryAttributes(['group']);\n    _chart.title(_chart.colorAccessor());\n\n    var _colsLabel = function (d) {\n        return d;\n    };\n    var _rowsLabel = function (d) {\n        return d;\n    };\n\n    /**\n     * Set or get the column label function. The chart class uses this function to render\n     * column labels on the X axis. It is passed the column name.\n     * @method colsLabel\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // the default label function just returns the name\n     * chart.colsLabel(function(d) { return d; });\n     * @param  {Function} [labelFunction=function(d) { return d; }]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.colsLabel = function (labelFunction) {\n        if (!arguments.length) {\n            return _colsLabel;\n        }\n        _colsLabel = labelFunction;\n        return _chart;\n    };\n\n    /**\n     * Set or get the row label function. The chart class uses this function to render\n     * row labels on the Y axis. It is passed the row name.\n     * @method rowsLabel\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // the default label function just returns the name\n     * chart.rowsLabel(function(d) { return d; });\n     * @param  {Function} [labelFunction=function(d) { return d; }]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.rowsLabel = function (labelFunction) {\n        if (!arguments.length) {\n            return _rowsLabel;\n        }\n        _rowsLabel = labelFunction;\n        return _chart;\n    };\n\n    var _xAxisOnClick = function (d) { filterAxis(0, d); };\n    var _yAxisOnClick = function (d) { filterAxis(1, d); };\n    var _boxOnClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(dc.filters.TwoDimensionalFilter(filter));\n            _chart.redrawGroup();\n        });\n    };\n\n    function filterAxis (axis, value) {\n        var cellsOnAxis = _chart.selectAll('.box-group').filter(function (d) {\n            return d.key[axis] === value;\n        });\n        var unfilteredCellsOnAxis = cellsOnAxis.filter(function (d) {\n            return !_chart.hasFilter(d.key);\n        });\n        dc.events.trigger(function () {\n            var selection = unfilteredCellsOnAxis.empty() ? cellsOnAxis : unfilteredCellsOnAxis;\n            var filters = selection.data().map(function (kv) {\n                return dc.filters.TwoDimensionalFilter(kv.key);\n            });\n            _chart.filter([filters]);\n            _chart.redrawGroup();\n        });\n    }\n\n    var nonstandardFilter = dc.logger.deprecate(function (filter) {\n        return _chart._filter(dc.filters.TwoDimensionalFilter(filter));\n    }, 'heatmap.filter taking a coordinate is deprecated - please pass dc.filters.TwoDimensionalFilter instead');\n    dc.override(_chart, 'filter', function (filter) {\n        if (!arguments.length) {\n            return _chart._filter();\n        }\n        if (filter !== null && filter.filterType !== 'TwoDimensionalFilter' &&\n           !(Array.isArray(filter) && Array.isArray(filter[0]) && filter[0][0].filterType === 'TwoDimensionalFilter')) {\n            return nonstandardFilter(filter);\n        }\n        return _chart._filter(filter);\n    });\n\n    /**\n     * Gets or sets the values used to create the rows of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the value accessor.\n     * @method rows\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Array<String|Number>} [rows]\n     * @returns {Array<String|Number>|dc.heatMap}\n     */\n\n    _chart.rows = function (rows) {\n        if (!arguments.length) {\n            return _rows;\n        }\n        _rows = rows;\n        return _chart;\n    };\n\n    /**\n     #### .rowOrdering([orderFunction])\n     Get or set an accessor to order the rows.  Default is d3.ascending.\n     */\n    _chart.rowOrdering = function (_) {\n        if (!arguments.length) {\n            return _rowOrdering;\n        }\n        _rowOrdering = _;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the key accessor.\n     * @method cols\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Array<String|Number>} [cols]\n     * @returns {Array<String|Number>|dc.heatMap}\n     */\n    _chart.cols = function (cols) {\n        if (!arguments.length) {\n            return _cols;\n        }\n        _cols = cols;\n        return _chart;\n    };\n\n    /**\n     #### .colOrdering([orderFunction])\n     Get or set an accessor to order the cols.  Default is ascending.\n     */\n    _chart.colOrdering = function (_) {\n        if (!arguments.length) {\n            return _colOrdering;\n        }\n        _colOrdering = _;\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _chartBody = _chart.svg()\n            .append('g')\n            .attr('class', 'heatmap')\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n        return _chart._doRedraw();\n    };\n\n    _chart._doRedraw = function () {\n        var data = _chart.data(),\n            rows = _chart.rows() || data.map(_chart.valueAccessor()),\n            cols = _chart.cols() || data.map(_chart.keyAccessor());\n        if (_rowOrdering) {\n            rows = rows.sort(_rowOrdering);\n        }\n        if (_colOrdering) {\n            cols = cols.sort(_colOrdering);\n        }\n        rows = _rowScale.domain(rows);\n        cols = _colScale.domain(cols);\n\n        var rowCount = rows.domain().length,\n            colCount = cols.domain().length,\n            boxWidth = Math.floor(_chart.effectiveWidth() / colCount),\n            boxHeight = Math.floor(_chart.effectiveHeight() / rowCount);\n\n        cols.rangeRound([0, _chart.effectiveWidth()]);\n        rows.rangeRound([_chart.effectiveHeight(), 0]);\n\n        var boxes = _chartBody.selectAll('g.box-group').data(_chart.data(), function (d, i) {\n            return _chart.keyAccessor()(d, i) + '\\0' + _chart.valueAccessor()(d, i);\n        });\n\n        boxes.exit().remove();\n\n        var gEnter = boxes.enter().append('g')\n            .attr('class', 'box-group');\n\n        gEnter.append('rect')\n            .attr('class', 'heat-box')\n            .attr('fill', 'white')\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n            .on('click', _chart.boxOnClick());\n\n        boxes = gEnter.merge(boxes);\n\n        if (_chart.renderTitle()) {\n            gEnter.append('title');\n            boxes.select('title').text(_chart.title());\n        }\n\n        dc.transition(boxes.select('rect'), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n            .attr('rx', _xBorderRadius)\n            .attr('ry', _yBorderRadius)\n            .attr('fill', _chart.getColor)\n            .attr('width', boxWidth)\n            .attr('height', boxHeight);\n\n        var gCols = _chartBody.select('g.cols');\n        if (gCols.empty()) {\n            gCols = _chartBody.append('g').attr('class', 'cols axis');\n        }\n        var gColsText = gCols.selectAll('text').data(cols.domain());\n\n        gColsText.exit().remove();\n\n        gColsText = gColsText\n            .enter()\n                .append('text')\n                .attr('x', function (d) {\n                    return cols(d) + boxWidth / 2;\n                })\n                .style('text-anchor', 'middle')\n                .attr('y', _chart.effectiveHeight())\n                .attr('dy', 12)\n                .on('click', _chart.xAxisOnClick())\n                .text(_chart.colsLabel())\n            .merge(gColsText);\n\n        dc.transition(gColsText, _chart.transitionDuration(), _chart.transitionDelay())\n               .text(_chart.colsLabel())\n               .attr('x', function (d) { return cols(d) + boxWidth / 2; })\n               .attr('y', _chart.effectiveHeight());\n\n        var gRows = _chartBody.select('g.rows');\n        if (gRows.empty()) {\n            gRows = _chartBody.append('g').attr('class', 'rows axis');\n        }\n\n        var gRowsText = gRows.selectAll('text').data(rows.domain());\n\n        gRowsText.exit().remove();\n\n        gRowsText = gRowsText\n            .enter()\n            .append('text')\n                .style('text-anchor', 'end')\n                .attr('x', 0)\n                .attr('dx', -2)\n                .attr('y', function (d) { return rows(d) + boxHeight / 2; })\n                .attr('dy', 6)\n                .on('click', _chart.yAxisOnClick())\n                .text(_chart.rowsLabel())\n            .merge(gRowsText);\n\n        dc.transition(gRowsText, _chart.transitionDuration(), _chart.transitionDelay())\n              .text(_chart.rowsLabel())\n              .attr('y', function (d) { return rows(d) + boxHeight / 2; });\n\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.box-group').each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.box-group').each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when an individual cell is clicked in the heatmap.\n     * By default, filtering of the cell will be toggled.\n     * @method boxOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // default box on click handler\n     * chart.boxOnClick(function (d) {\n     *     var filter = d.key;\n     *     dc.events.trigger(function () {\n     *         _chart.filter(filter);\n     *         _chart.redrawGroup();\n     *     });\n     * });\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.boxOnClick = function (handler) {\n        if (!arguments.length) {\n            return _boxOnClick;\n        }\n        _boxOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when a column tick is clicked in the x axis.\n     * By default, if any cells in the column are unselected, the whole column will be selected,\n     * otherwise the whole column will be unselected.\n     * @method xAxisOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.xAxisOnClick = function (handler) {\n        if (!arguments.length) {\n            return _xAxisOnClick;\n        }\n        _xAxisOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when a row tick is clicked in the y axis.\n     * By default, if any cells in the row are unselected, the whole row will be selected,\n     * otherwise the whole row will be unselected.\n     * @method yAxisOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.yAxisOnClick = function (handler) {\n        if (!arguments.length) {\n            return _yAxisOnClick;\n        }\n        _yAxisOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the X border radius.  Set to 0 to get full rectangles.\n     * @method xBorderRadius\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Number} [xBorderRadius=6.75]\n     * @returns {Number|dc.heatMap}\n     */\n    _chart.xBorderRadius = function (xBorderRadius) {\n        if (!arguments.length) {\n            return _xBorderRadius;\n        }\n        _xBorderRadius = xBorderRadius;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the Y border radius.  Set to 0 to get full rectangles.\n     * @method yBorderRadius\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Number} [yBorderRadius=6.75]\n     * @returns {Number|dc.heatMap}\n     */\n    _chart.yBorderRadius = function (yBorderRadius) {\n        if (!arguments.length) {\n            return _yBorderRadius;\n        }\n        _yBorderRadius = yBorderRadius;\n        return _chart;\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n// https://github.com/d3/d3-plugins/blob/master/box/box.js\n// * Original source March 22, 2013\n// * Enhancements integrated on May 13, 2018 for dc.js library only\n\n// https://github.com/d3/d3-plugins/blob/master/LICENSE\n// Copyright (c) 2012-2015, Michael Bostock\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// * Redistributions of source code must retain the above copyright notice, this\n//   list of conditions and the following disclaimer.\n//\n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution.\n//\n// * The name Michael Bostock may not be used to endorse or promote products\n//   derived from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n(function () {\n\n    // Inspired by http://informationandvisualization.de/blog/box-plot\n    d3.box = function () {\n        var width = 1,\n            height = 1,\n            duration = 0,\n            delay = 0,\n            domain = null,\n            value = Number,\n            whiskers = boxWhiskers,\n            quartiles = boxQuartiles,\n            tickFormat = null,\n\n            // Enhanced attributes\n            renderDataPoints = false,\n            dataRadius = 3,\n            dataOpacity = 0.3,\n            dataWidthPortion = 0.8,\n            renderTitle = false,\n            showOutliers = true,\n            boldOutlier = false;\n\n        // For each small multiple…\n        function box (g) {\n            /* jshint -W074 */\n            g.each(function (d, i) {\n                d = d.map(value).sort(d3.ascending);\n                var g = d3.select(this),\n                    n = d.length,\n                    min,\n                    max;\n\n                // Leave if there are no items.\n                if (n === 0) {return;}\n\n                // Compute quartiles. Must return exactly 3 elements.\n                var quartileData = d.quartiles = quartiles(d);\n\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                var whiskerIndices = whiskers && whiskers.call(this, d, i),\n                    whiskerData = whiskerIndices && whiskerIndices.map(function (i) { return d[i]; });\n\n                // Compute outliers. If no whiskers are specified, all data are 'outliers'.\n                // We compute the outliers as indices, so that we can join across transitions!\n                var outlierIndices = whiskerIndices ?\n                    d3.range(0, whiskerIndices[0]).concat(d3.range(whiskerIndices[1] + 1, n)) : d3.range(n);\n\n                // Determine the maximum value based on if outliers are shown\n                if (showOutliers) {\n                    min = d[0];\n                    max = d[n - 1];\n                } else {\n                    min = d[whiskerIndices[0]];\n                    max = d[whiskerIndices[1]];\n                }\n                var pointIndices = d3.range(whiskerIndices[0], whiskerIndices[1] + 1);\n\n                // Compute the new x-scale.\n                var x1 = d3.scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]);\n\n                // Retrieve the old x-scale, if this is an update.\n                var x0 = this.__chart__ || d3.scaleLinear()\n                    .domain([0, Infinity])\n                    .range(x1.range());\n\n                // Stash the new scale.\n                this.__chart__ = x1;\n\n                // Note: the box, median, and box tick elements are fixed in number,\n                // so we only have to handle enter and update. In contrast, the outliers\n                // and other elements are variable, so we need to exit them! Variable\n                // elements also fade in and out.\n\n                // Update center line: the vertical line spanning the whiskers.\n                var center = g.selectAll('line.center')\n                    .data(whiskerData ? [whiskerData] : []);\n\n                center.enter().insert('line', 'rect')\n                    .attr('class', 'center')\n                    .attr('x1', width / 2)\n                    .attr('y1', function (d) { return x0(d[0]); })\n                    .attr('x2', width / 2)\n                    .attr('y2', function (d) { return x0(d[1]); })\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); });\n\n                center.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1)\n                    .attr('x1', width / 2)\n                    .attr('x2', width / 2)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); });\n\n                center.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1e-6)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); })\n                    .remove();\n\n                // Update innerquartile box.\n                var box = g.selectAll('rect.box')\n                    .data([quartileData]);\n\n                box.enter().append('rect')\n                    .attr('class', 'box')\n                    .attr('x', 0)\n                    .attr('y', function (d) { return x0(d[2]); })\n                    .attr('width', width)\n                    .attr('height', function (d) { return x0(d[0]) - x0(d[2]); })\n                    .style('fill-opacity', (renderDataPoints) ? 0.1 : 1)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', function (d) { return x1(d[2]); })\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\n\n                box.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('width', width)\n                    .attr('y', function (d) { return x1(d[2]); })\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\n\n                // Update median line.\n                var medianLine = g.selectAll('line.median')\n                    .data([quartileData[1]]);\n\n                medianLine.enter().append('line')\n                    .attr('class', 'median')\n                    .attr('x1', 0)\n                    .attr('y1', x0)\n                    .attr('x2', width)\n                    .attr('y2', x0)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1);\n\n                medianLine.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('x1', 0)\n                    .attr('x2', width)\n                    .attr('y1', x1)\n                    .attr('y2', x1);\n\n                // Update whiskers.\n                var whisker = g.selectAll('line.whisker')\n                    .data(whiskerData || []);\n\n                whisker.enter().insert('line', 'circle, text')\n                    .attr('class', 'whisker')\n                    .attr('x1', 0)\n                    .attr('y1', x0)\n                    .attr('x2', width)\n                    .attr('y2', x0)\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1);\n\n                whisker.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('x1', 0)\n                    .attr('x2', width)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1);\n\n                whisker.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1e-6)\n                    .remove();\n\n                // Update outliers.\n                if (showOutliers) {\n                    var outlierClass = boldOutlier ? 'outlierBold' : 'outlier';\n                    var outlierSize = boldOutlier ? 3 : 5;\n                    var outlierX = boldOutlier ?\n                        function () { return Math.floor(Math.random() *\n                            (width * dataWidthPortion) +\n                            1 + ((width - (width * dataWidthPortion)) / 2)); } :\n                        function () { return width / 2; };\n\n                    var outlier = g.selectAll('circle.' + outlierClass)\n                        .data(outlierIndices, Number);\n\n                    outlier.enter().insert('circle', 'text')\n                        .attr('class', outlierClass)\n                        .attr('r', outlierSize)\n                        .attr('cx', outlierX)\n                        .attr('cy', function (i) { return x0(d[i]); })\n                        .style('opacity', 1e-6)\n                        .transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', 0.6);\n\n                    if (renderTitle) {\n                        outlier.selectAll('title').remove();\n                        outlier.append('title').text(function (i) {return d[i]; });\n                    }\n\n                    outlier.transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cx', outlierX)\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', 0.6);\n\n                    outlier.exit().transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', 0) //function (i) { return x1(d[i]); })\n                        .style('opacity', 1e-6)\n                        .remove();\n                }\n\n                // Update Values\n                if (renderDataPoints) {\n                    var point = g.selectAll('circle.data')\n                        .data(pointIndices);\n\n                    point.enter().insert('circle', 'text')\n                        .attr('class', 'data')\n                        .attr('r', dataRadius)\n                        .attr('cx', function () { return Math.floor(Math.random() *\n                            (width * dataWidthPortion) +\n                            1 + ((width - (width * dataWidthPortion)) / 2)); })\n                        .attr('cy', function (i) { return x0(d[i]); })\n                        .style('opacity', 1e-6)\n                        .transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', dataOpacity);\n\n                    if (renderTitle) {\n                        point.selectAll('title').remove();\n                        point.append('title').text(function (i) { return d[i]; });\n                    }\n\n                    point.transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cx', function () { return Math.floor(Math.random() *\n                            (width * dataWidthPortion) +\n                            1 + ((width - (width * dataWidthPortion)) / 2)); })\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', dataOpacity);\n\n                    point.exit().transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', 0)\n                        .style('opacity', 1e-6)\n                        .remove();\n                }\n\n                // Compute the tick format.\n                var format = tickFormat || x1.tickFormat(8);\n\n                // Update box ticks.\n                var boxTick = g.selectAll('text.box')\n                    .data(quartileData);\n\n                boxTick.enter().append('text')\n                    .attr('class', 'box')\n                    .attr('dy', '.3em')\n                    .attr('dx', function (d, i) { return i & 1 ? 6 : -6; })\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\n                    .attr('y', x0)\n                    .attr('text-anchor', function (d, i) { return i & 1 ? 'start' : 'end'; })\n                    .text(format)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1);\n\n                boxTick.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .text(format)\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\n                    .attr('y', x1);\n\n                // Update whisker ticks. These are handled separately from the box\n                // ticks because they may or may not exist, and we want don't want\n                // to join box ticks pre-transition with whisker ticks post-.\n                var whiskerTick = g.selectAll('text.whisker')\n                    .data(whiskerData || []);\n\n                whiskerTick.enter().append('text')\n                    .attr('class', 'whisker')\n                    .attr('dy', '.3em')\n                    .attr('dx', 6)\n                    .attr('x', width)\n                    .attr('y', x0)\n                    .text(format)\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1)\n                    .style('opacity', 1);\n\n                whiskerTick.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .text(format)\n                    .attr('x', width)\n                    .attr('y', x1)\n                    .style('opacity', 1);\n\n                whiskerTick.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1)\n                    .style('opacity', 1e-6)\n                    .remove();\n\n                // Remove temporary quartiles element from within data array.\n                delete d.quartiles;\n            });\n            /* jshint +W074 */\n            d3.timerFlush();\n        }\n\n        box.width = function (x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = x;\n            return box;\n        };\n\n        box.height = function (x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = x;\n            return box;\n        };\n\n        box.tickFormat = function (x) {\n            if (!arguments.length) {\n                return tickFormat;\n            }\n            tickFormat = x;\n            return box;\n        };\n\n        box.showOutliers = function (x) {\n            if (!arguments.length) {\n                return showOutliers;\n            }\n            showOutliers = x;\n            return box;\n        };\n\n        box.boldOutlier = function (x) {\n            if (!arguments.length) {\n                return boldOutlier;\n            }\n            boldOutlier = x;\n            return box;\n        };\n\n        box.renderDataPoints = function (x) {\n            if (!arguments.length) {\n                return renderDataPoints;\n            }\n            renderDataPoints = x;\n            return box;\n        };\n\n        box.renderTitle = function (x) {\n            if (!arguments.length) {\n                return renderTitle;\n            }\n            renderTitle = x;\n            return box;\n        };\n\n        box.dataOpacity = function (x) {\n            if (!arguments.length) {\n                return dataOpacity;\n            }\n            dataOpacity = x;\n            return box;\n        };\n\n        box.dataWidthPortion = function (x) {\n            if (!arguments.length) {\n                return dataWidthPortion;\n            }\n            dataWidthPortion = x;\n            return box;\n        };\n\n        box.duration = function (x) {\n            if (!arguments.length) {\n                return duration;\n            }\n            duration = x;\n            return box;\n        };\n\n        box.domain = function (x) {\n            if (!arguments.length) {\n                return domain;\n            }\n            domain = x === null ? x :  typeof x === 'function' ? x : dc.utils.constant(x);\n            return box;\n        };\n\n        box.value = function (x) {\n            if (!arguments.length) {\n                return value;\n            }\n            value = x;\n            return box;\n        };\n\n        box.whiskers = function (x) {\n            if (!arguments.length) {\n                return whiskers;\n            }\n            whiskers = x;\n            return box;\n        };\n\n        box.quartiles = function (x) {\n            if (!arguments.length) {\n                return quartiles;\n            }\n            quartiles = x;\n            return box;\n        };\n\n        return box;\n    };\n\n    function boxWhiskers (d) {\n        return [0, d.length - 1];\n    }\n\n    function boxQuartiles (d) {\n        return [\n            d3.quantile(d, 0.25),\n            d3.quantile(d, 0.5),\n            d3.quantile(d, 0.75)\n        ];\n    }\n\n})();\n\n\n\n/**\n * A box plot is a chart that depicts numerical data via their quartile ranges.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-basic.html Boxplot Basic example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-enhanced.html Boxplot Enhanced example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-render-data.html Boxplot Render Data example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-time.html Boxplot time example}\n * @class boxPlot\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a box plot under #chart-container1 element using the default global chart group\n * var boxPlot1 = dc.boxPlot('#chart-container1');\n * // create a box plot under #chart-container2 element using chart group A\n * var boxPlot2 = dc.boxPlot('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.boxPlot}\n */\ndc.boxPlot = function (parent, chartGroup) {\n    var _chart = dc.coordinateGridMixin({});\n\n    // Returns a function to compute the interquartile range.\n    function DEFAULT_WHISKERS_IQR (k) {\n        return function (d) {\n            var q1 = d.quartiles[0],\n                q3 = d.quartiles[2],\n                iqr = (q3 - q1) * k,\n                i = -1,\n                j = d.length;\n            do { ++i; } while (d[i] < q1 - iqr);\n            do { --j; } while (d[j] > q3 + iqr);\n            return [i, j];\n        };\n    }\n\n    var _whiskerIqrFactor = 1.5;\n    var _whiskersIqr = DEFAULT_WHISKERS_IQR;\n    var _whiskers = _whiskersIqr(_whiskerIqrFactor);\n\n    var _box = d3.box();\n    var _tickFormat = null;\n    var _renderDataPoints = false;\n    var _dataOpacity = 0.3;\n    var _dataWidthPortion = 0.8;\n    var _showOutliers = true;\n    var _boldOutlier = false;\n\n    // Used in yAxisMin and yAxisMax to add padding in pixel coordinates\n    // so the min and max data points/whiskers are within the chart\n    var _yRangePadding = 8;\n\n    var _boxWidth = function (innerChartWidth, xUnits) {\n        if (_chart.isOrdinal()) {\n            return _chart.x().bandwidth();\n        } else {\n            return innerChartWidth / (1 + _chart.boxPadding()) / xUnits;\n        }\n    };\n\n    // default to ordinal\n    _chart.x(d3.scaleBand());\n    _chart.xUnits(dc.units.ordinal);\n\n    // valueAccessor should return an array of values that can be coerced into numbers\n    // or if data is overloaded for a static array of arrays, it should be `Number`.\n    // Empty arrays are not included.\n    _chart.data(function (group) {\n        return group.all().map(function (d) {\n            d.map = function (accessor) { return accessor.call(d, d); };\n            return d;\n        }).filter(function (d) {\n            var values = _chart.valueAccessor()(d);\n            return values.length !== 0;\n        });\n    });\n\n    /**\n     * Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.\n     * See the {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\n     * for a visual description of how the padding is applied.\n     * @method boxPadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3.scaleBand}\n     * @param {Number} [padding=0.8]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.boxPadding = _chart._rangeBandPadding;\n    _chart.boxPadding(0.8);\n\n    /**\n     * Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts\n     * or on charts with a custom {@link dc.boxPlot#boxWidth .boxWidth}. Will pad the width by\n     * `padding * barWidth` on each side of the chart.\n     * @method outerPadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [padding=0.5]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.outerPadding = _chart._outerRangeBandPadding;\n    _chart.outerPadding(0.5);\n\n    /**\n     * Get or set the numerical width of the boxplot box. The width may also be a function taking as\n     * parameters the chart width excluding the right and left margins, as well as the number of x\n     * units.\n     * @example\n     * // Using numerical parameter\n     * chart.boxWidth(10);\n     * // Using function\n     * chart.boxWidth((innerChartWidth, xUnits) { ... });\n     * @method boxWidth\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number|Function} [boxWidth=0.5]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.boxWidth = function (boxWidth) {\n        if (!arguments.length) {\n            return _boxWidth;\n        }\n        _boxWidth = typeof boxWidth === 'function' ? boxWidth : dc.utils.constant(boxWidth);\n        return _chart;\n    };\n\n    var boxTransform = function (d, i) {\n        var xOffset = _chart.x()(_chart.keyAccessor()(d, i));\n        return 'translate(' + xOffset + ', 0)';\n    };\n\n    _chart._preprocessData = function () {\n        if (_chart.elasticX()) {\n            _chart.x().domain([]);\n        }\n    };\n\n    _chart.plotData = function () {\n        var _calculatedBoxWidth = _boxWidth(_chart.effectiveWidth(), _chart.xUnitCount());\n\n        _box.whiskers(_whiskers)\n            .width(_calculatedBoxWidth)\n            .height(_chart.effectiveHeight())\n            .value(_chart.valueAccessor())\n            .domain(_chart.y().domain())\n            .duration(_chart.transitionDuration())\n            .tickFormat(_tickFormat)\n            .renderDataPoints(_renderDataPoints)\n            .dataOpacity(_dataOpacity)\n            .dataWidthPortion(_dataWidthPortion)\n            .renderTitle(_chart.renderTitle())\n            .showOutliers(_showOutliers)\n            .boldOutlier(_boldOutlier);\n\n        var boxesG = _chart.chartBodyG().selectAll('g.box').data(_chart.data(), _chart.keyAccessor());\n\n        var boxesGEnterUpdate = renderBoxes(boxesG);\n        updateBoxes(boxesGEnterUpdate);\n        removeBoxes(boxesG);\n\n        _chart.fadeDeselectedArea(_chart.filter());\n    };\n\n    function renderBoxes (boxesG) {\n        var boxesGEnter = boxesG.enter().append('g');\n\n        boxesGEnter\n            .attr('class', 'box')\n            .attr('transform', boxTransform)\n            .call(_box)\n            .on('click', function (d) {\n                _chart.filter(_chart.keyAccessor()(d));\n                _chart.redrawGroup();\n            });\n        return boxesGEnter.merge(boxesG);\n    }\n\n    function updateBoxes (boxesG) {\n        dc.transition(boxesG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', boxTransform)\n            .call(_box)\n            .each(function (d) {\n                var color = _chart.getColor(d, 0);\n                d3.select(this).select('rect.box').attr('fill', color);\n                d3.select(this).selectAll('circle.data').attr('fill', color);\n            });\n    }\n\n    function removeBoxes (boxesG) {\n        boxesG.exit().remove().call(_box);\n    }\n\n    function minDataValue () {\n        return d3.min(_chart.data(), function (e) {\n            return d3.min(_chart.valueAccessor()(e));\n        });\n    }\n\n    function maxDataValue () {\n        return d3.max(_chart.data(), function (e) {\n            return d3.max(_chart.valueAccessor()(e));\n        });\n    }\n\n    function yAxisRangeRatio () {\n        return ((maxDataValue() - minDataValue()) / _chart.effectiveHeight());\n    }\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        if (_chart.hasFilter()) {\n            if (_chart.isOrdinal()) {\n                _chart.g().selectAll('g.box').each(function (d) {\n                    if (_chart.isSelectedNode(d)) {\n                        _chart.highlightSelected(this);\n                    } else {\n                        _chart.fadeDeselected(this);\n                    }\n                });\n            } else {\n                if (!(_chart.brushOn() || _chart.parentBrushOn())) {\n                    return;\n                }\n                var start = brushSelection[0];\n                var end = brushSelection[1];\n                var keyAccessor = _chart.keyAccessor();\n                _chart.g().selectAll('g.box').each(function (d) {\n                    var key = keyAccessor(d);\n                    if (key < start || key >= end) {\n                        _chart.fadeDeselected(this);\n                    } else {\n                        _chart.highlightSelected(this);\n                    }\n                });\n            }\n        } else {\n            _chart.g().selectAll('g.box').each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(_chart.keyAccessor()(d));\n    };\n\n    _chart.yAxisMin = function () {\n        var padding = _yRangePadding * yAxisRangeRatio();\n        return dc.utils.subtract(minDataValue() - padding, _chart.yAxisPadding());\n    };\n\n    _chart.yAxisMax = function () {\n        var padding = _yRangePadding * yAxisRangeRatio();\n        return dc.utils.add(maxDataValue() + padding, _chart.yAxisPadding());\n    };\n\n    /**\n     * Get or set the numerical format of the boxplot median, whiskers and quartile labels. Defaults\n     * to integer formatting.\n     * @example\n     * // format ticks to 2 decimal places\n     * chart.tickFormat(d3.format('.2f'));\n     * @method tickFormat\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Function} [tickFormat]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.tickFormat = function (tickFormat) {\n        if (!arguments.length) {\n            return _tickFormat;\n        }\n        _tickFormat = tickFormat;\n        return _chart;\n    };\n\n    /**\n     * Get or set the amount of padding to add, in pixel coordinates, to the top and\n     * bottom of the chart to accommodate box/whisker labels.\n     * @example\n     * // allow more space for a bigger whisker font\n     * chart.yRangePadding(12);\n     * @method yRangePadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Function} [yRangePadding = 8]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.yRangePadding = function (yRangePadding) {\n        if (!arguments.length) {\n            return _yRangePadding;\n        }\n        _yRangePadding = yRangePadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set whether individual data points will be rendered.\n     * @example\n     * // Enable rendering of individual data points\n     * chart.renderDataPoints(true);\n     * @method renderDataPoints\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Boolean} [show=false]\n     * @returns {Boolean|dc.boxPlot}\n     */\n    _chart.renderDataPoints = function (show) {\n        if (!arguments.length) {\n            return _renderDataPoints;\n        }\n        _renderDataPoints = show;\n        return _chart;\n    };\n\n    /**\n     * Get or set the opacity when rendering data.\n     * @example\n     * // If individual data points are rendered increase the opacity.\n     * chart.dataOpacity(0.7);\n     * @method dataOpacity\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [opacity=0.3]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.dataOpacity = function (opacity) {\n        if (!arguments.length) {\n            return _dataOpacity;\n        }\n        _dataOpacity = opacity;\n        return _chart;\n    };\n\n    /**\n     * Get or set the portion of the width of the box to show data points.\n     * @example\n     * // If individual data points are rendered increase the data box.\n     * chart.dataWidthPortion(0.9);\n     * @method dataWidthPortion\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [percentage=0.8]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.dataWidthPortion = function (percentage) {\n        if (!arguments.length) {\n            return _dataWidthPortion;\n        }\n        _dataWidthPortion = percentage;\n        return _chart;\n    };\n\n    /**\n     * Get or set whether outliers will be rendered.\n     * @example\n     * // Disable rendering of outliers\n     * chart.showOutliers(false);\n     * @method showOutliers\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Boolean} [show=true]\n     * @returns {Boolean|dc.boxPlot}\n     */\n    _chart.showOutliers = function (show) {\n        if (!arguments.length) {\n            return _showOutliers;\n        }\n        _showOutliers = show;\n        return _chart;\n    };\n\n    /**\n     * Get or set whether outliers will be drawn bold.\n     * @example\n     * // If outliers are rendered display as bold\n     * chart.boldOutlier(true);\n     * @method boldOutlier\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Boolean} [show=false]\n     * @returns {Boolean|dc.boxPlot}\n     */\n    _chart.boldOutlier = function (show) {\n        if (!arguments.length) {\n            return _boldOutlier;\n        }\n        _boldOutlier = show;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n\n/**\n * The select menu is a simple widget designed to filter a dimension by selecting an option from\n * an HTML `<select/>` menu. The menu can be optionally turned into a multiselect.\n * @class selectMenu\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a select menu under #select-container using the default global chart group\n * var select = dc.selectMenu('#select-container')\n *                .dimension(states)\n *                .group(stateGroup);\n * // the option text can be set via the title() function\n * // by default the option text is '`key`: `value`'\n * select.title(function (d){\n *     return 'STATE: ' + d.key;\n * })\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\n * Interaction with the widget will only trigger events and redraws within its group.\n * @returns {selectMenu}\n **/\ndc.selectMenu = function (parent, chartGroup) {\n    var SELECT_CSS_CLASS = 'dc-select-menu';\n    var OPTION_CSS_CLASS = 'dc-select-option';\n\n    var _chart = dc.baseMixin({});\n\n    var _select;\n    var _promptText = 'Select all';\n    var _multiple = false;\n    var _promptValue = null;\n    var _numberVisible = null;\n    var _order = function (a, b) {\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\n            -1 : 0;\n    };\n\n    var _filterDisplayed = function (d) {\n        return _chart.valueAccessor()(d) > 0;\n    };\n\n    _chart.data(function (group) {\n        return group.all().filter(_filterDisplayed);\n    });\n\n    _chart._doRender = function () {\n        _chart.select('select').remove();\n        _select = _chart.root().append('select')\n                        .classed(SELECT_CSS_CLASS, true);\n        _select.append('option').text(_promptText).attr('value', '');\n\n        _chart._doRedraw();\n        return _chart;\n    };\n    // Fixing IE 11 crash when redrawing the chart\n    // see here for list of IE user Agents :\n    // http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer\n    var ua = window.navigator.userAgent;\n    // test for IE 11 but not a lower version (which contains MSIE in UA)\n    if (ua.indexOf('Trident/') > 0 && ua.indexOf('MSIE') === -1) {\n        _chart.redraw = _chart.render;\n    }\n\n    _chart._doRedraw = function () {\n        setAttributes();\n        renderOptions();\n        // select the option(s) corresponding to current filter(s)\n        if (_chart.hasFilter() && _multiple) {\n            _select.selectAll('option')\n                .property('selected', function (d) {\n                    return typeof d !== 'undefined' && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0;\n                });\n        } else if (_chart.hasFilter()) {\n            _select.property('value', _chart.filter());\n        } else {\n            _select.property('value', '');\n        }\n        return _chart;\n    };\n\n    function renderOptions () {\n        var options = _select.selectAll('option.' + OPTION_CSS_CLASS)\n          .data(_chart.data(), function (d) { return _chart.keyAccessor()(d); });\n\n        options.exit().remove();\n\n        options.enter()\n              .append('option')\n              .classed(OPTION_CSS_CLASS, true)\n              .attr('value', function (d) { return _chart.keyAccessor()(d); })\n            .merge(options)\n              .text(_chart.title());\n\n        _select.selectAll('option.' + OPTION_CSS_CLASS).sort(_order);\n\n        _select.on('change', onChange);\n    }\n\n    function onChange (d, i) {\n        var values;\n        var target = d3.event.target;\n        if (target.selectedOptions) {\n            var selectedOptions = Array.prototype.slice.call(target.selectedOptions);\n            values = selectedOptions.map(function (d) {\n                return d.value;\n            });\n        } else { // IE and other browsers do not support selectedOptions\n            // adapted from this polyfill: https://gist.github.com/brettz9/4212217\n            var options = [].slice.call(d3.event.target.options);\n            values = options.filter(function (option) {\n                return option.selected;\n            }).map(function (option) {\n                return option.value;\n            });\n        }\n        // console.log(values);\n        // check if only prompt option is selected\n        if (values.length === 1 && values[0] === '') {\n            values = _promptValue || null;\n        } else if (!_multiple && values.length === 1) {\n            values = values[0];\n        }\n        _chart.onChange(values);\n    }\n\n    _chart.onChange = function (val) {\n        if (val && _multiple) {\n            _chart.replaceFilter([val]);\n        } else if (val) {\n            _chart.replaceFilter(val);\n        } else {\n            _chart.filterAll();\n        }\n        dc.events.trigger(function () {\n            _chart.redrawGroup();\n        });\n    };\n\n    function setAttributes () {\n        if (_multiple) {\n            _select.attr('multiple', true);\n        } else {\n            _select.attr('multiple', null);\n        }\n        if (_numberVisible !== null) {\n            _select.attr('size', _numberVisible);\n        } else {\n            _select.attr('size', null);\n        }\n    }\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * select menu. By default options are ordered by the group key in ascending\n     * order.\n     * @name order\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {Function} [order]\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     **/\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @name promptText\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {String} [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     **/\n    _chart.promptText = function (_) {\n        if (!arguments.length) {\n            return _promptText;\n        }\n        _promptText = _;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that filters option tags prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @name filterDisplayed\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {function} [filterDisplayed]\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     **/\n    _chart.filterDisplayed = function (filterDisplayed) {\n        if (!arguments.length) {\n            return _filterDisplayed;\n        }\n        _filterDisplayed = filterDisplayed;\n        return _chart;\n    };\n\n    /**\n     * Controls the type of select menu. Setting it to true converts the underlying\n     * HTML tag into a multiple select.\n     * @name multiple\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {boolean} [multiple=false]\n     * @example\n     * chart.multiple(true);\n     **/\n    _chart.multiple = function (multiple) {\n        if (!arguments.length) {\n            return _multiple;\n        }\n        _multiple = multiple;\n\n        return _chart;\n    };\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     * @name promptValue\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {?*} [promptValue=null]\n     **/\n    _chart.promptValue = function (promptValue) {\n        if (!arguments.length) {\n            return _promptValue;\n        }\n        _promptValue = promptValue;\n\n        return _chart;\n    };\n\n    /**\n     * Controls the number of items to show in the select menu, when `.multiple()` is true. This\n     * controls the [`size` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Attributes) of\n     * the `select` element. If `null` (the default), uses the browser's default height.\n     * @name numberItems\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {?number} [numberVisible=null]\n     * @example\n     * chart.numberVisible(10);\n     **/\n    _chart.numberVisible = function (numberVisible) {\n        if (!arguments.length) {\n            return _numberVisible;\n        }\n        _numberVisible = numberVisible;\n\n        return _chart;\n    };\n\n    _chart.size = dc.logger.deprecate(_chart.numberVisible, 'selectMenu.size is ambiguous - use numberVisible instead');\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Text Filter Widget\n *\n * The text filter widget is a simple widget designed to display an input field allowing to filter\n * data that matches the text typed.\n * As opposed to the other charts, this doesn't display any result and doesn't update its display,\n * it's just to input an filter other charts.\n *\n * @class textFilterWidget\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n *\n * var data = [{\"firstName\":\"John\",\"lastName\":\"Coltrane\"}{\"firstName\":\"Miles\",lastName:\"Davis\"}]\n * var ndx = crossfilter(data);\n * var dimension = ndx.dimension(function(d) {\n *     return d.lastName.toLowerCase() + ' ' + d.firstName.toLowerCase();\n * });\n *\n * dc.textFilterWidget('#search')\n *     .dimension(dimension);\n *     // you don't need the group() function\n *\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.textFilterWidget}\n **/\n\ndc.textFilterWidget = function (parent, chartGroup) {\n    var INPUT_CSS_CLASS = 'dc-text-filter-input';\n\n    var _chart = dc.baseMixin({});\n\n    var _normalize = function (s) {\n        return s.toLowerCase();\n    };\n\n    var _filterFunctionFactory = function (query) {\n        query = _normalize(query);\n        return function (d) {\n            return _normalize(d).indexOf(query) !== -1;\n        };\n    };\n\n    var _placeHolder = 'search';\n\n    _chart.group(function () {\n        throw 'the group function on textFilterWidget should never be called, please report the issue';\n    });\n\n    _chart._doRender = function () {\n        _chart.select('input').remove();\n\n        var _input = _chart.root().append('input')\n            .classed(INPUT_CSS_CLASS, true);\n\n        _input.on('input', function () {\n            _chart.dimension().filterFunction(_filterFunctionFactory(this.value));\n            dc.events.trigger(function () {\n                dc.redrawAll();\n            }, dc.constants.EVENT_DELAY);\n        });\n\n        _chart._doRedraw();\n\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        _chart.root().selectAll('input')\n            .attr('placeholder', _placeHolder);\n\n        return _chart;\n    };\n\n    /**\n     * This function will be called on values before calling the filter function.\n     * @name normalize\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * chart.normalize(function (s) {\n     *   return s.toLowerCase();\n     * });\n     * @param {function} [normalize]\n     * @returns {dc.textFilterWidget|function}\n     **/\n    _chart.normalize = function (normalize) {\n        if (!arguments.length) {\n            return _normalize;\n        }\n        _normalize = normalize;\n        return _chart;\n    };\n\n    /**\n     * Placeholder text in the search box.\n     * @name placeHolder\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * chart.placeHolder('type to filter');\n     * @param {function} [placeHolder='search']\n     * @returns {dc.textFilterWidget|string}\n     **/\n    _chart.placeHolder = function (placeHolder) {\n        if (!arguments.length) {\n            return _placeHolder;\n        }\n        _placeHolder = placeHolder;\n        return _chart;\n    };\n\n    /**\n     * This function will be called with the search text, it needs to return a function that will be used to\n     * filter the data. The default function checks presence of the search text.\n     * @name filterFunctionFactory\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * function (query) {\n     *     query = _normalize(query);\n     *     return function (d) {\n     *         return _normalize(d).indexOf(query) !== -1;\n     *     };\n     * };\n     * @param {function} [filterFunctionFactory]\n     * @returns {dc.textFilterWidget|function}\n     **/\n    _chart.filterFunctionFactory = function (filterFunctionFactory) {\n        if (!arguments.length) {\n            return _filterFunctionFactory;\n        }\n        _filterFunctionFactory = filterFunctionFactory;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The cboxMenu is a simple widget designed to filter a dimension by\n * selecting option(s) from a set of HTML `<input />` elements. The menu can be\n * made into a set of radio buttons (single select) or checkboxes (multiple).\n * @class cboxMenu\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a cboxMenu under #cbox-container using the default global chart group\n * var cbox = dc.cboxMenu('#cbox-container')\n *                .dimension(states)\n *                .group(stateGroup);\n * // the option text can be set via the title() function\n * // by default the option text is '`key`: `value`'\n * cbox.title(function (d){\n *     return 'STATE: ' + d.key;\n * })\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\n * Interaction with the widget will only trigger events and redraws within its group.\n * @returns {cboxMenu}\n **/\ndc.cboxMenu = function (parent, chartGroup) {\n    var GROUP_CSS_CLASS = 'dc-cbox-group';\n    var ITEM_CSS_CLASS = 'dc-cbox-item';\n\n    var _chart = dc.baseMixin({});\n\n    var _cbox;\n    var _promptText = 'Select all';\n    var _multiple = false;\n    var _inputType = 'radio';\n    var _promptValue = null;\n    // generate a random number to use as an ID\n    var _randVal = Math.floor(Math.random() * (100000)) + 1;\n    var _order = function (a, b) {\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\n            -1 : 0;\n    };\n\n    var _filterDisplayed = function (d) {\n        return _chart.valueAccessor()(d) > 0;\n    };\n\n    _chart.data(function (group) {\n        return group.all().filter(_filterDisplayed);\n    });\n\n    _chart._doRender = function () {\n        return _chart._doRedraw();\n    };\n    /*\n    // IS THIS NEEDED?\n    // Fixing IE 11 crash when redrawing the chart\n    // see here for list of IE user Agents :\n    // http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer\n    var ua = window.navigator.userAgent;\n    // test for IE 11 but not a lower version (which contains MSIE in UA)\n    if (ua.indexOf('Trident/') > 0 && ua.indexOf('MSIE') === -1) {\n        _chart.redraw = _chart.render;\n    }\n    */\n    _chart._doRedraw = function () {\n        _chart.select('ul').remove();\n        _cbox = _chart.root()\n            .append('ul')\n            .classed(GROUP_CSS_CLASS, true);\n        renderOptions();\n\n        if (_chart.hasFilter() && _multiple) {\n            _cbox.selectAll('input')\n                .property('checked', function (d) {\n                    // adding `false` avoids failing test cases in phantomjs\n                    return d && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0 || false;\n                });\n        } else if (_chart.hasFilter()) {\n            _cbox.selectAll('input')\n                .property('checked', function (d) {\n                    if (!d) {\n                        return false;\n                    }\n                    return _chart.keyAccessor()(d) === _chart.filter();\n                });\n        }\n        return _chart;\n    };\n\n    function renderOptions () {\n        var options = _cbox\n        .selectAll('li.' + ITEM_CSS_CLASS)\n            .data(_chart.data(), function (d) {\n            return _chart.keyAccessor()(d);\n        });\n\n        options.exit().remove();\n\n        options = options.enter()\n                .append('li')\n                .classed(ITEM_CSS_CLASS, true)\n            .merge(options);\n\n        options\n            .append('input')\n            .attr('type', _inputType)\n            .attr('value', function (d) { return _chart.keyAccessor()(d); })\n            .attr('name', 'domain_' + _randVal)\n            .attr('id', function (d, i) {\n                return 'input_' + _randVal + '_' + i;\n            });\n        options\n            .append('label')\n            .attr('for', function (d, i) {\n                return 'input_' + _randVal + '_' + i;\n            })\n            .text(_chart.title());\n\n        // 'all' option\n        if (_multiple) {\n            _cbox\n            .append('li')\n            .append('input')\n            .attr('type', 'reset')\n            .text(_promptText)\n            .on('click', onChange);\n        } else {\n            var li = _cbox.append('li');\n            li.append('input')\n                .attr('type', _inputType)\n                .attr('value', _promptValue)\n                .attr('name', 'domain_' + _randVal)\n                .attr('id', function (d, i) {\n                    return 'input_' + _randVal + '_all';\n                })\n                .property('checked', true);\n            li.append('label')\n                .attr('for', function (d, i) {\n                    return 'input_' + _randVal + '_all';\n                })\n                .text(_promptText);\n        }\n\n        _cbox\n            .selectAll('li.' + ITEM_CSS_CLASS)\n            .sort(_order);\n\n        _cbox.on('change', onChange);\n        return options;\n    }\n\n    function onChange (d, i) {\n        var values,\n            target = d3.select(d3.event.target),\n            options;\n\n        if (!target.datum()) {\n            values = _promptValue || null;\n        } else {\n            options = d3.select(this).selectAll('input')\n            .filter(function (o) {\n                if (o) {\n                    return this.checked;\n                }\n            });\n            values = options.nodes().map(function (option) {\n                return option.value;\n            });\n            // check if only prompt option is selected\n            if (!_multiple && values.length === 1) {\n                values = values[0];\n            }\n        }\n        _chart.onChange(values);\n    }\n\n    _chart.onChange = function (val) {\n        if (val && _multiple) {\n            _chart.replaceFilter([val]);\n        } else if (val) {\n            _chart.replaceFilter(val);\n        } else {\n            _chart.filterAll();\n        }\n        dc.events.trigger(function () {\n            _chart.redrawGroup();\n        });\n    };\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * cbox menu. By default options are ordered by the group key in ascending\n     * order.\n     * @name order\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {Function} [order]\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     **/\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @name promptText\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {String} [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     **/\n    _chart.promptText = function (_) {\n        if (!arguments.length) {\n            return _promptText;\n        }\n        _promptText = _;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that filters options prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @name filterDisplayed\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {function} [filterDisplayed]\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     **/\n    _chart.filterDisplayed = function (filterDisplayed) {\n        if (!arguments.length) {\n            return _filterDisplayed;\n        }\n        _filterDisplayed = filterDisplayed;\n        return _chart;\n    };\n\n    /**\n     * Controls the type of input element. Setting it to true converts\n     * the HTML `input` tags from radio buttons to checkboxes.\n     * @name multiple\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {boolean} [multiple=false]\n     * @example\n     * chart.multiple(true);\n     **/\n    _chart.multiple = function (multiple) {\n        if (!arguments.length) {\n            return _multiple;\n        }\n        _multiple = multiple;\n        if (_multiple) {\n            _inputType = 'checkbox';\n        } else {\n            _inputType = 'radio';\n        }\n        return _chart;\n    };\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     * @name promptValue\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {?*} [promptValue=null]\n     **/\n    _chart.promptValue = function (promptValue) {\n        if (!arguments.length) {\n            return _promptValue;\n        }\n        _promptValue = promptValue;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n// Renamed functions\n\ndc.abstractBubbleChart = dc.bubbleMixin;\ndc.baseChart = dc.baseMixin;\ndc.capped = dc.capMixin;\ndc.colorChart = dc.colorMixin;\ndc.coordinateGridChart = dc.coordinateGridMixin;\ndc.marginable = dc.marginMixin;\ndc.stackableChart = dc.stackMixin;\n\n// Expose d3 and crossfilter, so that clients in browserify\n// case can obtain them if they need them.\ndc.d3 = d3;\ndc.crossfilter = crossfilter;\n\nreturn dc;}\n    if(typeof define === \"function\" && define.amd) {\n        define([\"d3\", \"crossfilter2\"], _dc);\n    } else if(typeof module === \"object\" && module.exports) {\n        var _d3 = require('d3');\n        var _crossfilter = require('crossfilter2');\n        // When using npm + browserify, 'crossfilter' is a function,\n        // since package.json specifies index.js as main function, and it\n        // does special handling. When using bower + browserify,\n        // there's no main in bower.json (in fact, there's no bower.json),\n        // so we need to fix it.\n        if (typeof _crossfilter !== \"function\") {\n            _crossfilter = _crossfilter.crossfilter;\n        }\n        module.exports = _dc(_d3, _crossfilter);\n    } else {\n        this.dc = _dc(d3, crossfilter);\n    }\n}\n)();\n\n//# sourceMappingURL=dc.js.map","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n"]}