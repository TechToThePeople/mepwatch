{"version":3,"sources":["iframe-resizer/js/iframeResizer.js","../src/js/widget.js"],"names":["undefined","window","$","count","logEnabled","hiddenCheckEnabled","msgHeaderLen","length","msgId","msgIdLen","pagePosition","requestAnimationFrame","resetRequiredMethods","max","scroll","bodyScroll","documentElementScroll","settings","timer","defaults","autoResize","bodyBackground","bodyMargin","bodyMarginV1","bodyPadding","checkOrigin","inPageLinks","enablePublicMethods","heightCalculationMethod","id","interval","log","maxHeight","Infinity","maxWidth","minHeight","minWidth","resizeFrom","scrolling","sizeHeight","sizeWidth","warningTimeout","tolerance","widthCalculationMethod","closedCallback","initCallback","messageCallback","warn","resizedCallback","scrollCallback","frameTimer","jQuery","fn","iFrameResize","options","this","filter","each","index","element","setupIFrame","end","info","define","amd","factory","module","exports","getMutationObserver","MutationObserver","WebKitMutationObserver","MozMutationObserver","addEventListener","obj","evt","func","attachEvent","removeEventListener","el","detachEvent","formatLogHeader","iframeId","retStr","top","self","parentIFrame","getId","getMyID","isLogEnabled","msg","output","type","enabled","console","iFrameListener","event","resizeIFrame","ensureInRange","syncResize","setSize","messageData","setPagePosition","callback","Dimension","Number","min","dimension","toLowerCase","size","getMsgBody","offset","substr","indexOf","sendPageInfoToIframe","iframe","time","frameId","setTimeout","debounceFrameEvents","trigger","bodyPosition","document","body","getBoundingClientRect","iFramePosition","JSON","stringify","iframeHeight","height","iframeWidth","width","clientHeight","Math","documentElement","innerHeight","clientWidth","innerWidth","offsetTop","parseInt","offsetLeft","left","scrollTop","pageYOffset","scrollLeft","pageXOffset","getPageInfo","getElementPosition","target","getPagePosition","x","floor","y","scrollRequestFromChild","addOffset","newPosition","scrollTo","unsetPagePosition","funcName","val","chkCallback","retBool","retCode","data","createOutgoingMsg","getElementById","iFrameReadyMsgReceived","split","loaded","true","false","remoteHost","origin","constructor","Array","i","checkList","Error","isMessageFromIFrame","firstRun","closeRequestCallback","closeIFrame","msgBody","message","parse","forwardMsgFromIFrame","setListener","sendPageInfo","stop","forEach","stopPageInfo","startPageInfoMonitor","location","jumpPosition","hash","hashData","decodeURIComponent","getElementsByName","moveToAnchor","findTarget","resetIFrame","actionMsg","retVal","TypeError","removeIframeListeners","parentNode","removeChild","e","chkZero","checkIFrames","checkIFrame","settingId","chkDimension","style","offsetParent","mutationObserved","mutations","debouce","querySelector","observe","attributes","attributeOldValue","characterData","characterDataOldValue","childList","subtree","createMutationObserver","fixHiddenIFrames","processDimension","setDimension","doNotSync","calleeMsg","noResponseWarning","errorShown","contentWindow","targetOrigin","postMessage","msgTimeout","src","addStyle","chkMinMax","slice","join","checkOptions","option","hasOwnProperty","copyOptions","overflow","setScrolling","mutation","prototype","call","removedNodes","removedNode","resetRequertMethod","checkReset","Function","bind","iFrameResizer","close","removeListeners","resize","anchor","sendMessage","resizeIFrames","sendTriggerMsg","tabVisible","visibilityState","eventName","init","tagName","toUpperCase","chkType","iFrames","push","vendors","setupRequestAnimationFrame","warnDeprecatedOptions","querySelectorAll","String","startsWith","searchString","position","urlParam","name","results","RegExp","exec","href","decodeURI","targets","createElement","appendChild","createTextNode","head","className","vote","dataset","d","title"],"mappings":"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","file":"widget.js","sourcesContent":["/*\n * File: iframeResizer.js\n * Desc: Force iframes to size to content.\n * Requires: iframeResizer.contentWindow.js to be loaded into the target frame.\n * Doc: https://github.com/davidjbradshaw/iframe-resizer\n * Author: David J. Bradshaw - dave@bradshaw.net\n * Contributor: Jure Mav - jure.mav@gmail.com\n * Contributor: Reed Dadoune - reed@dadoune.com\n */\n\n(function(undefined) {\n  'use strict';\n\n  if (typeof window === 'undefined') return; // don't run for server side render\n\n  var count = 0,\n    logEnabled = false,\n    hiddenCheckEnabled = false,\n    msgHeader = 'message',\n    msgHeaderLen = msgHeader.length,\n    msgId = '[iFrameSizer]', //Must match iframe msg ID\n    msgIdLen = msgId.length,\n    pagePosition = null,\n    requestAnimationFrame = window.requestAnimationFrame,\n    resetRequiredMethods = {\n      max: 1,\n      scroll: 1,\n      bodyScroll: 1,\n      documentElementScroll: 1\n    },\n    settings = {},\n    timer = null,\n    logId = 'Host Page',\n    defaults = {\n      autoResize: true,\n      bodyBackground: null,\n      bodyMargin: null,\n      bodyMarginV1: 8,\n      bodyPadding: null,\n      checkOrigin: true,\n      inPageLinks: false,\n      enablePublicMethods: true,\n      heightCalculationMethod: 'bodyOffset',\n      id: 'iFrameResizer',\n      interval: 32,\n      log: false,\n      maxHeight: Infinity,\n      maxWidth: Infinity,\n      minHeight: 0,\n      minWidth: 0,\n      resizeFrom: 'parent',\n      scrolling: false,\n      sizeHeight: true,\n      sizeWidth: false,\n      warningTimeout: 5000,\n      tolerance: 0,\n      widthCalculationMethod: 'scroll',\n      closedCallback: function() {},\n      initCallback: function() {},\n      messageCallback: function() {\n        warn('MessageCallback function not defined');\n      },\n      resizedCallback: function() {},\n      scrollCallback: function() {\n        return true;\n      }\n    };\n\n  function getMutationObserver() {\n    return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n  }\n\n  function addEventListener(obj, evt, func) {\n    /* istanbul ignore else */ // Not testable in PhantonJS\n    if ('addEventListener' in window) {\n      obj.addEventListener(evt, func, false);\n    } else if ('attachEvent' in window) {\n      //IE\n      obj.attachEvent('on' + evt, func);\n    }\n  }\n\n  function removeEventListener(el, evt, func) {\n    /* istanbul ignore else */ // Not testable in phantonJS\n    if ('removeEventListener' in window) {\n      el.removeEventListener(evt, func, false);\n    } else if ('detachEvent' in window) {\n      //IE\n      el.detachEvent('on' + evt, func);\n    }\n  }\n\n  function setupRequestAnimationFrame() {\n    var vendors = ['moz', 'webkit', 'o', 'ms'],\n      x;\n\n    // Remove vendor prefixing if prefixed and break early if not\n    for (x = 0; x < vendors.length && !requestAnimationFrame; x += 1) {\n      requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    }\n\n    if (!requestAnimationFrame) {\n      log('setup', 'RequestAnimationFrame not supported');\n    }\n  }\n\n  function getMyID(iframeId) {\n    var retStr = 'Host page: ' + iframeId;\n\n    if (window.top !== window.self) {\n      if (window.parentIFrame && window.parentIFrame.getId) {\n        retStr = window.parentIFrame.getId() + ': ' + iframeId;\n      } else {\n        retStr = 'Nested host page: ' + iframeId;\n      }\n    }\n\n    return retStr;\n  }\n\n  function formatLogHeader(iframeId) {\n    return msgId + '[' + getMyID(iframeId) + ']';\n  }\n\n  function isLogEnabled(iframeId) {\n    return settings[iframeId] ? settings[iframeId].log : logEnabled;\n  }\n\n  function log(iframeId, msg) {\n    output('log', iframeId, msg, isLogEnabled(iframeId));\n  }\n\n  function info(iframeId, msg) {\n    output('info', iframeId, msg, isLogEnabled(iframeId));\n  }\n\n  function warn(iframeId, msg) {\n    output('warn', iframeId, msg, true);\n  }\n\n  function output(type, iframeId, msg, enabled) {\n    if (true === enabled && 'object' === typeof window.console) {\n      console[type](formatLogHeader(iframeId), msg);\n    }\n  }\n\n  function iFrameListener(event) {\n    function resizeIFrame() {\n      function resize() {\n        setSize(messageData);\n        setPagePosition(iframeId);\n        callback('resizedCallback', messageData);\n      }\n\n      ensureInRange('Height');\n      ensureInRange('Width');\n\n      syncResize(resize, messageData, 'init');\n    }\n\n    function processMsg() {\n      var data = msg.substr(msgIdLen).split(':');\n\n      return {\n        iframe: settings[data[0]] && settings[data[0]].iframe,\n        id: data[0],\n        height: data[1],\n        width: data[2],\n        type: data[3]\n      };\n    }\n\n    function ensureInRange(Dimension) {\n      var max = Number(settings[iframeId]['max' + Dimension]),\n        min = Number(settings[iframeId]['min' + Dimension]),\n        dimension = Dimension.toLowerCase(),\n        size = Number(messageData[dimension]);\n\n      log(\n        iframeId,\n        'Checking ' + dimension + ' is in range ' + min + '-' + max\n      );\n\n      if (size < min) {\n        size = min;\n        log(iframeId, 'Set ' + dimension + ' to min value');\n      }\n\n      if (size > max) {\n        size = max;\n        log(iframeId, 'Set ' + dimension + ' to max value');\n      }\n\n      messageData[dimension] = '' + size;\n    }\n\n    function isMessageFromIFrame() {\n      function checkAllowedOrigin() {\n        function checkList() {\n          var i = 0,\n            retCode = false;\n\n          log(\n            iframeId,\n            'Checking connection is from allowed list of origins: ' +\n              checkOrigin\n          );\n\n          for (; i < checkOrigin.length; i++) {\n            if (checkOrigin[i] === origin) {\n              retCode = true;\n              break;\n            }\n          }\n          return retCode;\n        }\n\n        function checkSingle() {\n          var remoteHost = settings[iframeId] && settings[iframeId].remoteHost;\n          log(iframeId, 'Checking connection is from: ' + remoteHost);\n          return origin === remoteHost;\n        }\n\n        return checkOrigin.constructor === Array ? checkList() : checkSingle();\n      }\n\n      var origin = event.origin,\n        checkOrigin = settings[iframeId] && settings[iframeId].checkOrigin;\n\n      if (checkOrigin && '' + origin !== 'null' && !checkAllowedOrigin()) {\n        throw new Error(\n          'Unexpected message received from: ' +\n            origin +\n            ' for ' +\n            messageData.iframe.id +\n            '. Message was: ' +\n            event.data +\n            '. This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.'\n        );\n      }\n\n      return true;\n    }\n\n    function isMessageForUs() {\n      return (\n        msgId === ('' + msg).substr(0, msgIdLen) &&\n        msg.substr(msgIdLen).split(':')[0] in settings\n      ); //''+Protects against non-string msg\n    }\n\n    function isMessageFromMetaParent() {\n      //Test if this message is from a parent above us. This is an ugly test, however, updating\n      //the message format would break backwards compatibity.\n      var retCode = messageData.type in { true: 1, false: 1, undefined: 1 };\n\n      if (retCode) {\n        log(iframeId, 'Ignoring init message from meta parent page');\n      }\n\n      return retCode;\n    }\n\n    function getMsgBody(offset) {\n      return msg.substr(msg.indexOf(':') + msgHeaderLen + offset);\n    }\n\n    function forwardMsgFromIFrame(msgBody) {\n      log(\n        iframeId,\n        'MessageCallback passed: {iframe: ' +\n          messageData.iframe.id +\n          ', message: ' +\n          msgBody +\n          '}'\n      );\n      callback('messageCallback', {\n        iframe: messageData.iframe,\n        message: JSON.parse(msgBody)\n      });\n      log(iframeId, '--');\n    }\n\n    function getPageInfo() {\n      var bodyPosition = document.body.getBoundingClientRect(),\n        iFramePosition = messageData.iframe.getBoundingClientRect();\n\n      return JSON.stringify({\n        iframeHeight: iFramePosition.height,\n        iframeWidth: iFramePosition.width,\n        clientHeight: Math.max(\n          document.documentElement.clientHeight,\n          window.innerHeight || 0\n        ),\n        clientWidth: Math.max(\n          document.documentElement.clientWidth,\n          window.innerWidth || 0\n        ),\n        offsetTop: parseInt(iFramePosition.top - bodyPosition.top, 10),\n        offsetLeft: parseInt(iFramePosition.left - bodyPosition.left, 10),\n        scrollTop: window.pageYOffset,\n        scrollLeft: window.pageXOffset\n      });\n    }\n\n    function sendPageInfoToIframe(iframe, iframeId) {\n      function debouncedTrigger() {\n        trigger(\n          'Send Page Info',\n          'pageInfo:' + getPageInfo(),\n          iframe,\n          iframeId\n        );\n      }\n      debounceFrameEvents(debouncedTrigger, 32, iframeId);\n    }\n\n    function startPageInfoMonitor() {\n      function setListener(type, func) {\n        function sendPageInfo() {\n          if (settings[id]) {\n            sendPageInfoToIframe(settings[id].iframe, id);\n          } else {\n            stop();\n          }\n        }\n\n        ['scroll', 'resize'].forEach(function(evt) {\n          log(id, type + evt + ' listener for sendPageInfo');\n          func(window, evt, sendPageInfo);\n        });\n      }\n\n      function stop() {\n        setListener('Remove ', removeEventListener);\n      }\n\n      function start() {\n        setListener('Add ', addEventListener);\n      }\n\n      var id = iframeId; //Create locally scoped copy of iFrame ID\n\n      start();\n\n      if (settings[id]) {\n        settings[id].stopPageInfo = stop;\n      }\n    }\n\n    function stopPageInfoMonitor() {\n      if (settings[iframeId] && settings[iframeId].stopPageInfo) {\n        settings[iframeId].stopPageInfo();\n        delete settings[iframeId].stopPageInfo;\n      }\n    }\n\n    function checkIFrameExists() {\n      var retBool = true;\n\n      if (null === messageData.iframe) {\n        warn(iframeId, 'IFrame (' + messageData.id + ') not found');\n        retBool = false;\n      }\n      return retBool;\n    }\n\n    function getElementPosition(target) {\n      var iFramePosition = target.getBoundingClientRect();\n\n      getPagePosition(iframeId);\n\n      return {\n        x: Math.floor(Number(iFramePosition.left) + Number(pagePosition.x)),\n        y: Math.floor(Number(iFramePosition.top) + Number(pagePosition.y))\n      };\n    }\n\n    function scrollRequestFromChild(addOffset) {\n      /* istanbul ignore next */ //Not testable in Karma\n      function reposition() {\n        pagePosition = newPosition;\n        scrollTo();\n        log(iframeId, '--');\n      }\n\n      function calcOffset() {\n        return {\n          x: Number(messageData.width) + offset.x,\n          y: Number(messageData.height) + offset.y\n        };\n      }\n\n      function scrollParent() {\n        if (window.parentIFrame) {\n          window.parentIFrame['scrollTo' + (addOffset ? 'Offset' : '')](\n            newPosition.x,\n            newPosition.y\n          );\n        } else {\n          warn(\n            iframeId,\n            'Unable to scroll to requested position, window.parentIFrame not found'\n          );\n        }\n      }\n\n      var offset = addOffset\n          ? getElementPosition(messageData.iframe)\n          : { x: 0, y: 0 },\n        newPosition = calcOffset();\n\n      log(\n        iframeId,\n        'Reposition requested from iFrame (offset x:' +\n          offset.x +\n          ' y:' +\n          offset.y +\n          ')'\n      );\n\n      if (window.top !== window.self) {\n        scrollParent();\n      } else {\n        reposition();\n      }\n    }\n\n    function scrollTo() {\n      if (false !== callback('scrollCallback', pagePosition)) {\n        setPagePosition(iframeId);\n      } else {\n        unsetPagePosition();\n      }\n    }\n\n    function findTarget(location) {\n      function jumpToTarget() {\n        var jumpPosition = getElementPosition(target);\n\n        log(\n          iframeId,\n          'Moving to in page link (#' +\n            hash +\n            ') at x: ' +\n            jumpPosition.x +\n            ' y: ' +\n            jumpPosition.y\n        );\n        pagePosition = {\n          x: jumpPosition.x,\n          y: jumpPosition.y\n        };\n\n        scrollTo();\n        log(iframeId, '--');\n      }\n\n      function jumpToParent() {\n        if (window.parentIFrame) {\n          window.parentIFrame.moveToAnchor(hash);\n        } else {\n          log(\n            iframeId,\n            'In page link #' +\n              hash +\n              ' not found and window.parentIFrame not found'\n          );\n        }\n      }\n\n      var hash = location.split('#')[1] || '',\n        hashData = decodeURIComponent(hash),\n        target =\n          document.getElementById(hashData) ||\n          document.getElementsByName(hashData)[0];\n\n      if (target) {\n        jumpToTarget();\n      } else if (window.top !== window.self) {\n        jumpToParent();\n      } else {\n        log(iframeId, 'In page link #' + hash + ' not found');\n      }\n    }\n\n    function callback(funcName, val) {\n      return chkCallback(iframeId, funcName, val);\n    }\n\n    function actionMsg() {\n      if (settings[iframeId] && settings[iframeId].firstRun) firstRun();\n\n      switch (messageData.type) {\n        case 'close':\n          if (settings[iframeId].closeRequestCallback)\n            chkCallback(\n              iframeId,\n              'closeRequestCallback',\n              settings[iframeId].iframe\n            );\n          else closeIFrame(messageData.iframe);\n          break;\n        case 'message':\n          forwardMsgFromIFrame(getMsgBody(6));\n          break;\n        case 'scrollTo':\n          scrollRequestFromChild(false);\n          break;\n        case 'scrollToOffset':\n          scrollRequestFromChild(true);\n          break;\n        case 'pageInfo':\n          sendPageInfoToIframe(\n            settings[iframeId] && settings[iframeId].iframe,\n            iframeId\n          );\n          startPageInfoMonitor();\n          break;\n        case 'pageInfoStop':\n          stopPageInfoMonitor();\n          break;\n        case 'inPageLink':\n          findTarget(getMsgBody(9));\n          break;\n        case 'reset':\n          resetIFrame(messageData);\n          break;\n        case 'init':\n          resizeIFrame();\n          callback('initCallback', messageData.iframe);\n          break;\n        default:\n          resizeIFrame();\n      }\n    }\n\n    function hasSettings(iframeId) {\n      var retBool = true;\n\n      if (!settings[iframeId]) {\n        retBool = false;\n        warn(\n          messageData.type +\n            ' No settings for ' +\n            iframeId +\n            '. Message was: ' +\n            msg\n        );\n      }\n\n      return retBool;\n    }\n\n    function iFrameReadyMsgReceived() {\n      for (var iframeId in settings) {\n        trigger(\n          'iFrame requested init',\n          createOutgoingMsg(iframeId),\n          document.getElementById(iframeId),\n          iframeId\n        );\n      }\n    }\n\n    function firstRun() {\n      if (settings[iframeId]) {\n        settings[iframeId].firstRun = false;\n      }\n    }\n\n    function clearWarningTimeout() {\n      if (settings[iframeId]) {\n        clearTimeout(settings[iframeId].msgTimeout);\n        settings[iframeId].warningTimeout = 0;\n      }\n    }\n\n    var msg = event.data,\n      messageData = {},\n      iframeId = null;\n\n    if ('[iFrameResizerChild]Ready' === msg) {\n      iFrameReadyMsgReceived();\n    } else if (isMessageForUs()) {\n      messageData = processMsg();\n      iframeId = logId = messageData.id;\n      if (settings[iframeId]) {\n        settings[iframeId].loaded = true;\n      }\n\n      if (!isMessageFromMetaParent() && hasSettings(iframeId)) {\n        log(iframeId, 'Received: ' + msg);\n\n        if (checkIFrameExists() && isMessageFromIFrame()) {\n          actionMsg();\n        }\n      }\n    } else {\n      info(iframeId, 'Ignored: ' + msg);\n    }\n  }\n\n  function chkCallback(iframeId, funcName, val) {\n    var func = null,\n      retVal = null;\n\n    if (settings[iframeId]) {\n      func = settings[iframeId][funcName];\n\n      if ('function' === typeof func) {\n        retVal = func(val);\n      } else {\n        throw new TypeError(\n          funcName + ' on iFrame[' + iframeId + '] is not a function'\n        );\n      }\n    }\n\n    return retVal;\n  }\n\n  function removeIframeListeners(iframe) {\n    var iframeId = iframe.id;\n    delete settings[iframeId];\n  }\n\n  function closeIFrame(iframe) {\n    var iframeId = iframe.id;\n    log(iframeId, 'Removing iFrame: ' + iframeId);\n\n    try {\n      // Catch race condition error with React\n      if (iframe.parentNode) {\n        iframe.parentNode.removeChild(iframe);\n      }\n    } catch (e) {}\n\n    chkCallback(iframeId, 'closedCallback', iframeId);\n    log(iframeId, '--');\n    removeIframeListeners(iframe);\n  }\n\n  function getPagePosition(iframeId) {\n    if (null === pagePosition) {\n      pagePosition = {\n        x:\n          window.pageXOffset !== undefined\n            ? window.pageXOffset\n            : document.documentElement.scrollLeft,\n        y:\n          window.pageYOffset !== undefined\n            ? window.pageYOffset\n            : document.documentElement.scrollTop\n      };\n      log(\n        iframeId,\n        'Get page position: ' + pagePosition.x + ',' + pagePosition.y\n      );\n    }\n  }\n\n  function setPagePosition(iframeId) {\n    if (null !== pagePosition) {\n      window.scrollTo(pagePosition.x, pagePosition.y);\n      log(\n        iframeId,\n        'Set page position: ' + pagePosition.x + ',' + pagePosition.y\n      );\n      unsetPagePosition();\n    }\n  }\n\n  function unsetPagePosition() {\n    pagePosition = null;\n  }\n\n  function resetIFrame(messageData) {\n    function reset() {\n      setSize(messageData);\n      trigger('reset', 'reset', messageData.iframe, messageData.id);\n    }\n\n    log(\n      messageData.id,\n      'Size reset requested by ' +\n        ('init' === messageData.type ? 'host page' : 'iFrame')\n    );\n    getPagePosition(messageData.id);\n    syncResize(reset, messageData, 'reset');\n  }\n\n  function setSize(messageData) {\n    function setDimension(dimension) {\n      if (!messageData.id) {\n        log('undefined', 'messageData id not set');\n        return;\n      }\n      messageData.iframe.style[dimension] = messageData[dimension] + 'px';\n      log(\n        messageData.id,\n        'IFrame (' +\n          iframeId +\n          ') ' +\n          dimension +\n          ' set to ' +\n          messageData[dimension] +\n          'px'\n      );\n    }\n\n    function chkZero(dimension) {\n      //FireFox sets dimension of hidden iFrames to zero.\n      //So if we detect that set up an event to check for\n      //when iFrame becomes visible.\n\n      /* istanbul ignore next */ //Not testable in PhantomJS\n      if (!hiddenCheckEnabled && '0' === messageData[dimension]) {\n        hiddenCheckEnabled = true;\n        log(iframeId, 'Hidden iFrame detected, creating visibility listener');\n        fixHiddenIFrames();\n      }\n    }\n\n    function processDimension(dimension) {\n      setDimension(dimension);\n      chkZero(dimension);\n    }\n\n    var iframeId = messageData.iframe.id;\n\n    if (settings[iframeId]) {\n      if (settings[iframeId].sizeHeight) {\n        processDimension('height');\n      }\n      if (settings[iframeId].sizeWidth) {\n        processDimension('width');\n      }\n    }\n  }\n\n  function syncResize(func, messageData, doNotSync) {\n    /* istanbul ignore if */ //Not testable in PhantomJS\n    if (doNotSync !== messageData.type && requestAnimationFrame) {\n      log(messageData.id, 'Requesting animation frame');\n      requestAnimationFrame(func);\n    } else {\n      func();\n    }\n  }\n\n  function trigger(calleeMsg, msg, iframe, id, noResponseWarning) {\n    function postMessageToIFrame() {\n      var target = settings[id] && settings[id].targetOrigin;\n      log(\n        id,\n        '[' +\n          calleeMsg +\n          '] Sending msg to iframe[' +\n          id +\n          '] (' +\n          msg +\n          ') targetOrigin: ' +\n          target\n      );\n      iframe.contentWindow.postMessage(msgId + msg, target);\n    }\n\n    function iFrameNotFound() {\n      warn(id, '[' + calleeMsg + '] IFrame(' + id + ') not found');\n    }\n\n    function chkAndSend() {\n      if (\n        iframe &&\n        'contentWindow' in iframe &&\n        null !== iframe.contentWindow\n      ) {\n        //Null test for PhantomJS\n        postMessageToIFrame();\n      } else {\n        iFrameNotFound();\n      }\n    }\n\n    function warnOnNoResponse() {\n      function warning() {\n        if (settings[id] && !settings[id].loaded && !errorShown) {\n          errorShown = true;\n          warn(\n            id,\n            'IFrame has not responded within ' +\n              settings[id].warningTimeout / 1000 +\n              ' seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ignored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.'\n          );\n        }\n      }\n\n      if (\n        !!noResponseWarning &&\n        settings[id] &&\n        !!settings[id].warningTimeout\n      ) {\n        settings[id].msgTimeout = setTimeout(\n          warning,\n          settings[id].warningTimeout\n        );\n      }\n    }\n\n    var errorShown = false;\n\n    id = id || iframe.id;\n\n    if (settings[id]) {\n      chkAndSend();\n      warnOnNoResponse();\n    }\n  }\n\n  function createOutgoingMsg(iframeId) {\n    return (\n      iframeId +\n      ':' +\n      settings[iframeId].bodyMarginV1 +\n      ':' +\n      settings[iframeId].sizeWidth +\n      ':' +\n      settings[iframeId].log +\n      ':' +\n      settings[iframeId].interval +\n      ':' +\n      settings[iframeId].enablePublicMethods +\n      ':' +\n      settings[iframeId].autoResize +\n      ':' +\n      settings[iframeId].bodyMargin +\n      ':' +\n      settings[iframeId].heightCalculationMethod +\n      ':' +\n      settings[iframeId].bodyBackground +\n      ':' +\n      settings[iframeId].bodyPadding +\n      ':' +\n      settings[iframeId].tolerance +\n      ':' +\n      settings[iframeId].inPageLinks +\n      ':' +\n      settings[iframeId].resizeFrom +\n      ':' +\n      settings[iframeId].widthCalculationMethod\n    );\n  }\n\n  function setupIFrame(iframe, options) {\n    function setLimits() {\n      function addStyle(style) {\n        if (\n          Infinity !== settings[iframeId][style] &&\n          0 !== settings[iframeId][style]\n        ) {\n          iframe.style[style] = settings[iframeId][style] + 'px';\n          log(\n            iframeId,\n            'Set ' + style + ' = ' + settings[iframeId][style] + 'px'\n          );\n        }\n      }\n\n      function chkMinMax(dimension) {\n        if (\n          settings[iframeId]['min' + dimension] >\n          settings[iframeId]['max' + dimension]\n        ) {\n          throw new Error(\n            'Value for min' +\n              dimension +\n              ' can not be greater than max' +\n              dimension\n          );\n        }\n      }\n\n      chkMinMax('Height');\n      chkMinMax('Width');\n\n      addStyle('maxHeight');\n      addStyle('minHeight');\n      addStyle('maxWidth');\n      addStyle('minWidth');\n    }\n\n    function newId() {\n      var id = (options && options.id) || defaults.id + count++;\n      if (null !== document.getElementById(id)) {\n        id = id + count++;\n      }\n      return id;\n    }\n\n    function ensureHasId(iframeId) {\n      logId = iframeId;\n      if ('' === iframeId) {\n        iframe.id = iframeId = newId();\n        logEnabled = (options || {}).log;\n        logId = iframeId;\n        log(\n          iframeId,\n          'Added missing iframe ID: ' + iframeId + ' (' + iframe.src + ')'\n        );\n      }\n\n      return iframeId;\n    }\n\n    function setScrolling() {\n      log(\n        iframeId,\n        'IFrame scrolling ' +\n          (settings[iframeId] && settings[iframeId].scrolling\n            ? 'enabled'\n            : 'disabled') +\n          ' for ' +\n          iframeId\n      );\n      iframe.style.overflow =\n        false === (settings[iframeId] && settings[iframeId].scrolling)\n          ? 'hidden'\n          : 'auto';\n      switch (settings[iframeId] && settings[iframeId].scrolling) {\n        case 'omit':\n          break;\n        case true:\n          iframe.scrolling = 'yes';\n          break;\n        case false:\n          iframe.scrolling = 'no';\n          break;\n        default:\n          iframe.scrolling = settings[iframeId]\n            ? settings[iframeId].scrolling\n            : 'no';\n      }\n    }\n\n    //The V1 iFrame script expects an int, where as in V2 expects a CSS\n    //string value such as '1px 3em', so if we have an int for V2, set V1=V2\n    //and then convert V2 to a string PX value.\n    function setupBodyMarginValues() {\n      if (\n        'number' ===\n          typeof (settings[iframeId] && settings[iframeId].bodyMargin) ||\n        '0' === (settings[iframeId] && settings[iframeId].bodyMargin)\n      ) {\n        settings[iframeId].bodyMarginV1 = settings[iframeId].bodyMargin;\n        settings[iframeId].bodyMargin =\n          '' + settings[iframeId].bodyMargin + 'px';\n      }\n    }\n\n    function checkReset() {\n      // Reduce scope of firstRun to function, because IE8's JS execution\n      // context stack is borked and this value gets externally\n      // changed midway through running this function!!!\n      var firstRun = settings[iframeId] && settings[iframeId].firstRun,\n        resetRequertMethod =\n          settings[iframeId] &&\n          settings[iframeId].heightCalculationMethod in resetRequiredMethods;\n\n      if (!firstRun && resetRequertMethod) {\n        resetIFrame({ iframe: iframe, height: 0, width: 0, type: 'init' });\n      }\n    }\n\n    function setupIFrameObject() {\n      if (Function.prototype.bind && settings[iframeId]) {\n        //Ignore unpolyfilled IE8.\n        settings[iframeId].iframe.iFrameResizer = {\n          close: closeIFrame.bind(null, settings[iframeId].iframe),\n\n          removeListeners: removeIframeListeners.bind(\n            null,\n            settings[iframeId].iframe\n          ),\n\n          resize: trigger.bind(\n            null,\n            'Window resize',\n            'resize',\n            settings[iframeId].iframe\n          ),\n\n          moveToAnchor: function(anchor) {\n            trigger(\n              'Move to anchor',\n              'moveToAnchor:' + anchor,\n              settings[iframeId].iframe,\n              iframeId\n            );\n          },\n\n          sendMessage: function(message) {\n            message = JSON.stringify(message);\n            trigger(\n              'Send Message',\n              'message:' + message,\n              settings[iframeId].iframe,\n              iframeId\n            );\n          }\n        };\n      }\n    }\n\n    //We have to call trigger twice, as we can not be sure if all\n    //iframes have completed loading when this code runs. The\n    //event listener also catches the page changing in the iFrame.\n    function init(msg) {\n      function iFrameLoaded() {\n        trigger('iFrame.onload', msg, iframe, undefined, true);\n        checkReset();\n      }\n\n      function createDestroyObserver(MutationObserver) {\n        if (!iframe.parentNode) {\n          return;\n        }\n\n        var destroyObserver = new MutationObserver(function (mutations) {\n          mutations.forEach(function (mutation) {\n            var removedNodes = Array.prototype.slice.call(mutation.removedNodes); // Transform NodeList into an Array\n            removedNodes.forEach(function (removedNode) {\n              if (removedNode === iframe) {\n                closeIFrame(iframe);\n              }\n            });\n          });\n        });\n        destroyObserver.observe(iframe.parentNode, {\n          childList: true\n        });\n      }\n\n      var MutationObserver = getMutationObserver();\n      if (MutationObserver) {\n        createDestroyObserver(MutationObserver);\n      }\n\n      addEventListener(iframe, 'load', iFrameLoaded);\n      trigger('init', msg, iframe, undefined, true);\n    }\n\n    function checkOptions(options) {\n      if ('object' !== typeof options) {\n        throw new TypeError('Options is not an object');\n      }\n    }\n\n    function copyOptions(options) {\n      for (var option in defaults) {\n        if (defaults.hasOwnProperty(option)) {\n          settings[iframeId][option] = options.hasOwnProperty(option)\n            ? options[option]\n            : defaults[option];\n        }\n      }\n    }\n\n    function getTargetOrigin(remoteHost) {\n      return '' === remoteHost || 'file://' === remoteHost ? '*' : remoteHost;\n    }\n\n    function processOptions(options) {\n      options = options || {};\n      settings[iframeId] = {\n        firstRun: true,\n        iframe: iframe,\n        remoteHost: iframe.src\n          .split('/')\n          .slice(0, 3)\n          .join('/')\n      };\n\n      checkOptions(options);\n      copyOptions(options);\n\n      if (settings[iframeId]) {\n        settings[iframeId].targetOrigin =\n          true === settings[iframeId].checkOrigin\n            ? getTargetOrigin(settings[iframeId].remoteHost)\n            : '*';\n      }\n    }\n\n    function beenHere() {\n      return iframeId in settings && 'iFrameResizer' in iframe;\n    }\n\n    var iframeId = ensureHasId(iframe.id);\n\n    if (!beenHere()) {\n      processOptions(options);\n      setScrolling();\n      setLimits();\n      setupBodyMarginValues();\n      init(createOutgoingMsg(iframeId));\n      setupIFrameObject();\n    } else {\n      warn(iframeId, 'Ignored iFrame, already setup.');\n    }\n  }\n\n  function debouce(fn, time) {\n    if (null === timer) {\n      timer = setTimeout(function() {\n        timer = null;\n        fn();\n      }, time);\n    }\n  }\n\n  var frameTimer = {};\n  function debounceFrameEvents(fn, time, frameId) {\n    if (!frameTimer[frameId]) {\n      frameTimer[frameId] = setTimeout(function() {\n        frameTimer[frameId] = null;\n        fn();\n      }, time);\n    }\n  } //Not testable in PhantomJS\n\n  /* istanbul ignore next */ function fixHiddenIFrames() {\n    function checkIFrames() {\n      function checkIFrame(settingId) {\n        function chkDimension(dimension) {\n          return (\n            '0px' ===\n            (settings[settingId] && settings[settingId].iframe.style[dimension])\n          );\n        }\n\n        function isVisible(el) {\n          return null !== el.offsetParent;\n        }\n\n        if (\n          settings[settingId] &&\n          isVisible(settings[settingId].iframe) &&\n          (chkDimension('height') || chkDimension('width'))\n        ) {\n          trigger(\n            'Visibility change',\n            'resize',\n            settings[settingId].iframe,\n            settingId\n          );\n        }\n      }\n\n      for (var settingId in settings) {\n        checkIFrame(settingId);\n      }\n    }\n\n    function mutationObserved(mutations) {\n      log(\n        'window',\n        'Mutation observed: ' + mutations[0].target + ' ' + mutations[0].type\n      );\n      debouce(checkIFrames, 16);\n    }\n\n    function createMutationObserver() {\n      var target = document.querySelector('body'),\n        config = {\n          attributes: true,\n          attributeOldValue: false,\n          characterData: true,\n          characterDataOldValue: false,\n          childList: true,\n          subtree: true\n        },\n        observer = new MutationObserver(mutationObserved);\n\n      observer.observe(target, config);\n    }\n\n    var MutationObserver = getMutationObserver();\n    if (MutationObserver) {\n      createMutationObserver();\n    }\n  }\n\n  function resizeIFrames(event) {\n    function resize() {\n      sendTriggerMsg('Window ' + event, 'resize');\n    }\n\n    log('window', 'Trigger event: ' + event);\n    debouce(resize, 16);\n  } //Not testable in PhantomJS\n\n  /* istanbul ignore next */ function tabVisible() {\n    function resize() {\n      sendTriggerMsg('Tab Visable', 'resize');\n    }\n\n    if ('hidden' !== document.visibilityState) {\n      log('document', 'Trigger event: Visiblity change');\n      debouce(resize, 16);\n    }\n  }\n\n  function sendTriggerMsg(eventName, event) {\n    function isIFrameResizeEnabled(iframeId) {\n      return (\n        settings[iframeId] &&\n        'parent' === settings[iframeId].resizeFrom &&\n        settings[iframeId].autoResize &&\n        !settings[iframeId].firstRun\n      );\n    }\n\n    for (var iframeId in settings) {\n      if (isIFrameResizeEnabled(iframeId)) {\n        trigger(eventName, event, document.getElementById(iframeId), iframeId);\n      }\n    }\n  }\n\n  function setupEventListeners() {\n    addEventListener(window, 'message', iFrameListener);\n\n    addEventListener(window, 'resize', function() {\n      resizeIFrames('resize');\n    });\n\n    addEventListener(document, 'visibilitychange', tabVisible);\n    addEventListener(document, '-webkit-visibilitychange', tabVisible); //Andriod 4.4\n    addEventListener(window, 'focusin', function() {\n      resizeIFrames('focus');\n    }); //IE8-9\n    addEventListener(window, 'focus', function() {\n      resizeIFrames('focus');\n    });\n  }\n\n  function factory() {\n    function init(options, element) {\n      function chkType() {\n        if (!element.tagName) {\n          throw new TypeError('Object is not a valid DOM element');\n        } else if ('IFRAME' !== element.tagName.toUpperCase()) {\n          throw new TypeError(\n            'Expected <IFRAME> tag, found <' + element.tagName + '>'\n          );\n        }\n      }\n\n      if (element) {\n        chkType();\n        setupIFrame(element, options);\n        iFrames.push(element);\n      }\n    }\n\n    function warnDeprecatedOptions(options) {\n      if (options && options.enablePublicMethods) {\n        warn(\n          'enablePublicMethods option has been removed, public methods are now always available in the iFrame'\n        );\n      }\n    }\n\n    var iFrames;\n\n    setupRequestAnimationFrame();\n    setupEventListeners();\n\n    return function iFrameResizeF(options, target) {\n      iFrames = []; //Only return iFrames past in on this call\n\n      warnDeprecatedOptions(options);\n\n      switch (typeof target) {\n        case 'undefined':\n        case 'string':\n          Array.prototype.forEach.call(\n            document.querySelectorAll(target || 'iframe'),\n            init.bind(undefined, options)\n          );\n          break;\n        case 'object':\n          init(options, target);\n          break;\n        default:\n          throw new TypeError('Unexpected data type (' + typeof target + ')');\n      }\n\n      return iFrames;\n    };\n  }\n\n  function createJQueryPublicMethod($) {\n    if (!$.fn) {\n      info('', 'Unable to bind to jQuery, it is not fully loaded.');\n    } else if (!$.fn.iFrameResize) {\n      $.fn.iFrameResize = function $iFrameResizeF(options) {\n        function init(index, element) {\n          setupIFrame(element, options);\n        }\n\n        return this.filter('iframe')\n          .each(init)\n          .end();\n      };\n    }\n  }\n\n  if (window.jQuery) {\n    createJQueryPublicMethod(window.jQuery);\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    //Node for browserfy\n    module.exports = factory();\n  }\n  window.iFrameResize = window.iFrameResize || factory();\n})();\n","'use strict';\n\nif (!String.prototype.startsWith) {\n  String.prototype.startsWith = function(searchString, position){\n    position = position || 0;\n    return this.substr(position, searchString.length) === searchString;\n  };\n}\n\n\n(function(){\n  var urlParam = function(name){\n    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n    if (results==null){\n      return null;\n    }\n    else{\n      return decodeURI(results[1]) || 0;\n    }\n  };\n\n\n  var defaults = {\n    url: \"https://mepwatch.eu/\",\n    cssClass: \"mepwatch\",\n    params: \"v,action\".split(\",\")\n  };\n\n  var style = function (){\n    var style   = document.createElement(\"style\");\n    style.type = 'text/css';\n    style.id = 'mepwatch-style';\n    style.appendChild(document.createTextNode(\".mepwatch-act iframe {width:100%;min-width:100%;border:0px;overflow:hidden;}\"));\n    style.appendChild(document.createTextNode(\".mepwatch-graph iframe {width:100%;min-width:1000px;border:0px;overflow:hidden;}\"));\n    document.head.appendChild(style);\n  }\n\n  var iframe = function () {\n    var target = document.querySelector(\".mepwatch-act\");\n    if (!target) return;\n    var iframe = document.createElement('iframe');\n    iframe.className = 'mepwatch-iframe';\n    var vote=target.dataset.vote || urlParam(\"v\");\n    iframe.src = defaults.url + 'widget-act.html?v='+vote;\n    iframe.scrolling= 'no';\n    target.appendChild(iframe);\n\n  }\n\n  var iframeGraph = function () {\n    var targets = document.querySelectorAll(\".mepwatch-graph\");\n    if (targets.length == 0) return;\n    targets.forEach(function(target){\n      var iframe = document.createElement('iframe');\n      iframe.className = 'mepwatch-iframe';\n      iframe.scrolling= 'no';\n      var vote=target.dataset.vote || urlParam(\"v\");\n      iframe.src = defaults.url + 'embed.html?v='+vote;\n      target.appendChild(iframe);\n    });\n\n  }\n\n\n  var iframeresizer = function(){\n\n    iFrameResize({\n      log:false,\n      checkOrigin:false,\n      minHeight:500,\n      //heightCalculationMethod:'documentElementOffset',\n      //heightCalculationMethod:'taggedElement',\n      messageCallback : function(d){\n        if (d.message.name) {\n          document.title=d.message.name;\n        }\n      }\n    });\n  };\n\n  var urlParams = function(opts) {\n    opts.params.forEach(function(e){\n      if (urlParam(e))\n        opts[e] = $.urlParam(e);\n    });\n  };\n\n  style();\n  iframe();\n  iframeGraph();\n  iframeresizer();\n})();\n"]}