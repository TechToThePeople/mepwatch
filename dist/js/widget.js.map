{"version":3,"sources":["iframe-resizer/js/iframeResizer.js","../src/js/widget.js"],"names":["undefined","window","$","count","logEnabled","hiddenCheckEnabled","msgHeaderLen","length","msgId","msgIdLen","pagePosition","requestAnimationFrame","resetRequiredMethods","max","scroll","bodyScroll","documentElementScroll","settings","timer","defaults","autoResize","bodyBackground","bodyMargin","bodyMarginV1","bodyPadding","checkOrigin","inPageLinks","enablePublicMethods","heightCalculationMethod","id","interval","log","maxHeight","Infinity","maxWidth","minHeight","minWidth","resizeFrom","scrolling","sizeHeight","sizeWidth","warningTimeout","tolerance","widthCalculationMethod","closedCallback","initCallback","messageCallback","warn","resizedCallback","scrollCallback","frameTimer","jQuery","fn","iFrameResize","options","this","filter","each","index","element","setupIFrame","end","info","define","amd","factory","module","exports","addEventListener","obj","evt","func","attachEvent","removeEventListener","el","detachEvent","formatLogHeader","iframeId","retStr","top","self","parentIFrame","getId","isLogEnabled","msg","output","type","enabled","console","iFrameListener","event","resizeIFrame","ensureInRange","syncResize","setSize","messageData","setPagePosition","callback","Dimension","Number","min","dimension","toLowerCase","size","getMsgBody","offset","substr","indexOf","sendPageInfoToIframe","iframe","time","frameId","bodyPosition","iFramePosition","trigger","document","body","getBoundingClientRect","JSON","stringify","iframeHeight","height","iframeWidth","width","clientHeight","Math","documentElement","innerHeight","clientWidth","innerWidth","offsetTop","parseInt","offsetLeft","left","scrollTop","pageYOffset","scrollLeft","pageXOffset","setTimeout","getElementPosition","target","getPagePosition","x","floor","y","scrollRequestFromChild","addOffset","newPosition","scrollTo","unsetPagePosition","funcName","val","chkCallback","retBool","retCode","data","createOutgoingMsg","getElementById","iFrameReadyMsgReceived","split","loaded","true","false","remoteHost","origin","constructor","Array","i","checkList","Error","isMessageFromIFrame","firstRun","closeRequestCallback","closeIFrame","msgBody","message","parse","setListener","sendPageInfo","stop","forEach","stopPageInfo","startPageInfoMonitor","location","hash","hashData","decodeURIComponent","getElementsByName","jumpPosition","moveToAnchor","resetIFrame","actionMsg","retVal","TypeError","removeIframeListeners","parentNode","removeChild","e","chkZero","checkIFrames","checkIFrame","settingId","chkDimension","style","offsetParent","mutationObserved","mutations","debouce","MutationObserver","WebKitMutationObserver","querySelector","config","attributes","attributeOldValue","characterData","characterDataOldValue","childList","subtree","observe","fixHiddenIFrames","processDimension","doNotSync","calleeMsg","noResponseWarning","errorShown","contentWindow","targetOrigin","postMessage","msgTimeout","src","slice","join","checkOptions","option","hasOwnProperty","copyOptions","overflow","setScrolling","addStyle","chkMinMax","setLimits","resetRequertMethod","Function","prototype","bind","iFrameResizer","close","removeListeners","resize","anchor","sendMessage","resizeIFrames","sendTriggerMsg","tabVisible","visibilityState","eventName","init","tagName","toUpperCase","chkType","iFrames","push","vendors","setupRequestAnimationFrame","call","querySelectorAll","String","startsWith","searchString","position","targets","urlParam","name","results","RegExp","exec","href","decodeURI","createElement","appendChild","createTextNode","head","className","vote","dataset","d","title"],"mappings":"CAWA,SAAAA,GACA,aAEA,GAAA,oBAAAC,OAAA,CAEA,IAghCAC,EA/gCAC,EAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,EADA,UACAC,OACAC,EAAA,gBACAC,EAAAD,EAAAD,OACAG,EAAA,KACAC,EAAAV,OAAAU,sBACAC,EAAA,CAAAC,IAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,sBAAA,GACAC,EAAA,GACAC,EAAA,KAGAC,EAAA,CACAC,YAAA,EACAC,eAAA,KACAC,WAAA,KACAC,aAAA,EACAC,YAAA,KACAC,aAAA,EACAC,aAAA,EACAC,qBAAA,EACAC,wBAAA,aACAC,GAAA,gBACAC,SAAA,GACAC,KAAA,EACAC,UAAAC,EAAAA,EACAC,SAAAD,EAAAA,EACAE,UAAA,EACAC,SAAA,EACAC,WAAA,SACAC,WAAA,EACAC,YAAA,EACAC,WAAA,EACAC,eAAA,IACAC,UAAA,EACAC,uBAAA,SACAC,eAAA,aACAC,aAAA,aACAC,gBAAA,WAAAC,EAAA,yCACAC,gBAAA,aACAC,eAAA,WAAA,OAAA,IAo0BAC,EAAA,GA+KAjD,OAAAkD,UAdAjD,EAcAD,OAAAkD,QAbAC,GAEAlD,EAAAkD,GAAAC,eACAnD,EAAAkD,GAAAC,aAAA,SAAAC,GAKA,OAAAC,KAAAC,OAAA,UAAAC,KAJA,SAAAC,EAAAC,GACAC,EAAAD,EAAAL,KAGAO,QAPAC,EAAA,GAAA,sDAcA,mBAAAC,QAAAA,OAAAC,IACAD,OAAA,GAAAE,GACA,iBAAAC,QAAA,iBAAAA,OAAAC,QACAD,OAAAC,QAAAF,IAEAhE,OAAAoD,aAAApD,OAAAoD,cAAAY,IAv/BA,SAAAG,EAAAC,EAAAC,EAAAC,GAEA,qBAAAtE,OACAoE,EAAAD,iBAAAE,EAAAC,GAAA,GACA,gBAAAtE,QACAoE,EAAAG,YAAA,KAAAF,EAAAC,GAIA,SAAAE,EAAAC,EAAAJ,EAAAC,GAEA,wBAAAtE,OACAyE,EAAAD,oBAAAH,EAAAC,GAAA,GACA,gBAAAtE,QACAyE,EAAAC,YAAA,KAAAL,EAAAC,GAiCA,SAAAK,EAAAC,GACA,OAAArE,EAAA,KAdAsE,EAAA,eADAD,EAeAA,GAZA5E,OAAA8E,MAAA9E,OAAA+E,OAEAF,EADA7E,OAAAgF,cAAAhF,OAAAgF,aAAAC,MACAjF,OAAAgF,aAAAC,QAAA,KAAAL,EAEA,qBAAAA,GAIAC,GAIA,IAfA,IAAAD,EACAC,EAiBA,SAAAK,EAAAN,GACA,OAAA5D,EAAA4D,GAAA5D,EAAA4D,GAAA9C,IAAA3B,EAGA,SAAA2B,EAAA8C,EAAAO,GACAC,EAAA,MAAAR,EAAAO,EAAAD,EAAAN,IAGA,SAAAf,EAAAe,EAAAO,GACAC,EAAA,OAAAR,EAAAO,EAAAD,EAAAN,IAGA,SAAA9B,EAAA8B,EAAAO,GACAC,EAAA,OAAAR,EAAAO,GAAA,GAGA,SAAAC,EAAAC,EAAAT,EAAAO,EAAAG,IACA,IAAAA,GAAA,iBAAAtF,OAAAuF,SACAA,QAAAF,GAAAV,EAAAC,GAAAO,GAIA,SAAAK,EAAAC,GACA,SAAAC,IAOAC,EAAA,UACAA,EAAA,SAEAC,EATA,WACAC,EAAAC,GACAC,EAAAnB,GACAoB,EAAA,kBAAAF,IAMAA,EAAA,QAeA,SAAAH,EAAAM,GACA,IACArF,EAAAsF,OAAAlF,EAAA4D,GAAA,MAAAqB,IACAE,EAAAD,OAAAlF,EAAA4D,GAAA,MAAAqB,IACAG,EAAAH,EAAAI,cACAC,EAAAJ,OAAAJ,EAAAM,IAEAtE,EAAA8C,EAAA,YAAAwB,EAAA,gBAAAD,EAAA,IAAAvF,GAEA0F,EAAAH,IACAG,EAAAH,EACArE,EAAA8C,EAAA,OAAAwB,EAAA,kBAGAxF,EAAA0F,IACAA,EAAA1F,EACAkB,EAAA8C,EAAA,OAAAwB,EAAA,kBAGAN,EAAAM,GAAA,GAAAE,EA+DA,SAAAC,EAAAC,GACA,OAAArB,EAAAsB,OAAAtB,EAAAuB,QAAA,KAAArG,EAAAmG,GA6BA,SAAAG,EAAAC,EAAAhC,GA+mBA,IAAAzB,EAAA0D,EAAAC,EAAA3D,EA9mBA,WAlBA,IAEA4D,EACAC,EAgBAC,EACA,iBACA,aAnBAF,EAAAG,SAAAC,KAAAC,wBACAJ,EAAAlB,EAAAc,OAAAQ,wBAEAC,KAAAC,UAAA,CACAC,aAAAP,EAAAQ,OACAC,YAAAT,EAAAU,MACAC,aAAAC,KAAAhH,IAAAsG,SAAAW,gBAAAF,aAAA3H,OAAA8H,aAAA,GACAC,YAAAH,KAAAhH,IAAAsG,SAAAW,gBAAAE,YAAA/H,OAAAgI,YAAA,GACAC,UAAAC,SAAAlB,EAAAlC,IAAAiC,EAAAjC,IAAA,IACAqD,WAAAD,SAAAlB,EAAAoB,KAAArB,EAAAqB,KAAA,IACAC,UAAArI,OAAAsI,YACAC,WAAAvI,OAAAwI,eASA5B,EACAhC,IAymBAiC,EAtmBA,GAumBA5D,EADA6D,EAtmBAlC,KAwmBA3B,EAAA6D,GAAA2B,WAAA,WACAxF,EAAA6D,GAAA,KACA3D,KACA0D,IArjBA,SAAA6B,EAAAC,GACA,IAAA3B,EAAA2B,EAAAvB,wBAIA,OAFAwB,EAAAhE,GAEA,CACAiE,EAAAjB,KAAAkB,MAAA5C,OAAAc,EAAAoB,MAAAlC,OAAAzF,EAAAoI,IACAE,EAAAnB,KAAAkB,MAAA5C,OAAAc,EAAAlC,KAAAoB,OAAAzF,EAAAsI,KAIA,SAAAC,EAAAC,GAuBA,IACAzC,EAAAyC,EAAAP,EAAA5C,EAAAc,QAAA,CAAAiC,EAAA,EAAAE,EAAA,GACAG,EAhBA,CACAL,EAAA3C,OAAAJ,EAAA4B,OAAAlB,EAAAqC,EACAE,EAAA7C,OAAAJ,EAAA0B,QAAAhB,EAAAuC,GAgBAjH,EAAA8C,EAAA,8CAAA4B,EAAAqC,EAAA,MAAArC,EAAAuC,EAAA,KAEA/I,OAAA8E,MAAA9E,OAAA+E,KAbA/E,OAAAgF,aACAhF,OAAAgF,aAAA,YAAAiE,EAAA,SAAA,KAAAC,EAAAL,EAAAK,EAAAH,GAEAjG,EAAA8B,EAAA,0EAhBAnE,EAAAyI,EACAC,IACArH,EAAA8C,EAAA,OA+BA,SAAAuE,KACA,IAAAnD,EAAA,iBAAAvF,GACAsF,EAAAnB,GAEAwE,IAwCA,SAAApD,EAAAqD,EAAAC,GACA,OAAAC,EAAA3E,EAAAyE,EAAAC,GAyEA,IA9KAE,EAgJA5E,EACA4E,EA9OAC,EApFAC,EAgWAvE,EAAAM,EAAAiE,KACA5D,EAAA,GACAlB,EAAA,KAEA,8BAAAO,EAxBA,WACA,IAAA,IAAAP,KAAA5D,EACAiG,EAAA,wBAAA0C,EAAA/E,GAAAsC,SAAA0C,eAAAhF,GAAAA,GAuBAiF,GAvRAtJ,KAAA,GAAA4E,GAAAsB,OAAA,EAAAjG,IAAA2E,EAAAsB,OAAAjG,GAAAsJ,MAAA,KAAA,KAAA9I,GA9EA0I,EAAAvE,EAAAsB,OAAAjG,GAAAsJ,MAAA,KAuWAhE,EArWA,CACAc,OAAA5F,EAAA0I,EAAA,KAAA1I,EAAA0I,EAAA,IAAA9C,OACAhF,GAAA8H,EAAA,GACAlC,OAAAkC,EAAA,GACAhC,MAAAgC,EAAA,GACArE,KAAAqE,EAAA,IAiWA9E,EAAAkB,EAAAlE,GACAZ,EAAA4D,KACA5D,EAAA4D,GAAAmF,QAAA,IAtRAN,EAAA3D,EAAAT,OAAA,CAAA2E,KAAA,EAAAC,MAAA,EAAAlK,UAAA,KAGA+B,EAAA8C,EAAA,gDAGA6E,IAwOAD,GAAA,EAEAxI,EAHA4D,EA4CAA,KAxCA4E,GAAA,EACA1G,EAAAgD,EAAAT,KAAA,oBAAAT,EAAA,kBAAAO,IAGAqE,KAqCA1H,EAAA8C,EAAA,aAAAO,GA7LAqE,GAAA,EAEA,OAAA1D,EAAAc,SACA9D,EAAA8B,EAAA,WAAAkB,EAAAlE,GAAA,eACA4H,GAAA,GAEAA,GArJA,WA2BA,IARAU,EASAC,EAAA1E,EAAA0E,OACA3I,EAAAR,EAAA4D,IAAA5D,EAAA4D,GAAApD,YAEA,GAAAA,GAAA,GAAA2I,GAAA,UAPA3I,EAAA4I,cAAAC,MAtBA,WACA,IACAC,EAAA,EACAb,GAAA,EAIA,IAFA3H,EAAA8C,EAAA,wDAAApD,GAEA8I,EAAA9I,EAAAlB,OAAAgK,IACA,GAAA9I,EAAA8I,KAAAH,EAAA,CACAV,GAAA,EACA,MAGA,OAAAA,EASAc,IALAL,EAAAlJ,EAAA4D,IAAA5D,EAAA4D,GAAAsF,WACApI,EAAA8C,EAAA,gCAAAsF,GACAC,IAAAD,IAWA,MAAA,IAAAM,MACA,qCAAAL,EACA,QAAArE,EAAAc,OAAAhF,GACA,kBAAA6D,EAAAiE,KACA,sHAIA,OAAA,EAsSAe,IAvFA,WAIA,OAFAzJ,EAAA4D,IAAA5D,EAAA4D,GAAA8F,UAwDA1J,EAAA4D,KACA5D,EAAA4D,GAAA8F,UAAA,GAvDA5E,EAAAT,MACA,IAAA,QACArE,EAAA4D,GAAA+F,qBAAApB,EAAA3E,EAAA,uBAAA5D,EAAA4D,GAAAgC,QACAgE,EAAA9E,EAAAc,QACA,MACA,IAAA,UAjMAiE,EAkMAtE,EAAA,GAjMAzE,EAAA8C,EAAA,oCAAAkB,EAAAc,OAAAhF,GAAA,cAAAiJ,EAAA,KACA7E,EAAA,kBAAA,CACAY,OAAAd,EAAAc,OACAkE,QAAAzD,KAAA0D,MAAAF,KAEA/I,EAAA8C,EAAA,MA6LA,MACA,IAAA,WACAoE,GAAA,GACA,MACA,IAAA,iBACAA,GAAA,GACA,MACA,IAAA,WACArC,EAAA3F,EAAA4D,IAAA5D,EAAA4D,GAAAgC,OAAAhC,GApKA,WACA,SAAAoG,EAAA3F,EAAAf,GACA,SAAA2G,IACAjK,EAAAY,GACA+E,EAAA3F,EAAAY,GAAAgF,OAAAhF,GAEAsJ,IAIA,CAAA,SAAA,UAAAC,QAAA,SAAA9G,GACAvC,EAAAF,EAAAyD,EAAAhB,EAAA,8BACAC,EAAAtE,OAAAqE,EAAA4G,KAIA,SAAAC,IACAF,EAAA,UAAAxG,GAOA,IAAA5C,EAAAgD,EAHAoG,EAAA,OAAA7G,GAOAnD,EAAAY,KACAZ,EAAAY,GAAAwJ,aAAAF,GAwIAG,GACA,MACA,IAAA,eArIArK,EAAA4D,IAAA5D,EAAA4D,GAAAwG,eACApK,EAAA4D,GAAAwG,sBACApK,EAAA4D,GAAAwG,cAqIA,MACA,IAAA,aAjEAE,EAkEA/E,EAAA,GA3CAgF,EAAAD,EAAAxB,MAAA,KAAA,IAAA,GACA0B,EAAAC,mBAAAF,IACA5C,EAAAzB,SAAA0C,eAAA4B,IAAAtE,SAAAwE,kBAAAF,GAAA,KAvBAG,EAAAjD,EAAAC,GAEA7G,EAAA8C,EAAA,4BAAA2G,EAAA,WAAAI,EAAA9C,EAAA,OAAA8C,EAAA5C,GACAtI,EAAA,CACAoI,EAAA8C,EAAA9C,EACAE,EAAA4C,EAAA5C,GAGAI,IACArH,EAAA8C,EAAA,OAkBA5E,OAAA8E,MAAA9E,OAAA+E,KAdA/E,OAAAgF,aACAhF,OAAAgF,aAAA4G,aAAAL,GAEAzJ,EAAA8C,EAAA,iBAAA2G,EAAA,gDAcAzJ,EAAA8C,EAAA,iBAAA2G,EAAA,cAmCA,MACA,IAAA,QACAM,EAAA/F,GACA,MACA,IAAA,OACAJ,IACAM,EAAA,eAAAF,EAAAc,QACA,MACA,QACAlB,IA5EA,IAAA4F,EAEAK,EAqBAJ,EACAC,EACA7C,EAzKAkC,EAgRAiB,KAIAjI,EAAAe,EAAA,YAAAO,GAMA,SAAAoE,EAAA3E,EAAAyE,EAAAC,GACA,IACAhF,EAAA,KACAyH,EAAA,KAEA,GAAA/K,EAAA4D,GAAA,CAGA,GAAA,mBAFAN,EAAAtD,EAAA4D,GAAAyE,IAKA,MAAA,IAAA2C,UAAA3C,EAAA,cAAAzE,EAAA,uBAFAmH,EAAAzH,EAAAgF,GAMA,OAAAyC,EAGA,SAAAE,EAAArF,GACA,IAAAhC,EAAAgC,EAAAhF,UACAZ,EAAA4D,GAGA,SAAAgG,EAAAhE,GACA,IAAAhC,EAAAgC,EAAAhF,GACAE,EAAA8C,EAAA,oBAAAA,GAEA,IAEAgC,EAAAsF,YAAAtF,EAAAsF,WAAAC,YAAAvF,GACA,MAAAwF,IAEA7C,EAAA3E,EAAA,iBAAAA,GACA9C,EAAA8C,EAAA,MACAqH,EAAArF,GAGA,SAAAgC,EAAAhE,GACA,OAAAnE,GAKAqB,EAAA8C,EAAA,uBAJAnE,EAAA,CACAoI,EAAA7I,OAAAwI,cAAAzI,EAAAC,OAAAwI,YAAAtB,SAAAW,gBAAAU,WACAQ,EAAA/I,OAAAsI,cAAAvI,EAAAC,OAAAsI,YAAApB,SAAAW,gBAAAQ,YAEAQ,EAAA,IAAApI,EAAAsI,GAIA,SAAAhD,EAAAnB,GACA,OAAAnE,IACAT,OAAAmJ,SAAA1I,EAAAoI,EAAApI,EAAAsI,GACAjH,EAAA8C,EAAA,sBAAAnE,EAAAoI,EAAA,IAAApI,EAAAsI,GACAK,KAIA,SAAAA,IACA3I,EAAA,KAGA,SAAAoL,EAAA/F,GAMAhE,EAAAgE,EAAAlE,GAAA,4BAAA,SAAAkE,EAAAT,KAAA,YAAA,WACAuD,EAAA9C,EAAAlE,IACAgE,EAPA,WACAC,EAAAC,GACAmB,EAAA,QAAA,QAAAnB,EAAAc,OAAAd,EAAAlE,KAKAkE,EAAA,SAGA,SAAAD,EAAAC,GAkBA,SAAAuG,EAAAjG,GAMAhG,GAAA,MAAA0F,EAAAM,KACAhG,GAAA,EACA0B,EAAA8C,EAAA,wDAyRA,WACA,SAAA0H,IACA,SAAAC,EAAAC,GACA,SAAAC,EAAArG,GACA,MAAA,SAAApF,EAAAwL,IAAAxL,EAAAwL,GAAA5F,OAAA8F,MAAAtG,IAOApF,EAAAwL,IAHA,OAGAxL,EAAAwL,GAAA5F,OAHA+F,eAGAF,EAAA,WAAAA,EAAA,WACAxF,EAAA,oBAAA,SAAAjG,EAAAwL,GAAA5F,OAAA4F,GAIA,IAAA,IAAAA,KAAAxL,EACAuL,EAAAC,GAIA,SAAAI,EAAAC,GACA/K,EAAA,SAAA,sBAAA+K,EAAA,GAAAlE,OAAA,IAAAkE,EAAA,GAAAxH,MACAyH,EAAAR,EAAA,IAqBA,IAAAS,EAAA/M,OAAA+M,kBAAA/M,OAAAgN,uBAEAD,IAlBApE,EAAAzB,SAAA+F,cAAA,QAEAC,EAAA,CACAC,YAAA,EACAC,mBAAA,EACAC,eAAA,EACAC,uBAAA,EACAC,WAAA,EACAC,SAAA,GAGA,IAAAT,EAAAH,GAEAa,QAAA9E,EAAAuE,IAfA,IAEAvE,EAEAuE,EAtTAQ,IAIA,SAAAC,EAAAvH,GA9BA,IAAAA,EAAAA,EA+BAA,EA9BAN,EAAAlE,IAOAkE,EAAAc,OAAA8F,MAAAtG,GAAAN,EAAAM,GAAA,KACAtE,EACAgE,EAAAlE,GACA,WAAAgD,EACA,KAAAwB,EACA,WAAAN,EAAAM,GAAA,OAXAtE,EACA,YACA,0BA4BAuK,EAAAjG,GAGA,IAAAxB,EAAAkB,EAAAc,OAAAhF,GAEAZ,EAAA4D,KACA5D,EAAA4D,GAAAtC,YAAAqL,EAAA,UACA3M,EAAA4D,GAAArC,WAAAoL,EAAA,UAIA,SAAA/H,EAAAtB,EAAAwB,EAAA8H,GAEAA,IAAA9H,EAAAT,MAAA3E,GACAoB,EAAAgE,EAAAlE,GAAA,8BACAlB,EAAA4D,IAEAA,IAIA,SAAA2C,EAAA4G,EAAA1I,EAAAyB,EAAAhF,EAAAkM,GAgCA,IA9BAnF,EA8BAoF,GAAA,EAEAnM,EAAAA,GAAAgF,EAAAhF,GAEAZ,EAAAY,KAxBAgF,GAAA,kBAAAA,GAAA,OAAAA,EAAAoH,eAVArF,EAAA3H,EAAAY,IAAAZ,EAAAY,GAAAqM,aACAnM,EAAAF,EAAA,IAAAiM,EAAA,2BAAAjM,EAAA,MAAAuD,EAAA,mBAAAwD,GACA/B,EAAAoH,cAAAE,YAAA3N,EAAA4E,EAAAwD,IAIA7F,EAAAlB,EAAA,IAAAiM,EAAA,YAAAjM,EAAA,eAmBAkM,GAAA9M,EAAAY,IAAAZ,EAAAY,GAAAY,iBACAxB,EAAAY,GAAAuM,WAAA1F,WARA,YACAzH,EAAAY,IAAAZ,EAAAY,GAAAmI,QAAAgE,IACAA,GAAA,EACAjL,EAAAlB,EAAA,mCAAAZ,EAAAY,GAAAY,eAAA,IAAA,kOAKAxB,EAAAY,GAAAY,kBAeA,SAAAmH,EAAA/E,GACA,OAAAA,EACA,IAAA5D,EAAA4D,GAAAtD,aACA,IAAAN,EAAA4D,GAAArC,UACA,IAAAvB,EAAA4D,GAAA9C,IACA,IAAAd,EAAA4D,GAAA/C,SACA,IAAAb,EAAA4D,GAAAlD,oBACA,IAAAV,EAAA4D,GAAAzD,WACA,IAAAH,EAAA4D,GAAAvD,WACA,IAAAL,EAAA4D,GAAAjD,wBACA,IAAAX,EAAA4D,GAAAxD,eACA,IAAAJ,EAAA4D,GAAArD,YACA,IAAAP,EAAA4D,GAAAnC,UACA,IAAAzB,EAAA4D,GAAAnD,YACA,IAAAT,EAAA4D,GAAAxC,WACA,IAAApB,EAAA4D,GAAAlC,uBAGA,SAAAiB,EAAAiD,EAAAvD,GA8JA,IA9HAuB,EAPAhD,EAqFAuD,EA4BA9B,EAJA6G,EAwBAtF,GA9HAA,EA8HAgC,EAAAhF,GA5HA,KADAgD,IAEAgC,EAAAhF,IAVAA,EAAAyB,GAAAA,EAAAzB,IAAAV,EAAAU,GAAA1B,IACA,OAAAgH,SAAA0C,eAAAhI,KACAA,GAAA1B,KAQA0E,EANAhD,GAOAzB,GAAAkD,GAAA,IAAAvB,IAEAA,EADA8C,EACA,4BAAAA,EAAA,KAAAgC,EAAAwH,IAAA,MAIAxJ,GAiHAA,KAAA5D,GAAA,kBAAA4F,EAaA9D,EAAA8B,EAAA,mCA7BAvB,GADAA,EAuBAA,IAtBA,GACArC,EAAA4D,GAAA,CACA8F,UAAA,EACA9D,OAAAA,EACAsD,WAAAtD,EAAAwH,IAAAtE,MAAA,KAAAuE,MAAA,EAAA,GAAAC,KAAA,MAvBA,SAAAjL,GACA,GAAA,iBAAAA,EACA,MAAA,IAAA2I,UAAA,4BAwBAuC,CAAAlL,GApBA,SAAAA,GACA,IAAA,IAAAmL,KAAAtN,EACAA,EAAAuN,eAAAD,KACAxN,EAAA4D,GAAA4J,GAAAnL,EAAAoL,eAAAD,GAAAnL,EAAAmL,GAAAtN,EAAAsN,IAkBAE,CAAArL,GAEArC,EAAA4D,KACA5D,EAAA4D,GAAAqJ,cAAA,IAAAjN,EAAA4D,GAAApD,YAfA,MADA0I,EAgBAlJ,EAAA4D,GAAAsF,aAfA,YAAAA,EAAA,IAAAA,EAeA,KAzGA,WAGA,OAFApI,EAAA8C,EAAA,qBAAA5D,EAAA4D,IAAA5D,EAAA4D,GAAAvC,UAAA,UAAA,YAAA,QAAAuC,GACAgC,EAAA8F,MAAAiC,UAAA,KAAA3N,EAAA4D,IAAA5D,EAAA4D,GAAAvC,WAAA,SAAA,OACArB,EAAA4D,IAAA5D,EAAA4D,GAAAvC,WACA,IAAA,OACA,MACA,KAAA,EACAuE,EAAAvE,UAAA,MACA,MACA,KAAA,EACAuE,EAAAvE,UAAA,KACA,MACA,QACAuE,EAAAvE,UAAArB,EAAA4D,GAAA5D,EAAA4D,GAAAvC,UAAA,MAwGAuM,GAjKA,WACA,SAAAC,EAAAnC,GACA1K,EAAAA,IAAAhB,EAAA4D,GAAA8H,IAAA,IAAA1L,EAAA4D,GAAA8H,KACA9F,EAAA8F,MAAAA,GAAA1L,EAAA4D,GAAA8H,GAAA,KACA5K,EAAA8C,EAAA,OAAA8H,EAAA,MAAA1L,EAAA4D,GAAA8H,GAAA,OAIA,SAAAoC,EAAA1I,GACA,GAAApF,EAAA4D,GAAA,MAAAwB,GAAApF,EAAA4D,GAAA,MAAAwB,GACA,MAAA,IAAAoE,MAAA,gBAAApE,EAAA,+BAAAA,GAIA0I,EAAA,UACAA,EAAA,SAEAD,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YA8IAE,GAjGA,iBAAA/N,EAAA4D,IAAA5D,EAAA4D,GAAAvD,aAAA,OAAAL,EAAA4D,IAAA5D,EAAA4D,GAAAvD,cACAL,EAAA4D,GAAAtD,aAAAN,EAAA4D,GAAAvD,WACAL,EAAA4D,GAAAvD,WAAAL,EAAA4D,GAAAvD,WAAA,MA0CA8D,EAuDAwE,EAAA/E,GAjDAT,EAAAyC,EAAA,OALA,WAvCA,IAKA8D,EACAsE,EAkCA/H,EAAA,gBAAA9B,EAAAyB,EAAA7G,GAAA,GAnCA2K,EAAA1J,EAAA4D,IAAA5D,EAAA4D,GAAA8F,SACAsE,EAAAhO,EAAA4D,IAAA5D,EAAA4D,GAAAjD,2BAAAhB,GAEA+J,GAAAsE,GACAnD,EAAA,CAAAjF,OAAAA,EAAAY,OAAA,EAAAE,MAAA,EAAArC,KAAA,WAoCA4B,EAAA,OAAA9B,EAAAyB,EAAA7G,GAAA,GA/BAkP,SAAAC,UAAAC,MAAAnO,EAAA4D,KACA5D,EAAA4D,GAAAgC,OAAAwI,cAAA,CAEAC,MAAAzE,EAAAuE,KAAA,KAAAnO,EAAA4D,GAAAgC,QAEA0I,gBAAArD,EAAAkD,KAAA,KAAAnO,EAAA4D,GAAAgC,QAEA2I,OAAAtI,EAAAkI,KAAA,KAAA,gBAAA,SAAAnO,EAAA4D,GAAAgC,QAEAgF,aAAA,SAAA4D,GACAvI,EAAA,iBAAA,gBAAAuI,EAAAxO,EAAA4D,GAAAgC,OAAAhC,IAGA6K,YAAA,SAAA3E,GAEA7D,EAAA,eAAA,YADA6D,EAAAzD,KAAAC,UAAAwD,IACA9J,EAAA4D,GAAAgC,OAAAhC,OAuEA,SAAAkI,EAAA3J,EAAA0D,GACA,OAAA5F,IACAA,EAAAwH,WAAA,WACAxH,EAAA,KACAkC,KACA0D,IAiEA,SAAA6I,EAAAjK,GAKA3D,EAAA,SAAA,kBAAA2D,GACAqH,EALA,WACA6C,EAAA,UAAAlK,EAAA,WAIA,IAIA,SAAAmK,IAKA,WAAA1I,SAAA2I,kBACA/N,EAAA,WAAA,mCACAgL,EANA,WACA6C,EAAA,cAAA,WAKA,KAIA,SAAAA,EAAAG,EAAArK,GAQA,IAAA,IAAAb,KAAA5D,EANAA,EADA4D,EAQAA,IANA,WAAA5D,EAAA4D,GAAAxC,YACApB,EAAA4D,GAAAzD,aACAH,EAAA4D,GAAA8F,UAKAzD,EAAA6I,EAAArK,EAAAyB,SAAA0C,eAAAhF,GAAAA,GATA,IAAAA,EA0BA,SAAAZ,IACA,SAAA+L,EAAA1M,EAAAK,GASAA,KARA,WACA,IAAAA,EAAAsM,QACA,MAAA,IAAAhE,UAAA,qCACA,GAAA,WAAAtI,EAAAsM,QAAAC,cACA,MAAA,IAAAjE,UAAA,iCAAAtI,EAAAsM,QAAA,KAKAE,GACAvM,EAAAD,EAAAL,GACA8M,EAAAC,KAAA1M,IAUA,IAAAyM,EAKA,OAx7BA,WACA,IAEAtH,EADAwH,EAAA,CAAA,MAAA,SAAA,IAAA,MAIA,IAAAxH,EAAA,EAAAA,EAAAwH,EAAA/P,SAAAI,EAAAmI,GAAA,EACAnI,EAAAV,OAAAqQ,EAAAxH,GAAA,yBAGA,GACA/G,EAAA,QAAA,uCA06BAwO,GApCAnM,EAAAnE,OAAA,UAAAwF,GAEArB,EAAAnE,OAAA,SAAA,WAAA0P,EAAA,YAEAvL,EAAA+C,SAAA,mBAAA0I,GACAzL,EAAA+C,SAAA,2BAAA0I,GACAzL,EAAAnE,OAAA,UAAA,WAAA0P,EAAA,WACAvL,EAAAnE,OAAA,QAAA,WAAA0P,EAAA,WAgCA,SAAArM,EAAAsF,GAXA,IAAAtF,EAgBA,OAJA8M,EAAA,IAZA9M,EAcAA,IAbAA,EAAA3B,qBACAoB,EAAA,6GAcA,GACA,IAAA,YACA,IAAA,SACAuH,MAAA6E,UAAA/D,QAAAoF,KACArJ,SAAAsJ,iBAAA7H,GAAA,UACAoH,EAAAZ,KAAApP,EAAAsD,IAEA,MACA,IAAA,SACA0M,EAAA1M,EAAAsF,GACA,MACA,QACA,MAAA,IAAAqD,UAAA,gCAAA,EAAA,KAGA,OAAAmE,IAjhCA,GCTAM,OAAAvB,UAAAwB,aACAD,OAAAvB,UAAAwB,WAAA,SAAAC,EAAAC,GAEA,OADAA,EAAAA,GAAA,EACAtN,KAAAmD,OAAAmK,EAAAD,EAAArQ,UAAAqQ,IAKA,WACA,IAkBAjE,EAqBAmE,EAvCAC,EAAA,SAAAC,GACA,IAAAC,EAAA,IAAAC,OAAA,OAAAF,EAAA,aAAAG,KAAAlR,OAAAsL,SAAA6F,MACA,OAAA,MAAAH,EACA,KAGAI,UAAAJ,EAAA,KAAA,GAKA9P,EACA,uBAEA,WAAA4I,MAAA,MAIA4C,EAAAxF,SAAAmK,cAAA,UACAhM,KAAA,WACAqH,EAAA9K,GAAA,iBACA8K,EAAA4E,YAAApK,SAAAqK,eAAA,iFACA7E,EAAA4E,YAAApK,SAAAqK,eAAA,qFACArK,SAAAsK,KAAAF,YAAA5E,GAGA,WACA,IAAA/D,EAAAzB,SAAA+F,cAAA,iBACA,GAAAtE,EAAA,CACA,IAAA/B,EAAAM,SAAAmK,cAAA,UACAzK,EAAA6K,UAAA,kBACA,IAAAC,EAAA/I,EAAAgJ,QAAAD,MAAAZ,EAAA,KACAlK,EAAAwH,IAAAlN,EAAA,qBAAAwQ,EACA9K,EAAAvE,UAAA,KACAsG,EAAA2I,YAAA1K,IA2CAA,GArCA,IADAiK,EAAA3J,SAAAsJ,iBAAA,oBACAlQ,QACAuQ,EAAA1F,QAAA,SAAAxC,GACA,IAAA/B,EAAAM,SAAAmK,cAAA,UACAzK,EAAA6K,UAAA,kBACA7K,EAAAvE,UAAA,KACA,IAAAqP,EAAA/I,EAAAgJ,QAAAD,MAAAZ,EAAA,KACAlK,EAAAwH,IAAAlN,EAAA,gBAAAwQ,EACA/I,EAAA2I,YAAA1K,KAQAxD,aAAA,CACAtB,KAAA,EACAN,aAAA,EACAU,UAAA,IAGAW,gBAAA,SAAA+O,GACAA,EAAA9G,QAAAiG,OACA7J,SAAA2K,MAAAD,EAAA9G,QAAAiG,SAhEA","file":"widget.js","sourcesContent":["/*\n * File: iframeResizer.js\n * Desc: Force iframes to size to content.\n * Requires: iframeResizer.contentWindow.js to be loaded into the target frame.\n * Doc: https://github.com/davidjbradshaw/iframe-resizer\n * Author: David J. Bradshaw - dave@bradshaw.net\n * Contributor: Jure Mav - jure.mav@gmail.com\n * Contributor: Reed Dadoune - reed@dadoune.com\n */\n\n\n;(function(undefined) {\n  'use strict';\n\n  if(typeof window === 'undefined') return; // don't run for server side render\n\n  var\n    count                 = 0,\n    logEnabled            = false,\n    hiddenCheckEnabled    = false,\n    msgHeader             = 'message',\n    msgHeaderLen          = msgHeader.length,\n    msgId                 = '[iFrameSizer]', //Must match iframe msg ID\n    msgIdLen              = msgId.length,\n    pagePosition          = null,\n    requestAnimationFrame = window.requestAnimationFrame,\n    resetRequiredMethods  = {max:1,scroll:1,bodyScroll:1,documentElementScroll:1},\n    settings              = {},\n    timer                 = null,\n    logId                 = 'Host Page',\n\n    defaults              = {\n      autoResize                : true,\n      bodyBackground            : null,\n      bodyMargin                : null,\n      bodyMarginV1              : 8,\n      bodyPadding               : null,\n      checkOrigin               : true,\n      inPageLinks               : false,\n      enablePublicMethods       : true,\n      heightCalculationMethod   : 'bodyOffset',\n      id                        : 'iFrameResizer',\n      interval                  : 32,\n      log                       : false,\n      maxHeight                 : Infinity,\n      maxWidth                  : Infinity,\n      minHeight                 : 0,\n      minWidth                  : 0,\n      resizeFrom                : 'parent',\n      scrolling                 : false,\n      sizeHeight                : true,\n      sizeWidth                 : false,\n      warningTimeout            : 5000,\n      tolerance                 : 0,\n      widthCalculationMethod    : 'scroll',\n      closedCallback            : function() {},\n      initCallback              : function() {},\n      messageCallback           : function() {warn('MessageCallback function not defined');},\n      resizedCallback           : function() {},\n      scrollCallback            : function() {return true;}\n    };\n\n  function addEventListener(obj,evt,func) {\n    /* istanbul ignore else */ // Not testable in PhantonJS\n    if ('addEventListener' in window) {\n      obj.addEventListener(evt,func, false);\n    } else if ('attachEvent' in window) {//IE\n      obj.attachEvent('on'+evt,func);\n    }\n  }\n\n  function removeEventListener(el,evt,func) {\n    /* istanbul ignore else */ // Not testable in phantonJS\n    if ('removeEventListener' in window) {\n      el.removeEventListener(evt,func, false);\n    } else if ('detachEvent' in window) { //IE\n      el.detachEvent('on'+evt,func);\n    }\n  }\n\n  function setupRequestAnimationFrame() {\n    var\n      vendors = ['moz', 'webkit', 'o', 'ms'],\n      x;\n\n    // Remove vendor prefixing if prefixed and break early if not\n    for (x = 0; x < vendors.length && !requestAnimationFrame; x += 1) {\n      requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    }\n\n    if (!(requestAnimationFrame)) {\n      log('setup','RequestAnimationFrame not supported');\n    }\n  }\n\n  function getMyID(iframeId) {\n    var retStr = 'Host page: '+iframeId;\n\n    if (window.top !== window.self) {\n      if (window.parentIFrame && window.parentIFrame.getId) {\n        retStr = window.parentIFrame.getId()+': '+iframeId;\n      } else {\n        retStr = 'Nested host page: '+iframeId;\n      }\n    }\n\n    return retStr;\n  }\n\n  function formatLogHeader(iframeId) {\n    return msgId + '[' + getMyID(iframeId) + ']';\n  }\n\n  function isLogEnabled(iframeId) {\n    return settings[iframeId] ? settings[iframeId].log : logEnabled;\n  }\n\n  function log(iframeId,msg) {\n    output('log',iframeId,msg,isLogEnabled(iframeId));\n  }\n\n  function info(iframeId,msg) {\n    output('info',iframeId,msg,isLogEnabled(iframeId));\n  }\n\n  function warn(iframeId,msg) {\n    output('warn',iframeId,msg,true);\n  }\n\n  function output(type,iframeId,msg,enabled) {\n    if (true === enabled && 'object' === typeof window.console) {\n      console[type](formatLogHeader(iframeId),msg);\n    }\n  }\n\n  function iFrameListener(event) {\n    function resizeIFrame() {\n      function resize() {\n        setSize(messageData);\n        setPagePosition(iframeId);\n        callback('resizedCallback',messageData);\n      }\n\n      ensureInRange('Height');\n      ensureInRange('Width');\n\n      syncResize(resize,messageData,'init');\n    }\n\n    function processMsg() {\n      var data = msg.substr(msgIdLen).split(':');\n\n      return {\n        iframe: settings[data[0]] && settings[data[0]].iframe,\n        id:     data[0],\n        height: data[1],\n        width:  data[2],\n        type:   data[3]\n      };\n    }\n\n    function ensureInRange(Dimension) {\n      var\n        max  = Number(settings[iframeId]['max' + Dimension]),\n        min  = Number(settings[iframeId]['min' + Dimension]),\n        dimension = Dimension.toLowerCase(),\n        size = Number(messageData[dimension]);\n\n      log(iframeId,'Checking ' + dimension + ' is in range ' + min + '-' + max);\n\n      if (size<min) {\n        size=min;\n        log(iframeId,'Set ' + dimension + ' to min value');\n      }\n\n      if (size>max) {\n        size=max;\n        log(iframeId,'Set ' + dimension + ' to max value');\n      }\n\n      messageData[dimension] = '' + size;\n    }\n\n\n    function isMessageFromIFrame() {\n      function checkAllowedOrigin() {\n        function checkList() {\n          var\n            i = 0,\n            retCode = false;\n\n          log(iframeId,'Checking connection is from allowed list of origins: ' + checkOrigin);\n\n          for (; i < checkOrigin.length; i++) {\n            if (checkOrigin[i] === origin) {\n              retCode = true;\n              break;\n            }\n          }\n          return retCode;\n        }\n\n        function checkSingle() {\n          var remoteHost  = settings[iframeId] && settings[iframeId].remoteHost;\n          log(iframeId,'Checking connection is from: '+remoteHost);\n          return origin === remoteHost;\n        }\n\n        return checkOrigin.constructor === Array ? checkList() : checkSingle();\n      }\n\n      var\n        origin      = event.origin,\n        checkOrigin = settings[iframeId] && settings[iframeId].checkOrigin;\n\n      if (checkOrigin && (''+origin !== 'null') && !checkAllowedOrigin()) {\n        throw new Error(\n          'Unexpected message received from: ' + origin +\n          ' for ' + messageData.iframe.id +\n          '. Message was: ' + event.data +\n          '. This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.'\n        );\n      }\n\n      return true;\n    }\n\n    function isMessageForUs() {\n      return msgId === (('' + msg).substr(0,msgIdLen)) && (msg.substr(msgIdLen).split(':')[0] in settings); //''+Protects against non-string msg\n    }\n\n    function isMessageFromMetaParent() {\n      //Test if this message is from a parent above us. This is an ugly test, however, updating\n      //the message format would break backwards compatibity.\n      var retCode = messageData.type in {'true':1,'false':1,'undefined':1};\n\n      if (retCode) {\n        log(iframeId,'Ignoring init message from meta parent page');\n      }\n\n      return retCode;\n    }\n\n    function getMsgBody(offset) {\n      return msg.substr(msg.indexOf(':')+msgHeaderLen+offset);\n    }\n\n    function forwardMsgFromIFrame(msgBody) {\n      log(iframeId,'MessageCallback passed: {iframe: '+ messageData.iframe.id + ', message: ' + msgBody + '}');\n      callback('messageCallback',{\n        iframe: messageData.iframe,\n        message: JSON.parse(msgBody)\n      });\n      log(iframeId,'--');\n    }\n\n    function getPageInfo() {\n      var\n        bodyPosition   = document.body.getBoundingClientRect(),\n        iFramePosition = messageData.iframe.getBoundingClientRect();\n\n      return JSON.stringify({\n        iframeHeight: iFramePosition.height,\n        iframeWidth:  iFramePosition.width,\n        clientHeight: Math.max(document.documentElement.clientHeight, window.innerHeight || 0),\n        clientWidth:  Math.max(document.documentElement.clientWidth,  window.innerWidth  || 0),\n        offsetTop:    parseInt(iFramePosition.top  - bodyPosition.top,  10),\n        offsetLeft:   parseInt(iFramePosition.left - bodyPosition.left, 10),\n        scrollTop:    window.pageYOffset,\n        scrollLeft:   window.pageXOffset\n      });\n    }\n\n    function sendPageInfoToIframe(iframe,iframeId) {\n      function debouncedTrigger() {\n        trigger(\n          'Send Page Info',\n          'pageInfo:' + getPageInfo(),\n          iframe,\n          iframeId\n        );\n      }\n      debounceFrameEvents(debouncedTrigger,32,iframeId);\n    }\n\n\n    function startPageInfoMonitor() {\n      function setListener(type,func) {\n        function sendPageInfo() {\n          if (settings[id]) {\n            sendPageInfoToIframe(settings[id].iframe,id);\n          } else {\n            stop();\n          }\n        }\n\n        ['scroll','resize'].forEach(function(evt) {\n          log(id, type +  evt + ' listener for sendPageInfo');\n          func(window,evt,sendPageInfo);\n        });\n      }\n\n      function stop() {\n        setListener('Remove ', removeEventListener);\n      }\n\n      function start() {\n        setListener('Add ', addEventListener);\n      }\n\n      var id = iframeId; //Create locally scoped copy of iFrame ID\n\n      start();\n\n      if (settings[id]) {\n        settings[id].stopPageInfo = stop;\n      }\n    }\n\n    function stopPageInfoMonitor() {\n      if (settings[iframeId] && settings[iframeId].stopPageInfo) {\n        settings[iframeId].stopPageInfo();\n        delete settings[iframeId].stopPageInfo;\n      }\n    }\n\n    function checkIFrameExists() {\n      var retBool = true;\n\n      if (null === messageData.iframe) {\n        warn(iframeId,'IFrame ('+messageData.id+') not found');\n        retBool = false;\n      }\n      return retBool;\n    }\n\n    function getElementPosition(target) {\n      var iFramePosition = target.getBoundingClientRect();\n\n      getPagePosition(iframeId);\n\n      return {\n        x: Math.floor( Number(iFramePosition.left) + Number(pagePosition.x) ),\n        y: Math.floor( Number(iFramePosition.top)  + Number(pagePosition.y) )\n      };\n    }\n\n    function scrollRequestFromChild(addOffset) {\n      /* istanbul ignore next */  //Not testable in Karma\n      function reposition() {\n        pagePosition = newPosition;\n        scrollTo();\n        log(iframeId,'--');\n      }\n\n      function calcOffset() {\n        return {\n          x: Number(messageData.width) + offset.x,\n          y: Number(messageData.height) + offset.y\n        };\n      }\n\n      function scrollParent() {\n        if (window.parentIFrame) {\n          window.parentIFrame['scrollTo'+(addOffset?'Offset':'')](newPosition.x,newPosition.y);\n        } else {\n          warn(iframeId,'Unable to scroll to requested position, window.parentIFrame not found');\n        }\n      }\n\n      var\n        offset = addOffset ? getElementPosition(messageData.iframe) : {x:0,y:0},\n        newPosition = calcOffset();\n\n      log(iframeId,'Reposition requested from iFrame (offset x:'+offset.x+' y:'+offset.y+')');\n\n      if(window.top !== window.self) {\n        scrollParent();\n      } else {\n        reposition();\n      }\n    }\n\n    function scrollTo() {\n      if (false !== callback('scrollCallback',pagePosition)) {\n        setPagePosition(iframeId);\n      } else {\n        unsetPagePosition();\n      }\n    }\n\n    function findTarget(location) {\n      function jumpToTarget() {\n        var jumpPosition = getElementPosition(target);\n\n        log(iframeId,'Moving to in page link (#'+hash+') at x: '+jumpPosition.x+' y: '+jumpPosition.y);\n        pagePosition = {\n          x: jumpPosition.x,\n          y: jumpPosition.y\n        };\n\n        scrollTo();\n        log(iframeId,'--');\n      }\n\n      function jumpToParent() {\n        if (window.parentIFrame) {\n          window.parentIFrame.moveToAnchor(hash);\n        } else {\n          log(iframeId,'In page link #'+hash+' not found and window.parentIFrame not found');\n        }\n      }\n\n      var\n        hash     = location.split('#')[1] || '',\n        hashData = decodeURIComponent(hash),\n        target   = document.getElementById(hashData) || document.getElementsByName(hashData)[0];\n\n      if (target) {\n        jumpToTarget();\n      } else if(window.top!==window.self) {\n        jumpToParent();\n      } else {\n        log(iframeId,'In page link #'+hash+' not found');\n      }\n    }\n\n    function callback(funcName,val) {\n      return chkCallback(iframeId,funcName,val);\n    }\n\n    function actionMsg() {\n\n      if(settings[iframeId] && settings[iframeId].firstRun) firstRun();\n\n      switch(messageData.type) {\n      case 'close':\n        if(settings[iframeId].closeRequestCallback) chkCallback(iframeId, 'closeRequestCallback', settings[iframeId].iframe);\n        else closeIFrame(messageData.iframe);\n        break;\n      case 'message':\n        forwardMsgFromIFrame(getMsgBody(6));\n        break;\n      case 'scrollTo':\n        scrollRequestFromChild(false);\n        break;\n      case 'scrollToOffset':\n        scrollRequestFromChild(true);\n        break;\n      case 'pageInfo':\n        sendPageInfoToIframe(settings[iframeId] && settings[iframeId].iframe,iframeId);\n        startPageInfoMonitor();\n        break;\n      case 'pageInfoStop':\n        stopPageInfoMonitor();\n        break;\n      case 'inPageLink':\n        findTarget(getMsgBody(9));\n        break;\n      case 'reset':\n        resetIFrame(messageData);\n        break;\n      case 'init':\n        resizeIFrame();\n        callback('initCallback',messageData.iframe);\n        break;\n      default:\n        resizeIFrame();\n      }\n    }\n\n    function hasSettings(iframeId) {\n      var retBool = true;\n\n      if (!settings[iframeId]) {\n        retBool = false;\n        warn(messageData.type + ' No settings for ' + iframeId + '. Message was: ' + msg);\n      }\n\n      return retBool;\n    }\n\n    function iFrameReadyMsgReceived() {\n      for (var iframeId in settings) {\n        trigger('iFrame requested init',createOutgoingMsg(iframeId),document.getElementById(iframeId),iframeId);\n      }\n    }\n\n    function firstRun() {\n      if (settings[iframeId]) {\n        settings[iframeId].firstRun = false;\n      }\n    }\n\n    function clearWarningTimeout() {\n      if (settings[iframeId]) {\n        clearTimeout(settings[iframeId].msgTimeout);\n        settings[iframeId].warningTimeout = 0;\n      }\n    }\n\n    var\n      msg = event.data,\n      messageData = {},\n      iframeId = null;\n\n    if('[iFrameResizerChild]Ready' === msg) {\n      iFrameReadyMsgReceived();\n    } else if (isMessageForUs()) {\n      messageData = processMsg();\n      iframeId    = logId = messageData.id;\n      if (settings[iframeId]) {\n        settings[iframeId].loaded = true;\n      }\n\n      if (!isMessageFromMetaParent() && hasSettings(iframeId)) {\n        log(iframeId,'Received: '+msg);\n\n        if ( checkIFrameExists() && isMessageFromIFrame() ) {\n          actionMsg();\n        }\n      }\n    } else {\n      info(iframeId,'Ignored: '+msg);\n    }\n\n  }\n\n\n  function chkCallback(iframeId,funcName,val) {\n    var\n      func = null,\n      retVal = null;\n\n    if(settings[iframeId]) {\n      func = settings[iframeId][funcName];\n\n      if( 'function' === typeof func) {\n        retVal = func(val);\n      } else {\n        throw new TypeError(funcName+' on iFrame['+iframeId+'] is not a function');\n      }\n    }\n\n    return retVal;\n  }\n\n  function removeIframeListeners(iframe) {\n    var iframeId = iframe.id;\n    delete settings[iframeId];\n  }\n\n  function closeIFrame(iframe) {\n    var iframeId = iframe.id;\n    log(iframeId,'Removing iFrame: '+iframeId);\n\n    try {\n      // Catch race condition error with React\n      if (iframe.parentNode) { iframe.parentNode.removeChild(iframe); }\n    } catch (e) {}\n    \n    chkCallback(iframeId,'closedCallback',iframeId);\n    log(iframeId,'--');\n    removeIframeListeners(iframe);\n  }\n\n  function getPagePosition(iframeId) {\n    if(null === pagePosition) {\n      pagePosition = {\n        x: (window.pageXOffset !== undefined) ? window.pageXOffset : document.documentElement.scrollLeft,\n        y: (window.pageYOffset !== undefined) ? window.pageYOffset : document.documentElement.scrollTop\n      };\n      log(iframeId,'Get page position: '+pagePosition.x+','+pagePosition.y);\n    }\n  }\n\n  function setPagePosition(iframeId) {\n    if(null !== pagePosition) {\n      window.scrollTo(pagePosition.x,pagePosition.y);\n      log(iframeId,'Set page position: '+pagePosition.x+','+pagePosition.y);\n      unsetPagePosition();\n    }\n  }\n\n  function unsetPagePosition() {\n    pagePosition = null;\n  }\n\n  function resetIFrame(messageData) {\n    function reset() {\n      setSize(messageData);\n      trigger('reset','reset',messageData.iframe,messageData.id);\n    }\n\n    log(messageData.id,'Size reset requested by '+('init'===messageData.type?'host page':'iFrame'));\n    getPagePosition(messageData.id);\n    syncResize(reset,messageData,'reset');\n  }\n\n  function setSize(messageData) {\n    function setDimension(dimension) {\n      if (!messageData.id) {\n        log(\n            'undefined',\n            'messageData id not set'\n        );\n        return;\n      }\n      messageData.iframe.style[dimension] = messageData[dimension] + 'px';\n      log(\n        messageData.id,\n        'IFrame (' + iframeId +\n        ') ' + dimension +\n        ' set to ' + messageData[dimension] + 'px'\n      );\n    }\n\n    function chkZero(dimension) {\n      //FireFox sets dimension of hidden iFrames to zero.\n      //So if we detect that set up an event to check for\n      //when iFrame becomes visible.\n\n      /* istanbul ignore next */  //Not testable in PhantomJS\n      if (!hiddenCheckEnabled && '0' === messageData[dimension]) {\n        hiddenCheckEnabled = true;\n        log(iframeId,'Hidden iFrame detected, creating visibility listener');\n        fixHiddenIFrames();\n      }\n    }\n\n    function processDimension(dimension) {\n      setDimension(dimension);\n      chkZero(dimension);\n    }\n\n    var iframeId = messageData.iframe.id;\n\n    if(settings[iframeId]) {\n      if( settings[iframeId].sizeHeight) { processDimension('height'); }\n      if( settings[iframeId].sizeWidth ) { processDimension('width'); }\n    }\n  }\n\n  function syncResize(func,messageData,doNotSync) {\n    /* istanbul ignore if */  //Not testable in PhantomJS\n    if(doNotSync!==messageData.type && requestAnimationFrame) {\n      log(messageData.id,'Requesting animation frame');\n      requestAnimationFrame(func);\n    } else {\n      func();\n    }\n  }\n\n  function trigger(calleeMsg, msg, iframe, id, noResponseWarning) {\n    function postMessageToIFrame() {\n      var target = settings[id] && settings[id].targetOrigin;\n      log(id,'[' + calleeMsg + '] Sending msg to iframe['+id+'] ('+msg+') targetOrigin: '+target);\n      iframe.contentWindow.postMessage( msgId + msg, target );\n    }\n\n    function iFrameNotFound() {\n      warn(id,'[' + calleeMsg + '] IFrame('+id+') not found');\n    }\n\n    function chkAndSend() {\n      if(iframe && 'contentWindow' in iframe && (null !== iframe.contentWindow)) { //Null test for PhantomJS\n        postMessageToIFrame();\n      } else {\n        iFrameNotFound();\n      }\n    }\n\n    function warnOnNoResponse() {\n      function warning() {\n        if (settings[id] && !settings[id].loaded && !errorShown) {\n          errorShown = true;\n          warn(id, 'IFrame has not responded within '+ settings[id].warningTimeout/1000 +' seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ignored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.');\n        }\n      }\n\n      if (!!noResponseWarning && settings[id] && !!settings[id].warningTimeout) {\n        settings[id].msgTimeout = setTimeout(warning, settings[id].warningTimeout);\n      }\n    }\n\n    var errorShown = false;\n\n    id = id || iframe.id;\n\n    if(settings[id]) {\n      chkAndSend();\n      warnOnNoResponse();\n    }\n\n  }\n\n  function createOutgoingMsg(iframeId) {\n    return iframeId +\n      ':' + settings[iframeId].bodyMarginV1 +\n      ':' + settings[iframeId].sizeWidth +\n      ':' + settings[iframeId].log +\n      ':' + settings[iframeId].interval +\n      ':' + settings[iframeId].enablePublicMethods +\n      ':' + settings[iframeId].autoResize +\n      ':' + settings[iframeId].bodyMargin +\n      ':' + settings[iframeId].heightCalculationMethod +\n      ':' + settings[iframeId].bodyBackground +\n      ':' + settings[iframeId].bodyPadding +\n      ':' + settings[iframeId].tolerance +\n      ':' + settings[iframeId].inPageLinks +\n      ':' + settings[iframeId].resizeFrom +\n      ':' + settings[iframeId].widthCalculationMethod;\n  }\n\n  function setupIFrame(iframe,options) {\n    function setLimits() {\n      function addStyle(style) {\n        if ((Infinity !== settings[iframeId][style]) && (0 !== settings[iframeId][style])) {\n          iframe.style[style] = settings[iframeId][style] + 'px';\n          log(iframeId,'Set '+style+' = '+settings[iframeId][style]+'px');\n        }\n      }\n\n      function chkMinMax(dimension) {\n        if (settings[iframeId]['min'+dimension]>settings[iframeId]['max'+dimension]) {\n          throw new Error('Value for min'+dimension+' can not be greater than max'+dimension);\n        }\n      }\n\n      chkMinMax('Height');\n      chkMinMax('Width');\n\n      addStyle('maxHeight');\n      addStyle('minHeight');\n      addStyle('maxWidth');\n      addStyle('minWidth');\n    }\n\n    function newId() {\n      var id = ((options && options.id) || defaults.id + count++);\n      if  (null !== document.getElementById(id)) {\n        id = id + count++;\n      }\n      return id;\n    }\n\n    function ensureHasId(iframeId) {\n      logId=iframeId;\n      if (''===iframeId) {\n        iframe.id = iframeId =  newId();\n        logEnabled = (options || {}).log;\n        logId=iframeId;\n        log(iframeId,'Added missing iframe ID: '+ iframeId +' (' + iframe.src + ')');\n      }\n\n\n      return iframeId;\n    }\n\n    function setScrolling() {\n      log(iframeId,'IFrame scrolling ' + (settings[iframeId] && settings[iframeId].scrolling ? 'enabled' : 'disabled') + ' for ' + iframeId);\n      iframe.style.overflow = false === (settings[iframeId] && settings[iframeId].scrolling) ? 'hidden' : 'auto';\n      switch(settings[iframeId] && settings[iframeId].scrolling) {\n        case 'omit':\n          break;\n        case true:\n          iframe.scrolling = 'yes';\n          break;\n        case false:\n          iframe.scrolling = 'no';\n          break;\n        default:\n          iframe.scrolling = settings[iframeId] ? settings[iframeId].scrolling : 'no';\n      }\n    }\n\n    //The V1 iFrame script expects an int, where as in V2 expects a CSS\n    //string value such as '1px 3em', so if we have an int for V2, set V1=V2\n    //and then convert V2 to a string PX value.\n    function setupBodyMarginValues() {\n      if (('number'===typeof(settings[iframeId] && settings[iframeId].bodyMargin)) || ('0'===(settings[iframeId] && settings[iframeId].bodyMargin))) {\n        settings[iframeId].bodyMarginV1 = settings[iframeId].bodyMargin;\n        settings[iframeId].bodyMargin   = '' + settings[iframeId].bodyMargin + 'px';\n      }\n    }\n\n    function checkReset() {\n      // Reduce scope of firstRun to function, because IE8's JS execution\n      // context stack is borked and this value gets externally\n      // changed midway through running this function!!!\n      var\n        firstRun           = settings[iframeId] && settings[iframeId].firstRun,\n        resetRequertMethod = settings[iframeId] && settings[iframeId].heightCalculationMethod in resetRequiredMethods;\n\n      if (!firstRun && resetRequertMethod) {\n        resetIFrame({iframe:iframe, height:0, width:0, type:'init'});\n      }\n    }\n\n    function setupIFrameObject() {\n      if(Function.prototype.bind && settings[iframeId]) { //Ignore unpolyfilled IE8.\n        settings[iframeId].iframe.iFrameResizer = {\n\n          close        : closeIFrame.bind(null,settings[iframeId].iframe),\n\n          removeListeners: removeIframeListeners.bind(null,settings[iframeId].iframe),\n\n          resize       : trigger.bind(null,'Window resize', 'resize', settings[iframeId].iframe),\n\n          moveToAnchor : function(anchor) {\n            trigger('Move to anchor','moveToAnchor:'+anchor, settings[iframeId].iframe,iframeId);\n          },\n\n          sendMessage  : function(message) {\n            message = JSON.stringify(message);\n            trigger('Send Message','message:'+message, settings[iframeId].iframe, iframeId);\n          }\n        };\n      }\n    }\n\n    //We have to call trigger twice, as we can not be sure if all\n    //iframes have completed loading when this code runs. The\n    //event listener also catches the page changing in the iFrame.\n    function init(msg) {\n      function iFrameLoaded() {\n        trigger('iFrame.onload', msg, iframe, undefined , true);\n        checkReset();\n      }\n\n      addEventListener(iframe,'load',iFrameLoaded);\n      trigger('init', msg, iframe, undefined, true);\n    }\n\n    function checkOptions(options) {\n      if ('object' !== typeof options) {\n        throw new TypeError('Options is not an object');\n      }\n    }\n\n    function copyOptions(options) {\n      for (var option in defaults) {\n        if (defaults.hasOwnProperty(option)) {\n          settings[iframeId][option] = options.hasOwnProperty(option) ? options[option] : defaults[option];\n        }\n      }\n    }\n\n    function getTargetOrigin (remoteHost) {\n      return ('' === remoteHost || 'file://' === remoteHost) ? '*' : remoteHost;\n    }\n\n    function processOptions(options) {\n      options = options || {};\n      settings[iframeId] = {\n        firstRun\t: true,\n        iframe\t\t: iframe,\n        remoteHost\t: iframe.src.split('/').slice(0,3).join('/')\n      };\n\n      checkOptions(options);\n      copyOptions(options);\n\n      if (settings[iframeId]) {\n        settings[iframeId].targetOrigin = true === settings[iframeId].checkOrigin ? getTargetOrigin(settings[iframeId].remoteHost) : '*';\n      }\n    }\n\n    function beenHere() {\n      return (iframeId in settings && 'iFrameResizer' in iframe);\n    }\n\n    var iframeId = ensureHasId(iframe.id);\n\n    if (!beenHere()) {\n      processOptions(options);\n      setScrolling();\n      setLimits();\n      setupBodyMarginValues();\n      init(createOutgoingMsg(iframeId));\n      setupIFrameObject();\n    } else {\n      warn(iframeId,'Ignored iFrame, already setup.');\n    }\n  }\n\n  function debouce(fn,time) {\n    if (null === timer) {\n      timer = setTimeout(function() {\n        timer = null;\n        fn();\n      }, time);\n    }\n  }\n  \n  var frameTimer = {};\n  function debounceFrameEvents(fn,time,frameId) {\n    if (!frameTimer[frameId]) {\n      frameTimer[frameId] = setTimeout(function() {\n        frameTimer[frameId] = null;\n        fn();\n      }, time);\n    }\n  }\n\n  /* istanbul ignore next */  //Not testable in PhantomJS\n  function fixHiddenIFrames() {\n    function checkIFrames() {\n      function checkIFrame(settingId) {\n        function chkDimension(dimension) {\n          return '0px' === (settings[settingId] && settings[settingId].iframe.style[dimension]);\n        }\n\n        function isVisible(el) {\n          return (null !== el.offsetParent);\n        }\n\n        if (settings[settingId] && isVisible(settings[settingId].iframe) && (chkDimension('height') || chkDimension('width'))) {\n          trigger('Visibility change', 'resize', settings[settingId].iframe, settingId);\n        }\n      }\n\n      for (var settingId in settings) {\n        checkIFrame(settingId);\n      }\n    }\n\n    function mutationObserved(mutations) {\n      log('window','Mutation observed: ' + mutations[0].target + ' ' + mutations[0].type);\n      debouce(checkIFrames,16);\n    }\n\n    function createMutationObserver() {\n      var\n        target = document.querySelector('body'),\n\n        config = {\n          attributes            : true,\n          attributeOldValue     : false,\n          characterData         : true,\n          characterDataOldValue : false,\n          childList             : true,\n          subtree               : true\n        },\n\n        observer = new MutationObserver(mutationObserved);\n\n      observer.observe(target, config);\n    }\n\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n    if (MutationObserver) createMutationObserver();\n  }\n\n\n  function resizeIFrames(event) {\n    function resize() {\n      sendTriggerMsg('Window '+event,'resize');\n    }\n\n    log('window','Trigger event: '+event);\n    debouce(resize,16);\n  }\n\n  /* istanbul ignore next */  //Not testable in PhantomJS\n  function tabVisible() {\n    function resize() {\n      sendTriggerMsg('Tab Visable','resize');\n    }\n\n    if('hidden' !== document.visibilityState) {\n      log('document','Trigger event: Visiblity change');\n      debouce(resize,16);\n    }\n  }\n\n  function sendTriggerMsg(eventName,event) {\n    function isIFrameResizeEnabled(iframeId) {\n      return\tsettings[iframeId] &&\n          'parent' === settings[iframeId].resizeFrom &&\n          settings[iframeId].autoResize &&\n          !settings[iframeId].firstRun;\n    }\n\n    for (var iframeId in settings) {\n      if(isIFrameResizeEnabled(iframeId)) {\n        trigger(eventName, event, document.getElementById(iframeId), iframeId);\n      }\n    }\n  }\n\n  function setupEventListeners() {\n    addEventListener(window,'message',iFrameListener);\n\n    addEventListener(window,'resize', function() {resizeIFrames('resize');});\n\n    addEventListener(document,'visibilitychange',tabVisible);\n    addEventListener(document,'-webkit-visibilitychange',tabVisible); //Andriod 4.4\n    addEventListener(window,'focusin',function() {resizeIFrames('focus');}); //IE8-9\n    addEventListener(window,'focus',function() {resizeIFrames('focus');});\n  }\n\n\n  function factory() {\n    function init(options,element) {\n      function chkType() {\n        if(!element.tagName) {\n          throw new TypeError('Object is not a valid DOM element');\n        } else if ('IFRAME' !== element.tagName.toUpperCase()) {\n          throw new TypeError('Expected <IFRAME> tag, found <'+element.tagName+'>');\n        }\n      }\n\n      if(element) {\n        chkType();\n        setupIFrame(element, options);\n        iFrames.push(element);\n      }\n    }\n\n    function warnDeprecatedOptions(options) {\n      if (options && options.enablePublicMethods) {\n        warn('enablePublicMethods option has been removed, public methods are now always available in the iFrame');\n      }\n    }\n\n    var iFrames;\n\n    setupRequestAnimationFrame();\n    setupEventListeners();\n\n    return function iFrameResizeF(options,target) {\n      iFrames = []; //Only return iFrames past in on this call\n\n      warnDeprecatedOptions(options);\n\n      switch (typeof(target)) {\n      case 'undefined':\n      case 'string':\n        Array.prototype.forEach.call(\n          document.querySelectorAll( target || 'iframe' ),\n          init.bind(undefined, options)\n        );\n        break;\n      case 'object':\n        init(options,target);\n        break;\n      default:\n        throw new TypeError('Unexpected data type ('+typeof(target)+')');\n      }\n\n      return iFrames;\n    };\n  }\n\n  function createJQueryPublicMethod($) {\n    if (!$.fn) {\n      info('','Unable to bind to jQuery, it is not fully loaded.');\n    } else if (!$.fn.iFrameResize) {\n      $.fn.iFrameResize = function $iFrameResizeF(options) {\n        function init(index, element) {\n          setupIFrame(element, options);\n        }\n\n        return this.filter('iframe').each(init).end();\n      };\n    }\n  }\n\n  if (window.jQuery) { createJQueryPublicMethod(window.jQuery); }\n\n  if (typeof define === 'function' && define.amd) {\n    define([],factory);\n  } else if (typeof module === 'object' && typeof module.exports === 'object') { //Node for browserfy\n    module.exports = factory();\n  } else {\n    window.iFrameResize = window.iFrameResize || factory();\n  }\n\n})();\n","'use strict';\n\nif (!String.prototype.startsWith) {\n  String.prototype.startsWith = function(searchString, position){\n    position = position || 0;\n    return this.substr(position, searchString.length) === searchString;\n  };\n}\n\n\n(function(){\n  var urlParam = function(name){\n    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n    if (results==null){\n      return null;\n    }\n    else{\n      return decodeURI(results[1]) || 0;\n    }\n  };\n\n\n  var defaults = {\n    url: \"https://mepwatch.eu/\",\n    cssClass: \"mepwatch\",\n    params: \"v,action\".split(\",\")\n  };\n\n  var style = function (){\n    var style   = document.createElement(\"style\");\n    style.type = 'text/css';\n    style.id = 'mepwatch-style';\n    style.appendChild(document.createTextNode(\".mepwatch-act iframe {width:100%;min-width:100%;border:0px;overflow:hidden;}\"));\n    style.appendChild(document.createTextNode(\".mepwatch-graph iframe {width:100%;min-width:1000px;border:0px;overflow:hidden;}\"));\n    document.head.appendChild(style);\n  }\n\n  var iframe = function () {\n    var target = document.querySelector(\".mepwatch-act\");\n    if (!target) return;\n    var iframe = document.createElement('iframe');\n    iframe.className = 'mepwatch-iframe';\n    var vote=target.dataset.vote || urlParam(\"v\");\n    iframe.src = defaults.url + 'widget-act.html?v='+vote;\n    iframe.scrolling= 'no';\n    target.appendChild(iframe);\n\n  }\n\n  var iframeGraph = function () {\n    var targets = document.querySelectorAll(\".mepwatch-graph\");\n    if (targets.length == 0) return;\n    targets.forEach(function(target){\n      var iframe = document.createElement('iframe');\n      iframe.className = 'mepwatch-iframe';\n      iframe.scrolling= 'no';\n      var vote=target.dataset.vote || urlParam(\"v\");\n      iframe.src = defaults.url + 'embed.html?v='+vote;\n      target.appendChild(iframe);\n    });\n\n  }\n\n\n  var iframeresizer = function(){\n\n    iFrameResize({\n      log:false,\n      checkOrigin:false,\n      minHeight:500,\n      //heightCalculationMethod:'documentElementOffset',\n      //heightCalculationMethod:'taggedElement',\n      messageCallback : function(d){\n        if (d.message.name) {\n          document.title=d.message.name;\n        }\n      }\n    });\n  };\n\n  var urlParams = function(opts) {\n    opts.params.forEach(function(e){\n      if (urlParam(e))\n        opts[e] = $.urlParam(e);\n    });\n  };\n\n  style();\n  iframe();\n  iframeGraph();\n  iframeresizer();\n})();\n"]}