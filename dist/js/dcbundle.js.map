{"version":3,"sources":["iframe-resizer/js/iframeResizer.contentWindow.js","crossfilter2/crossfilter.js","reductio/reductio.js","d3/dist/d3.js","d3-queue/build/d3-queue.js","topojson/dist/topojson.js","d3-tip/dist/index.js","dc/dc.js","dot/doT.js"],"names":["undefined","window","autoResize","base","bodyBackground","bodyMargin","bodyMarginStr","bodyObserver","bodyPadding","calculateWidth","doubleEventList","resize","click","eventCancelTimer","firstRun","height","heightCalcModeDefault","heightCalcMode","initLock","initMsg","inPageLinks","interval","intervalTimer","logging","msgID","msgIdLen","length","myID","resetRequiredMethods","max","min","bodyScroll","documentElementScroll","resizeFrom","sendPermit","target","parent","targetOriginDefault","tolerance","triggerLocked","triggerLockedTimer","throttledTimer","width","widthCalcModeDefault","widthCalcMode","win","messageCallback","warn","readyCallback","pageInfoCallback","customCalcMethods","document","documentElement","offsetHeight","body","scrollWidth","eventHandlersByName","passiveSupported","options","Object","create","passive","get","once","addEventListener","noop","removeEventListener","e","func","context","args","result","timeout","previous","later","getNow","Date","now","getTime","getHeight","bodyOffset","getComputedStyle","offset","scrollHeight","custom","documentElementOffset","Math","apply","getAllMeasurements","grow","lowestElement","getMaxElement","getAllElements","taggedElement","getTaggedElements","getWidth","offsetWidth","scroll","rightMostElement","sizeIFrameThrottled","sizeIFrame","remaining","this","arguments","clearTimeout","setTimeout","receiver","chkLateLoaded","el","evt","attachEvent","detachEvent","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatLogMsg","msg","log","console","init","clearFix","strBool","str","data","substr","split","Number","enable","readDataFromParent","location","href","setupCustomCalcMethods","calcMode","calcFunc","iFrameResizer","constructor","JSON","stringify","targetOrigin","heightCalculationMethod","widthCalculationMethod","readDataFromPage","setBodyStyle","attr","value","indexOf","chkCSS","setMargin","createElement","style","clear","display","appendChild","checkHeightMode","checkWidthMode","parentIFrame","startEventListeners","stopEventListeners","close","sendMsg","getId","getPageInfo","callback","moveToAnchor","hash","findTarget","reset","resetIFrame","scrollTo","x","y","scrollToOffset","sendMessage","setHeightCalculationMethod","setWidthCalculationMethod","setTargetOrigin","size","customHeight","customWidth","valString","sendSize","getElementPosition","elPosition","getBoundingClientRect","pagePosition","pageXOffset","scrollLeft","pageYOffset","scrollTop","parseInt","left","top","jumpPosition","hashData","decodeURIComponent","getElementById","getElementsByName","checkLocationHash","Array","prototype","forEach","querySelectorAll","call","getAttribute","preventDefault","setupInPageLinks","manageTriggerEvent","listener","add","eventName","handleEvent","eventType","remove","eventNames","map","method","manageEventListeners","checkCalcMode","calcModeDefault","modes","type","forceIntervalTimer","MutationObserver","WebKitMutationObserver","initInterval","addImageLoadListners","mutation","addImageLoadListener","element","complete","src","imageLoaded","imageError","elements","push","attributeName","removeImageLoadListener","splice","imageEventTriggered","event","typeDesc","mutationObserved","mutations","observer","querySelector","observe","attributes","attributeOldValue","characterData","characterDataOldValue","childList","subtree","disconnect","setupBodyMutationObserver","clearInterval","setInterval","abs","prop","retVal","defaultView","test","runtimeStyle","currentStyle","pixelLeft","convertUnitsToPxForIE8","side","timer","elementsLength","elVal","maxVal","Side","i","dimention","tag","triggerEvent","triggerEventDesc","currentHeight","currentWidth","checkTolarance","a","b","isSizeChangeDetected","lockTrigger","resetPage","triggerReset","hcm","message","postMessage","processRequestFromParent","source","getData","inPageLink","pageInfo","msgBody","parse","getMessageType","isInitMsg","true","false","callFromParent","messageType","module","exports","jQuery","readyState","f","define","amd","global","self","crossfilter","r","n","t","o","c","require","u","Error","code","p","1","./src/crossfilter","2","FUNC_ERROR_TEXT","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","freeSelf","root","Function","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","RegExp","replace","Symbol","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","index","entry","set","ListCache","MapCache","assocIndexOf","array","key","other","baseIsNative","isObject","isFunction","isHostObject","toSource","getMapData","__data__","object","has","pop","stringToPath","memoize","isSymbol","baseToString","match","number","quote","toKey","resolver","TypeError","memoized","cache","Cache","isArray","path","defaultValue","isKey","3","version","4","Uint8Array","crossfilter_array8","crossfilter_arrayLengthen","copy","crossfilter_arrayWiden","Uint16Array","Uint32Array","crossfilter_arrayUntyped","crossfilter_bitarray","subarrays","masks","0","lengthen","len","m","w","one","dest","truncate","j","zero","zeroExcept","zeroExceptMask","mask","only","onlyExcept","onlyOffset","onlyOne","array8","array16","array32","arrayLengthen","arrayWiden","bitarray","5","crossfilter_identity","bisect_by","bisectRight","lo","hi","mid","right","by","./identity","6","xfilterArray","xfilterFilter","crossfilter_null","crossfilter_zero","xfilterHeapselect","xfilterHeap","bisect","insertionsort","permute","quicksort","xfilterReduce","packageJson","crossfilter_index","crossfilter_range","range","crossfilter_capacity","filters","predicate","newIndex","removed","usePred","index1","index2","filterListeners","l","removeDataListeners","index3","index4","triggerOnChange","dimension","iterable","accessorPath","d","id","values","newValues","iterablesIndexCount","newIterablesIndexCount","iterablesIndexFilterStatus","newIterablesIndexFilterStatus","refilterFunction","filterValue","filterValuePresent","k","filter","filterAll","filterRange","filterFunction","filterExact","currentFilter","hasCurrentFilter","top_offset","hi0","toSkip","lo0","iterablesEmptyRows","bottom","bottom_offset","group","groupAll","g","all","order","orderNatural","dispose","accessor","sort","refilter","indexListeners","dimensionGroups","dataListeners","unshift","preAdd","postAdd","removeData","tmp","newData","n0","n1","i0","unsortedIndex","sortMap","bounds","lo1","hi1","old_n0","oldValues","oldIndex","oldIterablesIndexFilterStatus","i1","oldiiclength","index5","reIndex","oldDataIndex","filterIndexBounds","filterIndexFunction","added","valueIndexAdded","valueIndexRemoved","newAdded","newRemoved","indexLength","select","groups","heap","reduce","reduceCount","reduceSum","reduceAdd","reduceSubtract","groupIndex","reduceRemove","reduceInitial","n0old","groupWidth","groupCapacity","update","resetNeeded","g0","x0","x1","oldGroups","initial","k0","groupIncrement","updateMany","resetMany","updateOne","resetOne","oldK","seenGroups","filterOne","filterOffset","notFilter","reduceIncrement","reduceDecrement","valueOf","reduceValue","allFiltered","ignore_dimensions","maskForDimensions","onChange","cb","callbacks","isElementFiltered","concat","dimensions","heapselect","./../package.json","./array","./bisect","./filter","./heap","./heapselect","./insertionsort","./null","./permute","./quicksort","./reduce","./zero","lodash.result","7","8","heap_by","sift","child","9","xFilterHeap","heapselect_by","queue","10","11","insertionsort_by","12","13","deep","14","xFilterInsertionsort","quicksort_by","sixth","i5","i3","i2","i4","e1","e2","x2","e3","x3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","15","v","16","reductio","s","reductio_build","reductio_accessors","reductio_parameters","reductio_postprocess","parameters","funcs","my","build","keysLength","nf","./accessors.js","./build.js","./parameters.js","./postprocess","./postprocessors","_assign","output","nextKey","accessor_build","obj","accessorify","tempValue","accessorifyNumeric","fromObject","toObject","count","propName","sum","avg","exception","exceptionAccessor","valueList","median","exceptionCount","exceptionSum","histogramValue","histogramBins","histogramThresholds","std","sumOfSquares","sumOfSq","error","nest","keyAccessorArray","nestKeys","alias","propAccessorObj","aliasKeys","aliasProp","aliasPropKeys","groupTest","dataList","addRemoveInitialObj","prior","buildAliasFunction","reductio_filter","reductio_count","reductio_sum","reductio_avg","reductio_median","reductio_min","reductio_max","reductio_value_count","reductio_value_list","reductio_exception_count","reductio_exception_sum","reductio_histogram","reductio_sum_of_sq","reductio_std","reductio_nest","reductio_alias","reductio_alias_prop","reductio_data_list","reductio_custom","build_function","origF","getOwnPropertyNames","./alias.js","./aliasProp.js","./avg.js","./count.js","./custom.js","./data-list.js","./exception-count.js","./exception-sum.js","./filter.js","./histogram.js","./max.js","./median.js","./min.js","./nest.js","./std.js","./sum-of-squares.js","./sum.js","./value-count.js","./value-list.js","pluck","_grouper","reductio_cap","_othersGrouper","cap","othersName","Infinity","slice_idx","others","addFn","removeFn","initialFn","curr","skip","bisectHisto","histogram","thresholds","arr","dx","half","floor","17","18","keyAccessors","arrRef","newRef","19","20","post","postprocess","postprocessors","name","_all","21","registerPostProcessor","./cap","./sortBy","22","ascending","NaN","pluck_n","ordering","23","sqrt","24","25","26","27","factory","d3","bisector","compare","ascendingBisect","bisectLeft","pair","variance","valueof","delta","mean","isNaN","deviation","extent","constant","identity","sequence","start","stop","step","ceil","e10","ticks","reverse","tickIncrement","isFinite","power","LN10","pow","tickStep","step0","step1","thresholdSturges","LN2","threshold","value0","merge","arrays","merged","transpose","matrix","row","slice$1","identity$1","epsilon","translateX","translateY","entering","__axis","axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","domain","format","spacing","range0","range1","position","bandwidth","round","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","line","text","insert","transition","parentNode","each","_","tickSize","dispatch","Dispatch","on","typename","types","T","trim","that","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","none","selector","empty","selectorAll","matcher","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","sparse","EnterNode","datum","_next","_parent","insertBefore","next","keyPrefix","bindIndex","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending$1","styleValue","getPropertyValue","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","setAttribute","join","contains","filterEvents","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","capture","onAdd","wrap","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","parents","_groups","_parents","subgroups","subnode","subgroup","bind","enterGroup","updateGroup","_enter","_exit","selection$$1","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","property","classed","html","before","clone","typenames","nextId","Local","current","point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","clientLeft","clientTop","mouse","changedTouches","touch","touches","identifier","nopropagation","stopImmediatePropagation","noevent","dragDisable","view","__noselect","MozUserSelect","yesdrag","noclick","constant$2","DragEvent","subject","active","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","Color","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","toLowerCase","Rgb","rgbn","rgba","hsla","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","v1","v2","v3","basis$1","basisClosed","constant$3","linear","hue","gamma","nogamma","cosh","sinh","interpolateRgb","rgbGamma","color$$1","rgb$$1","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","array$1","nb","na","interpolateValue","date","setTime","reinterpolate","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","q","interpolateRound","cssNode","cssRoot","cssView","svgNode","degrees","identity$2","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","rho2","rho4","epsilon2","exp","interpolateZoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","duration","hsl$1","hue$$1","hsl$2","hslLong","hcl$1","hcl$2","hclLong","cubehelix$1","cubehelixGamma","cubehelix$$1","cubehelix$2","cubehelixLong","taskHead","taskTail","frame","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","delay","time","restart","timerFlush","wake","sleep","nap","poke","timeout$1","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","timing","schedules","__transition","tween","state","ease","create$1","get$1","set$1","interrupt","schedule$$1","tweenValue","_id","interpolate","Selection$1","Transition","_name","newId","selection_prototype","quadInOut","cubicInOut","select$$1","children","inherit","transition$$1","id0","id1","on0","on1","sit","every","attrTween","interpolate$$1","value00","value10","interpolate0","value1","_value","styleTween","tween0","tween1","easeConstant","polyIn","exponent","polyOut","polyInOut","pi","halfPi","sinInOut","expInOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceOut","overshoot","backIn","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","root$1","constant$4","BrushEvent","nopropagation$1","noevent$1","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","input","xy","Y","XY","cursors","overlay","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter$1","defaultExtent","local$1","__brush","empty$1","brush$1","dim","touchending","listeners","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","W","N","shifting","shiftKey","point0","point$$1","emit","beforestart","moved","ended","keyCode","move","point1","selection0","selection1","starting","pi$1","halfPi$1","tau$1","max$1","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","map$1","createObject","setObject","createMap","setMap","Set","proto","set$2","slice$3","ascending$2","constant$6","ring","hole","ringContains","xi","yi","pj","xj","yj","noop$1","cases","contours","threshold$$1","smooth","smoothLinear","tz","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","isorings","area","polygon","coordinates","xt","yt","_0","_1","blurX","sr","blurY","defaultX","defaultY","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","dsvFormat","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","I","eof","eol","token","formatRow","formatValue","convert","columnSet","column","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","fetch","then","dsvParse","csv$1","tsv$1","responseJson","json","parser","text$$1","DOMParser","parseFromString","constant$7","jiggle","random","tree","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","defaultX$1","defaultY$1","quadtree","Quadtree","addAll","leaf_copy","treeProto","vx","vy","find","nodeById","nodeId","x$1","y$1","cover","xz","yz","visit","y3","quads","retainer","removeAll","visitAfter","initialAngle","formatDecimal","toExponential","coefficient","exponent$1","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","comma","precision","formatRounded","formatTypes","%","toFixed","toPrecision","identity$3","locale","prefixes","formatLocale","numerals","grouping","thousands","substring","currency","decimal","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","add$1","temp","bv","av","epsilon$2","pi$3","halfPi$2","quarterPi","tau$3","degrees$1","radians","cos$1","sin$1","haversin","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","ranges","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","lambda00$2","phi00$2","z0","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","sign$$1","lambdai","antimeridian","angle","rangeCompare","rangeContains","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","constant$8","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","shift","pointEqual","Intersection","points","clipRejoin","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","sum$1","polygonContains","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","clean","ringSegments","validSegment","clipAntimeridian","sign0","sinLambda0Lambda1","sign1","from","to","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","c0","v00","point2","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","polygonInside","cleanInside","ax","ay","lambda0$2","sinPhi0$1","cosPhi0$1","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","length$1","object$1","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","identity$4","x00","y00","x0$1","y0$1","areaSum$1","areaRingSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","areaPointFirst$1","areaPoint$1","x0$2","y0$2","boundsStream$1","x00$1","y00$1","x0$3","y0$3","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","x00$2","y00$2","x0$4","y0$4","lengthSum$1","lengthStream$1","lengthPointFirst$1","lengthPoint$1","PathString","_string","circle$1","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","_circle","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","transformRadians","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","ci","fi","transform$$1","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cacheStream","theta","preclip","postclip","recenter","center","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","sy0","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate$1","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanXReduce","maxYReduce","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","slice$4","enclose","circles","shuffle$1","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","place","intersects","score","Node$1","circle","packEnclose","aa","sj","sk","pack","required","constantZero","constant$9","defaultRadius$1","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","squarify","resquarify","_squarify","lexicographicOrder","computeUpperHullIndexes","indexes","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","array$3","map$2","slice$5","implicit","ordinal","unknown","band","ordinalRange","range$$1","paddingInner","paddingOuter","rescale","rangeRound","constant$10","number$2","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate$$1","d0","polymap","clamp","continuous","piecewise$$1","linearish","nice","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","raise$1","pow$1","t0$1","t1$1","newInterval","floori","offseti","field","millisecond","milliseconds","durationMinute","durationHour","second","getUTCSeconds","seconds","minute","getMinutes","minutes","hour","getTimezoneOffset","getHours","hours","day","setHours","setDate","getDate","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","months","year","setFullYear","years","utcMinute","setUTCSeconds","getUTCMinutes","utcMinutes","utcHour","setUTCMinutes","getUTCHours","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcMonths","utcYear","setUTCFullYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale$1","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","newParse","newDate","week","day$$1","utcFormat","utcParse","locale$1","-","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale$1","timeFormat","timeParse","isoSpecifier","formatIso","toISOString","parseIso","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","durationYear","date$1","number$3","calendar","year$$1","month$$1","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","tickIntervals","date$$1","tickInterval","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG","scheme$1","PRGn","scheme$2","PiYG","scheme$3","PuOr","scheme$4","RdBu","scheme$5","RdGy","scheme$6","RdYlBu","scheme$7","RdYlGn","scheme$8","Spectral","scheme$9","BuGn","scheme$10","BuPu","scheme$11","GnBu","scheme$12","OrRd","scheme$13","PuBuGn","scheme$14","PuBu","scheme$15","PuRd","scheme$16","RdPu","scheme$17","YlGnBu","scheme$18","YlGn","scheme$19","YlOrBr","scheme$20","YlOrRd","scheme$21","Blues","scheme$22","Greens","scheme$23","Greys","scheme$24","Purples","scheme$25","Reds","scheme$26","Oranges","cubehelix$3","warm","cool","c$1","pi_1_3","pi_2_3","ramp$1","viridis","magma","inferno","plasma","constant$11","abs$1","atan2$1","cos$2","max$2","min$1","sin$2","sqrt$2","epsilon$3","pi$4","halfPi$3","tau$4","asin$1","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","curveLinear","x$3","y$3","x$$1","y$$1","defined","curve","buffer","defined0","area$3","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","slice$6","linkSource","linkTarget","link$2","link","argv","curveHorizontal","curveVertical","curveRadial$1","p2","p3","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","c$2","wye","symbols","noop$3","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","bundle","point$3","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","cardinal$$1","CardinalOpen","cardinalOpen","point$4","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","catmullRom$$1","CatmullRomOpen","catmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","none$1","series","none$2","stackValue","ascending$3","sums","sum$2","constant$12","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","fx","cellHalfedgeStart","cell","site","_t0","px","py","after","grandpa","uncle","sibling","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","epsilon2$2","ha","hc","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","epsilon$4","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","vb","va","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","constant$13","ZoomEvent","Transform","triangles","_found","applyX","applyY","invertX","invertY","rescaleX","rescaleY","identity$8","transform$1","__zoom","nopropagation$2","noevent$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","defaultConstrain","translateExtent","cross","values0","values1","descending","bin","bins","thresholdFreedmanDiaconis","thresholdScott","numbers","pairs","permutes","quantile","scan","shuffle","zip","axisTop","axisRight","axisBottom","axisLeft","brushX","brushY","brushSelection","chord","sortGroups","sortSubgroups","sortChords","groupSums","subgroupIndex","chords","di","dj","subindex","ribbon","sa0","sa1","sx0","tr","ta0","ta1","sortValues","rollup","sortKeys","createResult","setResult","valuesByKey","sortKey","lch","contourDensity","density","Float32Array","transformPolygon","transformRing","transformPoint","cellSize","drag","mousedownx","mousedowny","mousemoving","container","touchable","gestures","clickDistance2","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","touches$$1","sublisteners","clickDistance","dragEnable","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","dsv","image","Promise","resolve","reject","Image","onerror","onload","forceCenter","force","sx","sy","forceCollide","radii","strength","iterations","ri","ri2","prepare","quad","rj","forceLink","strengths","distances","bias","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","theta2","accumulate","weight","distanceMin","distanceMax","forceRadial","radiuses","forceSimulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","initializeNodes","initializeForce","closest","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","feature","deltaMax","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","sy1","kx0","ky0","kx1","ky1","geoLength","geoPath","projectionStream","contextStream","measure","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","reflectX","reflectY","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","cluster","separation","nodeSize","previousNode","leafLeft","leafRight","packSiblings","partition","stratify","nodeKey","nodeByKey","treeRoot","firstWalk","secondWalk","sizeNode","siblings","change","executeShifts","midpoint","vip","vop","vim","vom","sip","sop","sim","som","wm","wp","apportion","treemap","tile","paddingStack","paddingTop","paddingRight","paddingBottom","paddingLeft","positionNode","treemapBinary","valueOffset","valueTarget","valueLeft","valueRight","yk","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","piecewise","quantize","interpolator","samples","polygonArea","polygonCentroid","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","inside","polygonLength","perimeter","scaleBand","scalePoint","pointish","scaleIdentity","identity$6","scaleLinear","linear$2","scaleLog","log$1","logs","pows","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","quantile$$1","invertExtent","quantiles","scaleQuantize","quantize$1","scaleThreshold","threshold$1","scaleTime","scaleUtc","scaleSequential","sequential","k10","scaleDiverging","diverging","k21","schemeCategory10","schemeAccent","schemeDark2","schemePaired","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","interpolateBrBG","schemeBrBG","interpolatePRGn","schemePRGn","interpolatePiYG","schemePiYG","interpolatePuOr","schemePuOr","interpolateRdBu","schemeRdBu","interpolateRdGy","schemeRdGy","interpolateRdYlBu","schemeRdYlBu","interpolateRdYlGn","schemeRdYlGn","interpolateSpectral","schemeSpectral","interpolateBuGn","schemeBuGn","interpolateBuPu","schemeBuPu","interpolateGnBu","schemeGnBu","interpolateOrRd","schemeOrRd","interpolatePuBuGn","schemePuBuGn","interpolatePuBu","schemePuBu","interpolatePuRd","schemePuRd","interpolateRdPu","schemeRdPu","interpolateYlGnBu","schemeYlGnBu","interpolateYlGn","schemeYlGn","interpolateYlOrBr","schemeYlOrBr","interpolateYlOrRd","schemeYlOrRd","interpolateBlues","schemeBlues","interpolateGreens","schemeGreens","interpolateGreys","schemeGreys","interpolatePurples","schemePurples","interpolateReds","schemeReds","interpolateOranges","schemeOranges","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateSinebow","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","clientPoint","cornerRadius","padRadius","x32","y32","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","kc","lc","pie","arcs","pa","radialArea","radialLine","linkHorizontal","linkVertical","linkRadial","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stack","oz","kz","sz","sij","ki","si","stackOffsetExpand","stackOffsetDiverging","yn","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","total","voronoi","zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","zoomTransform","zoomIdentity","defineProperty","noabort","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","abort","maybeNotify","concurrency","defer","await","results","awaitAll","topojson","bbox","topology","bboxPoint","bboxGeometry","objects","feature$1","properties","stitchedArcs","fragments","emptyIndex","flush","ends","fg","gf","meshArcs","object$$1","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","mergeArcs","polygonsByArc","extract","planarRingArea","neighbors","untransform","hashmap","equal","keyType","keyEmpty","valueType","keystore","valstore","matchKey","collisions","maybeSet","missingValue","equalPoint","pointA","pointB","ArrayBuffer","uints","hashPoint","currentIndex","nextIndex","rings","indexByPoint","hashIndex","equalIndex","Int32Array","visitedByIndex","leftByIndex","rightByIndex","junctionByIndex","Int8Array","junctionCount","previousIndex","leftIndex","rightIndex","junctionByPoint","store","hashset","reverse$1","geomifyFeature","geomifyGeometry","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","filterTrue","filterIdentity","filterNotNull","filterAttached","ownerByArc","ownerIndex","testGeometry","testArcs","owner","planarTriangleArea","planarRingArea$1","filterWeight","minWeight","MIN_VALUE","interior","halfArea","mesh","indexesByArc","geometryType","ij","ik","box","inputs","outputs","quantizePoint","quantizeGeometry","quantization","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","quantizePoints","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","prequantize","arcCount","arcsByEnd","dedupLine","dedupRing","startPoint","endPoint","startArcs","startArc","endArcs","endArc","equalLine","reverseEqualLine","equalRing","reverseEqualRing","findMinimumOffset","ka","kb","minimum","minimumPoint","dedup","junctions","lineMid","ringMid","ringFixed","cut","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","indexByArc","indexGeometry","geometry$$1","indexGeometryType","indexArcs","indexMultiArcs","oldObjects","newObjects","filterGeometry","filterRings","filterInteriorRing","newArcs","oldArcs","oldArcsLength","newIndexByOldIndex","newArcsLength","scanGeometry","scanArcs","scanMultiArcs","scanArc","reindexGeometry","reindexArcs","reindexMultiArcs","reindexArc","prune","filterAttachedWeight","presimplify","up","down","newHeap","maxWeight","quantile$1","simplify","sphericalRingArea","sphericalTriangleArea","tip","d3Collection","d3Selection","rootElement","initNode","vis","tagName","show","coords","content","poffset","dir","nodel","getNodeEl","directions","directionCallbacks","hide","functor","destroy","getScreenBBox","div","targetShape","targetel","tbbox","getBBox","_dc","constants","CHART_CLASS","DEBUG_GROUP_CLASS","STACK_CLASS","DESELECTED_CLASS","SELECTED_CLASS","NODE_INDEX_NAME","GROUP_INDEX_NAME","DEFAULT_CHART_GROUP","EVENT_DELAY","NEGLIGIBLE_NUMBER","_renderlet","chartRegistry","_chartMap","initializeChartGroup","chart","register","deregister","anchorName","registerChart","deregisterChart","hasChart","deregisterAllCharts","charts","refocusAll","focus","renderAll","render","redrawAll","disableTransitions","optionalTransition","afterTransition","units","integers","fp","_f","resolution","utils","isNegligible","override","functionName","newFunction","existingFunction","renderlet","instanceOfChart","__dcFlag__","errors","Exception","_msg","InvalidStateException","BadArgumentException","dateFormat","printers","printSingleValue","isFloat","fformat","isInteger","toTimeFunc","percentage","subtract","isNumber","val","_logger","_alreadyWarned","_config","_schemeCategory20c","_defaultColors","_idCounter","findChild","nodeName","uniqueId","nameToId","appendOrSelect","safeNumber","arraysEqual","elem","allChildren","paths","toHierarchy","parts","currentNode","childNode","currentPath","getAncestors","arraysIdentical","logger","enableDebugLog","warnOnce","debug","deprecate","fn","warned","config","defaultColors","events","trigger","closure","RangedFilter","low","high","isFiltered","filterType","TwoDimensionalFilter","RangedTwoDimensionalFilter","fromBottomLeft","HierarchyFilter","baseMixin","_chart","_dimension","_group","_anchor","_svg","_isChild","_width","_height","_orderSort","_legend","_commitHandler","_minWidth","_defaultWidthCalc","_widthCalc","_minHeight","_defaultHeightCalc","_heightCalc","_useViewBoxResizing","_keyAccessor","_valueAccessor","_label","_ordering","_renderLabel","_title","keyAccessor","valueAccessor","_renderTitle","_controlsUseVisibility","_transitionDuration","_transitionDelay","_filterPrinter","_mandatoryAttributes","_chartGroup","_listeners","_filters","_filterHandler","sizeSvg","checkForMandatoryAttributes","minWidth","minHeight","useViewBoxResizing","expireCache","_groupName","orderFunction","_computeOrderedGroups","dataCopy","anchor","chartGroup","chartID","svgElement","resetSvg","filterPrinter","filterPrinterFunction","controlsUseVisibility","useVisibility","turnOnControls","attribute","turnOffControls","transitionDuration","transitionDelay","_doRender","_activateRenderlets","_doRedraw","commitHandler","redrawGroup","renderGroup","_invokeFilteredListener","_invokeZoomedListener","_hasFilterHandler","some","hasFilterHandler","hasFilter","_removeFilterHandler","removeFilterHandler","_addFilterHandler","addFilterHandler","_resetFilterHandler","resetFilterHandler","replaceFilter","fs","applyFilters","highlightSelected","fadeDeselected","resetHighlight","onClick","filterHandler","legendables","legendHighlight","legendReset","legendToggle","isLegendableHidden","label","labelFunction","enableLabels","renderLabel","title","titleFunction","renderTitle","renderletFunction","legend","opts","applyOptions","marginMixin","_margin","margins","effectiveWidth","effectiveHeight","colorMixin","_colors","_defaultAccessor","_colorAccessor","colorScale","ordinalColors","linearColors","colorAccessor","defaultColorAccessor","colorDomain","calculateColorDomain","newDomain","getColor","colorCalculator","coordinateGridMixin","_g","_chartBodyG","_origX","_xOriginalDomain","GRID_LINE_CLASS","HORIZONTAL_CLASS","VERTICAL_CLASS","Y_AXIS_LABEL_CLASS","X_AXIS_LABEL_CLASS","CUSTOM_BRUSH_HANDLE_CLASS","_xAxisLabel","_lastXDomain","_yAxisLabel","_gBrush","_round","_unitCount","_rangeChart","_focusChart","_xAxis","_xUnits","_xAxisPadding","_xAxisPaddingUnit","_xElasticity","_xAxisLabelPadding","_yAxis","_yAxisPadding","_yElasticity","_yAxisLabelPadding","_brush","_brushOn","_parentBrushOn","_renderHorizontalGridLine","_renderVerticalGridLine","_resizing","_zoomScale","_zoomOutRestrict","_zoom","_nullZoom","_hasBeenMouseZoomable","_mouseZoomable","_clipPadding","_outerRangeBandPadding","_rangeBandPadding","_useRightYAxis","prepareXAxis","isOrdinal","elasticX","_ordinalXDomain","xAxisMin","xAxisMax","xdom","xAxisLength","_useOuterPadding","gridLineG","linesGEnter","_xAxisY","linesGEnterUpdate","renderVerticalGridLines","createYAxis","getClipPathId","generateClipPath","defs","chartBodyClip","yAxisHeight","drawChart","_prepareYAxis","plotData","renderXAxis","elasticY","renderYAxis","renderBrush","redrawBrush","fadeDeselectedArea","zoomHandler","noRaiseEvents","domFilter","updateD3zoomTransform","origDomain","xScale","checkExtents","ext","outerLimits","resizing","rangeChart","focusChart","zoomScale","zoomOutRestrict","_generateG","gElement","mouseZoomable","chartBodyG","xOriginalDomain","xUnits","xAxis","xAxisPadding","xAxisPaddingUnit","xUnitCount","useRightYAxis","axisXG","axisXLab","xAxisLabel","labelText","yAxisMin","yAxisMax","_renderHorizontalGridLinesForAxis","renderYAxisLabel","axisClass","labelXPosition","axisYLab","labelYPosition","renderYAxisAt","axisYG","axisPosition","_yAxisX","labelPosition","yAxisLabel","yScale","yAxis","renderHorizontalGridLines","yAxisPadding","_filter","doTransition","_brushing","setBrushExtents","createBrushHandlePaths","gBrush","brushHandles","resizeHandlePath","extendBrush","brushIsEmpty","rangedFilter","applyBrushSelection","scaledSelection","clipPadding","_preprocessData","_enableMouseZoom","_disableMouseZoom","zoomScaleMin","refocused","brushOn","parentBrushOn","stackMixin","prepareValues","layer","layerIdx","valAccessor","String","allValues","hidden","domainValues","xDomain","domainFilter","evadeDomainFilter","_stackLayout","_stack","_titles","_hidableStacks","_evadeDomainFilter","findLayerByName","flattenStack","valueses","visibility","hidableStacks","hideStack","stackName","showStack","getValueAccessorByIndex","titleAccessor","stackLayout","layers","v4data","col","ys","flat","capMixin","_cap","_takeFront","_othersLabel","kv","topItems","restItems","restItemsSum","restKeys","othersLabel","cappedKeyAccessor","cappedValueAccessor","rest","items","takeFront","othersGrouper","grouperFunction","_onClick","bubbleMixin","_maxBubbleRelativeSize","_minRadiusWithLabel","_sortBubbleSize","_elasticRadius","BUBBLE_NODE_CLASS","BUBBLE_CLASS","MIN_RADIUS","radiusAccessor","radiusValueAccessor","_r","_rValueAccessor","bubbleRadiusScale","elasticRadius","calculateRadiusDomain","rMin","rMax","bubbleR","shouldLabel","labelOpacity","labelPointerEvent","_doRenderLabel","bubbleGEnter","doUpdateLabels","labels","_doRenderTitles","doUpdateTitles","sortBubbleSize","minRadius","minRadiusWithLabel","maxBubbleRelativeSize","relativeSize","isSelectedNode","pieChart","_givenRadius","_cx","_cy","_externalLabelRadius","_sliceCssClass","_labelCssClass","_sliceGroupCssClass","_labelGroupCssClass","_emptyCssClass","_emptyTitle","_innerRadius","_externalRadiusPadding","_minAngleForLabel","_drawPaths","maxRadius","pieData","slicePaths","slicesEnter","slicePath","buildArcs","slices","safeArc","tweenPie","labelsEnter","classes","highlightSlice","positionLabels","updateLabelPaths","createLabels","updateLabels","isSelectedSlice","_applyLabelText","whether","polyline","arc2","_current","highlightSliceFromLegendable","legendable","highlighted","slicesCap","externalRadiusPadding","minAngleForLabel","emptyTitle","externalLabels","externalLabelRadius","drawPaths","sunburstChart","extendedValueAccessor","sunburstData","partitionNodes","tweenSlice","isPathFiltered","tweenTarget","assign","pathFilter","filtersForPath","exactMatch","barChart","_barWidth","LABEL_PADDING","_gap","_centerBar","_alwaysUseRounding","barHeight","labelXPos","labelYPos","barXPos","colorFilter","inv","_rescale","_render","numberOfBars","barPadding","calculateBarWidth","last","layerIndex","bars","barsEnterUpdate","renderBars","labelsEnterUpdate","renderLabels","centerBar","outerPadding","gap","alwaysUseRounding","_xAxisMax","lineChart","_defined","_dashStyle","TOOLTIP_G_CLASS","Y_AXIS_REF_LINE_CLASS","X_AXIS_REF_LINE_CLASS","_renderArea","_dotRadius","_dataPointRadius","_dataPointFillOpacity","_dataPointStrokeOpacity","_interpolate","_tension","_xyTipsOn","getCurveFactory","linear-closed","step-before","step-after","basis-open","basis-closed","cardinal-open","cardinal-closed","monotone","safeD","getDotRadius","dot","dashstyle","item","chartBody","layersList","layersEnter","drawLine","drawArea","xyTipsOn","tooltipListClass","tooltips","dots","dotsEnterModify","yAxisRefPathD","xAxisRefPathD","drawDots","labelsEnterModify","dashStyle","renderArea","dotRadius","renderDataPoints","fillOpacity","strokeOpacity","_legendables","dataCount","_formatNumber","_html","formatNumber","formatter","tot","selected","dataTable","_endSlice","ROW_CSS_CLASS","_columns","_sortBy","_order","_beginSlice","_showGroups","rowEnter","bAllFunctions","thead","headrow","headcols","_doColumnHeaderFormat","nestEntries","rowGroup","renderGroups","COLUMN_CSS_CLASS","_doColumnValueFormat","_doColumnHeaderFnToString","_doColumnHeaderCapitalize","lastIndexOf","beginSlice","endSlice","sortBy","showGroups","dataGrid","ITEM_CSS_CLASS","GRID_CSS_CLASS","_htmlGroup","itemGroup","htmlGroup","sortByFunction","bubbleChart","bubbleLocator","bubbleG","compositeChart","_rightY","SUB_CHART_CLASS","_children","_childOptions","_shareColors","_shareTitle","_alignYAxes","_rightYAxis","_rightYAxisLabel","_rightYAxisLabelPadding","_rightAxisGridLines","generateChildG","leftYAxisChildren","rightYAxisChildren","getYAxisMin","getYAxisMax","__generateG","lyAxisMin","lyAxisMax","ryAxisMin","ryAxisMax","alignYAxes","extentRatio","calculateYAxisRanges","needDomain","needRange","prepareLeftYAxis","rightY","rightYAxis","prepareRightYAxis","rightYAxisLabel","useRightAxisGridLines","childOptions","subChartArray","shareColors","shareTitle","seriesChart","_seriesAccessor","_charts","_chartFunction","_seriesSort","_valueSort","clearChart","resetChildren","childrenChanged","keep","nester","sub","subChart","_compose","chartFunction","seriesAccessor","seriesSort","sortFunction","valueSort","geoChoroplethChart","_projectionFlag","_projection","_geoPath","_geoJsons","regionG","generateLayeredData","geoJson","isSelected","isDeselected","layerNameClass","regionClass","baseClasses","currentFill","getKey","_getGeoPath","selectedRegion","overlayGeoJson","geoJsons","removeGeoJson","bubbleOverlay","BUBBLE_OVERLAY_CLASS","_points","mapData","getNodeG","bubbleNodeClass","nodeG","initOverlayG","flag","debugG","debugText","rowChart","_elasticX","_rowData","_labelOffsetX","_labelOffsetY","_hasLabelOffsetY","_dyOffset","_titleLabelOffsetX","_fixedBarHeight","_rowCssClass","_titleRowCssClass","_renderTitleLabel","drawAxis","axisG","calculateAxisScale","isSelectedRow","rootValue","renderTitleLabel","titlelab","updateElements","rowsCap","fixedBarHeight","labelOffsetX","labelOffsetY","labelOffsety","titleLabelOffsetX","_maxItems","_itemHeight","_horizontal","_legendWidth","_itemWidth","_autoItemWidth","_legendText","legendItemHeight","itemEnter","_cumulativeLegendTextWidth","itemWidth","itemHeight","horizontal","legendWidth","autoItemWidth","legendText","maxItems","htmlLegend","_container","_legendItemClass","_highlightSelected","_defaultLegendItemCssClass","_l","legendItemClassName","legendItemClass","scatterPlot","_symbol","_existenceAccessor","originalKeyAccessor","existenceAccessor","_locator","_highlightedSize","_symbolSize","_excludedSize","_excludedColor","_excludedOpacity","_emptySize","_emptyOpacity","_nonemptyOpacity","_emptyColor","_filtered","elementSize","renderTitles","resizeSymbolsWhere","condition","oldSize","__filter","excludedOpacity","excludedColor","customSymbol","symbolSize","highlightedSize","excludedSize","hiddenSize","emptySize","emptyColor","emptyOpacity","nonemptyOpacity","coord","ranged2DFilter","setBrushY","numberDisplay","_lastValue","SPAN_CLASS","valObj","sorted","maxBin","newValue","span","interpStart","interp","num","heatMap","_chartBody","_cols","_rows","_colOrdering","_rowOrdering","_colScale","_rowScale","_xBorderRadius","_yBorderRadius","_colsLabel","_rowsLabel","colsLabel","rowsLabel","_xAxisOnClick","filterAxis","_yAxisOnClick","_boxOnClick","cellsOnAxis","unfilteredCellsOnAxis","rowOrdering","cols","colOrdering","rowCount","colCount","boxWidth","boxHeight","boxes","gEnter","boxOnClick","gCols","gColsText","xAxisOnClick","gRows","gRowsText","yAxisOnClick","handler","xBorderRadius","yBorderRadius","boxWhiskers","boxQuartiles","whiskers","quartiles","dataOpacity","dataWidthPortion","showOutliers","boldOutlier","quartileData","whiskerIndices","whiskerData","outlierIndices","pointIndices","__chart__","medianLine","whisker","outlierClass","outlierSize","outlierX","outlier","boxTick","whiskerTick","boxPlot","_whiskers","q3","iqr","_whiskersIqr","_box","_tickFormat","_renderDataPoints","_dataOpacity","_dataWidthPortion","_showOutliers","_boldOutlier","_yRangePadding","_boxWidth","innerChartWidth","boxPadding","boxTransform","minDataValue","maxDataValue","yAxisRangeRatio","_calculatedBoxWidth","boxesG","boxesGEnter","boxesGEnterUpdate","yRangePadding","selectMenu","_select","OPTION_CSS_CLASS","_promptText","_multiple","_promptValue","_numberVisible","_filterDisplayed","ua","navigator","userAgent","selectedOptions","option","setAttributes","promptText","filterDisplayed","multiple","promptValue","numberVisible","textFilterWidget","_normalize","_filterFunctionFactory","query","_placeHolder","normalize","placeHolder","filterFunctionFactory","cboxMenu","_cbox","_inputType","_randVal","checked","li","renderOptions","abstractBubbleChart","baseChart","capped","colorChart","coordinateGridChart","marginable","stackableChart","_d3","_crossfilter","_globals","doT","templateSettings","evaluate","encode","use","useParams","defineParams","conditional","iterate","varname","strip","selfcontained","doNotSkipEncoded","template","compile","encodeHTMLSource","encodeHTMLRules","&","<",">","\"","'","/","matchHTML","eval","startend","startencode","unescape","tmpl","def","needhtmlencode","indv","cse","sid","resolveDefs","block","param","arg","rw","__exp","elsecase","vname","iname","_encodeHTML"],"mappings":"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","file":"dcbundle.js","sourcesContent":["/*\n * File: iframeResizer.contentWindow.js\n * Desc: Include this file in any page being loaded into an iframe\n *       to force the iframe to resize to the content size.\n * Requires: iframeResizer.js on host page.\n * Doc: https://github.com/davidjbradshaw/iframe-resizer\n * Author: David J. Bradshaw - dave@bradshaw.net\n * Contributor: Jure Mav - jure.mav@gmail.com\n * Contributor: Ian Caunce - ian@hallnet.co.uk\n */\n\n\n;(function(undefined) {\n  'use strict';\n\n  if(typeof window === 'undefined') return; // don't run for server side render\n\n  var\n    autoResize            = true,\n    base                  = 10,\n    bodyBackground        = '',\n    bodyMargin            = 0,\n    bodyMarginStr         = '',\n    bodyObserver          = null,\n    bodyPadding           = '',\n    calculateWidth        = false,\n    doubleEventList       = {'resize':1,'click':1},\n    eventCancelTimer      = 128,\n    firstRun              = true,\n    height                = 1,\n    heightCalcModeDefault = 'bodyOffset',\n    heightCalcMode        = heightCalcModeDefault,\n    initLock              = true,\n    initMsg               = '',\n    inPageLinks           = {},\n    interval              = 32,\n    intervalTimer         = null,\n    logging               = false,\n    msgID                 = '[iFrameSizer]',  //Must match host page msg ID\n    msgIdLen              = msgID.length,\n    myID                  = '',\n    observer              = null,\n    resetRequiredMethods  = {max:1,min:1,bodyScroll:1,documentElementScroll:1},\n    resizeFrom            = 'child',\n    sendPermit            = true,\n    target                = window.parent,\n    targetOriginDefault   = '*',\n    tolerance             = 0,\n    triggerLocked         = false,\n    triggerLockedTimer    = null,\n    throttledTimer        = 16,\n    width                 = 1,\n    widthCalcModeDefault  = 'scroll',\n    widthCalcMode         = widthCalcModeDefault,\n    win                   = window,\n    messageCallback       = function() { warn('MessageCallback function not defined'); },\n    readyCallback         = function() {},\n    pageInfoCallback      = function() {},\n    customCalcMethods     = {\n      height: function() {\n        warn('Custom height calculation function not defined');\n        return document.documentElement.offsetHeight;\n      },\n      width: function() {\n        warn('Custom width calculation function not defined');\n        return document.body.scrollWidth;\n      }\n    },\n    eventHandlersByName   = {},\n    passiveSupported = false,\n    onceSupported = false;\n\n  function noop() {}\n\n  try {\n    var options = Object.create({}, {\n      passive: {get: function() { passiveSupported = true; }},\n      once: {get: function() { onceSupported = true; }},\n    });\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop, options);\n  } catch (e) { /* */ }\n\n  function addEventListener(el,evt,func,options) {\n    /* istanbul ignore else */ // Not testable in phantomJS\n    if ('addEventListener' in window) {\n      el.addEventListener(evt,func, passiveSupported ? (options||{}) : false);\n    } else if ('attachEvent' in window) { //IE\n      el.attachEvent('on'+evt,func);\n    }\n  }\n\n  function removeEventListener(el,evt,func) {\n    /* istanbul ignore else */ // Not testable in phantomJS\n    if ('removeEventListener' in window) {\n      el.removeEventListener(evt,func, false);\n    } else if ('detachEvent' in window) { //IE\n      el.detachEvent('on'+evt,func);\n    }\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  //Based on underscore.js\n  function throttle(func) {\n    var\n      context, args, result,\n      timeout = null,\n      previous = 0,\n      later = function() {\n        previous = getNow();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = args = null;\n        }\n      };\n\n    return function() {\n      var now = getNow();\n\n      if (!previous) {\n        previous = now;\n      }\n\n      var remaining = throttledTimer - (now - previous);\n\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > throttledTimer) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n\n        if (!timeout) {\n          context = args = null;\n        }\n\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  }\n\n  var getNow = Date.now || function() {\n    /* istanbul ignore next */ // Not testable in PhantonJS\n    return new Date().getTime();\n  };\n\n  function formatLogMsg(msg) {\n    return msgID + '[' + myID + ']' + ' ' + msg;\n  }\n\n  function log(msg) {\n    if (logging && ('object' === typeof window.console)) {\n      console.log(formatLogMsg(msg));\n    }\n  }\n\n  function warn(msg) {\n    if ('object' === typeof window.console) {\n      console.warn(formatLogMsg(msg));\n    }\n  }\n\n\n  function init() {\n    readDataFromParent();\n    log('Initialising iFrame ('+location.href+')');\n    readDataFromPage();\n    setMargin();\n    setBodyStyle('background',bodyBackground);\n    setBodyStyle('padding',bodyPadding);\n    injectClearFixIntoBodyElement();\n    checkHeightMode();\n    checkWidthMode();\n    stopInfiniteResizingOfIFrame();\n    setupPublicMethods();\n    startEventListeners();\n    inPageLinks = setupInPageLinks();\n    sendSize('init','Init message from host page');\n    readyCallback();\n  }\n\n  function readDataFromParent() {\n\n    function strBool(str) {\n      return 'true' === str ? true : false;\n    }\n\n    var data = initMsg.substr(msgIdLen).split(':');\n\n    myID               = data[0];\n    bodyMargin         = (undefined !== data[1]) ? Number(data[1])   : bodyMargin; //For V1 compatibility\n    calculateWidth     = (undefined !== data[2]) ? strBool(data[2])  : calculateWidth;\n    logging            = (undefined !== data[3]) ? strBool(data[3])  : logging;\n    interval           = (undefined !== data[4]) ? Number(data[4])   : interval;\n    autoResize         = (undefined !== data[6]) ? strBool(data[6])  : autoResize;\n    bodyMarginStr      = data[7];\n    heightCalcMode     = (undefined !== data[8]) ? data[8]           : heightCalcMode;\n    bodyBackground     = data[9];\n    bodyPadding        = data[10];\n    tolerance          = (undefined !== data[11]) ? Number(data[11]) : tolerance;\n    inPageLinks.enable = (undefined !== data[12]) ? strBool(data[12]): false;\n    resizeFrom         = (undefined !== data[13]) ? data[13]         : resizeFrom;\n    widthCalcMode      = (undefined !== data[14]) ? data[14]         : widthCalcMode;\n  }\n\n  function readDataFromPage() {\n    function readData() {\n      var data = window.iFrameResizer;\n\n      log('Reading data from page: ' + JSON.stringify(data));\n\n      messageCallback     = ('messageCallback'         in data) ? data.messageCallback         : messageCallback;\n      readyCallback       = ('readyCallback'           in data) ? data.readyCallback           : readyCallback;\n      targetOriginDefault = ('targetOrigin'            in data) ? data.targetOrigin            : targetOriginDefault;\n      heightCalcMode      = ('heightCalculationMethod' in data) ? data.heightCalculationMethod : heightCalcMode;\n      widthCalcMode       = ('widthCalculationMethod'  in data) ? data.widthCalculationMethod  : widthCalcMode;\n    }\n\n    function setupCustomCalcMethods(calcMode, calcFunc) {\n      if ('function' === typeof calcMode) {\n        log('Setup custom ' + calcFunc + 'CalcMethod');\n        customCalcMethods[calcFunc] = calcMode;\n        calcMode = 'custom';\n      }\n\n      return calcMode;\n    }\n\n    if(('iFrameResizer' in window) && (Object === window.iFrameResizer.constructor)) {\n      readData();\n      heightCalcMode = setupCustomCalcMethods(heightCalcMode, 'height');\n      widthCalcMode  = setupCustomCalcMethods(widthCalcMode,  'width');\n    }\n\n    log('TargetOrigin for parent set to: ' + targetOriginDefault);\n  }\n\n\n  function chkCSS(attr,value) {\n    if (-1 !== value.indexOf('-')) {\n      warn('Negative CSS value ignored for '+attr);\n      value='';\n    }\n    return value;\n  }\n\n  function setBodyStyle(attr,value) {\n    if ((undefined !== value) && ('' !== value) && ('null' !== value)) {\n      document.body.style[attr] = value;\n      log('Body '+attr+' set to \"'+value+'\"');\n    }\n  }\n\n  function setMargin() {\n    //If called via V1 script, convert bodyMargin from int to str\n    if (undefined === bodyMarginStr) {\n      bodyMarginStr = bodyMargin+'px';\n    }\n\n    setBodyStyle('margin',chkCSS('margin',bodyMarginStr));\n  }\n\n  function stopInfiniteResizingOfIFrame() {\n    document.documentElement.style.height = '';\n    document.body.style.height = '';\n    log('HTML & body height set to \"auto\"');\n  }\n\n\n  function manageTriggerEvent(options) {\n\n    var listener = {\n      add:    function(eventName) {\n        function handleEvent() {\n          sendSize(options.eventName,options.eventType);\n        }\n\n        eventHandlersByName[eventName] = handleEvent;\n\n        addEventListener(window,eventName,handleEvent,{passive:true});\n      },\n      remove: function(eventName) {\n        var handleEvent = eventHandlersByName[eventName];\n        delete eventHandlersByName[eventName];\n\n        removeEventListener(window,eventName,handleEvent);\n      }\n    };\n\n    if(options.eventNames && Array.prototype.map) {\n      options.eventName = options.eventNames[0];\n      options.eventNames.map(listener[options.method]);\n    } else {\n      listener[options.method](options.eventName);\n    }\n\n    log(capitalizeFirstLetter(options.method) + ' event listener: ' + options.eventType);\n  }\n\n  function manageEventListeners(method) {\n    manageTriggerEvent({method:method, eventType: 'Animation Start',           eventNames: ['animationstart','webkitAnimationStart'] });\n    manageTriggerEvent({method:method, eventType: 'Animation Iteration',       eventNames: ['animationiteration','webkitAnimationIteration'] });\n    manageTriggerEvent({method:method, eventType: 'Animation End',             eventNames: ['animationend','webkitAnimationEnd'] });\n    manageTriggerEvent({method:method, eventType: 'Input',                     eventName:  'input' });\n    manageTriggerEvent({method:method, eventType: 'Mouse Up',                  eventName:  'mouseup' });\n    manageTriggerEvent({method:method, eventType: 'Mouse Down',                eventName:  'mousedown' });\n    manageTriggerEvent({method:method, eventType: 'Orientation Change',        eventName:  'orientationchange' });\n    manageTriggerEvent({method:method, eventType: 'Print',                     eventName:  ['afterprint', 'beforeprint'] });\n    manageTriggerEvent({method:method, eventType: 'Ready State Change',        eventName:  'readystatechange' });\n    manageTriggerEvent({method:method, eventType: 'Touch Start',               eventName:  'touchstart' });\n    manageTriggerEvent({method:method, eventType: 'Touch End',                 eventName:  'touchend' });\n    manageTriggerEvent({method:method, eventType: 'Touch Cancel',              eventName:  'touchcancel' });\n    manageTriggerEvent({method:method, eventType: 'Transition Start',          eventNames: ['transitionstart','webkitTransitionStart','MSTransitionStart','oTransitionStart','otransitionstart'] });\n    manageTriggerEvent({method:method, eventType: 'Transition Iteration',      eventNames: ['transitioniteration','webkitTransitionIteration','MSTransitionIteration','oTransitionIteration','otransitioniteration'] });\n    manageTriggerEvent({method:method, eventType: 'Transition End',            eventNames: ['transitionend','webkitTransitionEnd','MSTransitionEnd','oTransitionEnd','otransitionend'] });\n    if('child' === resizeFrom) {\n      manageTriggerEvent({method:method, eventType: 'IFrame Resized',        eventName:  'resize' });\n    }\n  }\n\n  function checkCalcMode(calcMode,calcModeDefault,modes,type) {\n    if (calcModeDefault !== calcMode) {\n      if (!(calcMode in modes)) {\n        warn(calcMode + ' is not a valid option for '+type+'CalculationMethod.');\n        calcMode=calcModeDefault;\n      }\n      log(type+' calculation method set to \"'+calcMode+'\"');\n    }\n\n    return calcMode;\n  }\n\n  function checkHeightMode() {\n    heightCalcMode = checkCalcMode(heightCalcMode,heightCalcModeDefault,getHeight,'height');\n  }\n\n  function checkWidthMode() {\n    widthCalcMode = checkCalcMode(widthCalcMode,widthCalcModeDefault,getWidth,'width');\n  }\n\n  function startEventListeners() {\n    if ( true === autoResize ) {\n      manageEventListeners('add');\n      setupMutationObserver();\n    }\n    else {\n      log('Auto Resize disabled');\n    }\n  }\n\n  function stopMsgsToParent() {\n    log('Disable outgoing messages');\n    sendPermit = false;\n  }\n\n  function removeMsgListener() {\n    log('Remove event listener: Message');\n    removeEventListener(window, 'message', receiver);\n  }\n\n  function disconnectMutationObserver() {\n    if (null !== bodyObserver) {\n      /* istanbul ignore next */ // Not testable in PhantonJS\n      bodyObserver.disconnect();\n    }\n  }\n\n  function stopEventListeners() {\n    manageEventListeners('remove');\n    disconnectMutationObserver();\n    clearInterval(intervalTimer);\n  }\n\n  function teardown() {\n    stopMsgsToParent();\n    removeMsgListener();\n    if (true === autoResize) stopEventListeners();\n  }\n\n  function injectClearFixIntoBodyElement() {\n    var clearFix = document.createElement('div');\n    clearFix.style.clear   = 'both';\n    clearFix.style.display = 'block'; //Guard against this having been globally redefined in CSS.\n    document.body.appendChild(clearFix);\n  }\n\n  function setupInPageLinks() {\n\n    function getPagePosition () {\n      return {\n        x: (window.pageXOffset !== undefined) ? window.pageXOffset : document.documentElement.scrollLeft,\n        y: (window.pageYOffset !== undefined) ? window.pageYOffset : document.documentElement.scrollTop\n      };\n    }\n\n    function getElementPosition(el) {\n      var\n        elPosition   = el.getBoundingClientRect(),\n        pagePosition = getPagePosition();\n\n      return {\n        x: parseInt(elPosition.left,10) + parseInt(pagePosition.x,10),\n        y: parseInt(elPosition.top,10)  + parseInt(pagePosition.y,10)\n      };\n    }\n\n    function findTarget(location) {\n      function jumpToTarget(target) {\n        var jumpPosition = getElementPosition(target);\n\n        log('Moving to in page link (#'+hash+') at x: '+jumpPosition.x+' y: '+jumpPosition.y);\n        sendMsg(jumpPosition.y, jumpPosition.x, 'scrollToOffset'); // X&Y reversed at sendMsg uses height/width\n      }\n\n      var\n        hash     = location.split('#')[1] || location, //Remove # if present\n        hashData = decodeURIComponent(hash),\n        target   = document.getElementById(hashData) || document.getElementsByName(hashData)[0];\n\n      if (undefined !== target) {\n        jumpToTarget(target);\n      } else {\n        log('In page link (#' + hash + ') not found in iFrame, so sending to parent');\n        sendMsg(0,0,'inPageLink','#'+hash);\n      }\n    }\n\n    function checkLocationHash() {\n      if ('' !== location.hash && '#' !== location.hash) {\n        findTarget(location.href);\n      }\n    }\n\n    function bindAnchors() {\n      function setupLink(el) {\n        function linkClicked(e) {\n          e.preventDefault();\n\n          /*jshint validthis:true */\n          findTarget(this.getAttribute('href'));\n        }\n\n        if ('#' !== el.getAttribute('href')) {\n          addEventListener(el,'click',linkClicked);\n        }\n      }\n\n      Array.prototype.forEach.call( document.querySelectorAll( 'a[href^=\"#\"]' ), setupLink );\n    }\n\n    function bindLocationHash() {\n      addEventListener(window,'hashchange',checkLocationHash);\n    }\n\n    function initCheck() { //check if page loaded with location hash after init resize\n      setTimeout(checkLocationHash,eventCancelTimer);\n    }\n\n    function enableInPageLinks() {\n      /* istanbul ignore else */ // Not testable in phantonJS\n      if(Array.prototype.forEach && document.querySelectorAll) {\n        log('Setting up location.hash handlers');\n        bindAnchors();\n        bindLocationHash();\n        initCheck();\n      } else {\n        warn('In page linking not fully supported in this browser! (See README.md for IE8 workaround)');\n      }\n    }\n\n    if(inPageLinks.enable) {\n      enableInPageLinks();\n    } else {\n      log('In page linking not enabled');\n    }\n\n    return {\n      findTarget:findTarget\n    };\n  }\n\n  function setupPublicMethods() {\n    log('Enable public methods');\n\n    win.parentIFrame = {\n\n      autoResize: function autoResizeF(resize) {\n        if (true === resize && false === autoResize) {\n          autoResize=true;\n          startEventListeners();\n          //sendSize('autoResize','Auto Resize enabled');\n        } else if (false === resize && true === autoResize) {\n          autoResize=false;\n          stopEventListeners();\n        }\n\n        return autoResize;\n      },\n\n      close: function closeF() {\n        sendMsg(0,0,'close');\n        teardown();\n      },\n\n      getId: function getIdF() {\n        return myID;\n      },\n\n      getPageInfo: function getPageInfoF(callback) {\n        if ('function' === typeof callback) {\n          pageInfoCallback = callback;\n          sendMsg(0,0,'pageInfo');\n        } else {\n          pageInfoCallback = function() {};\n          sendMsg(0,0,'pageInfoStop');\n        }\n      },\n\n      moveToAnchor: function moveToAnchorF(hash) {\n        inPageLinks.findTarget(hash);\n      },\n\n      reset: function resetF() {\n        resetIFrame('parentIFrame.reset');\n      },\n\n      scrollTo: function scrollToF(x,y) {\n        sendMsg(y,x,'scrollTo'); // X&Y reversed at sendMsg uses height/width\n      },\n\n      scrollToOffset: function scrollToF(x,y) {\n        sendMsg(y,x,'scrollToOffset'); // X&Y reversed at sendMsg uses height/width\n      },\n\n      sendMessage: function sendMessageF(msg,targetOrigin) {\n        sendMsg(0,0,'message',JSON.stringify(msg),targetOrigin);\n      },\n\n      setHeightCalculationMethod: function setHeightCalculationMethodF(heightCalculationMethod) {\n        heightCalcMode = heightCalculationMethod;\n        checkHeightMode();\n      },\n\n      setWidthCalculationMethod: function setWidthCalculationMethodF(widthCalculationMethod) {\n        widthCalcMode = widthCalculationMethod;\n        checkWidthMode();\n      },\n\n      setTargetOrigin: function setTargetOriginF(targetOrigin) {\n        log('Set targetOrigin: '+targetOrigin);\n        targetOriginDefault = targetOrigin;\n      },\n\n      size: function sizeF(customHeight, customWidth) {\n        var valString = ''+(customHeight?customHeight:'')+(customWidth?','+customWidth:'');\n        //lockTrigger();\n        sendSize('size','parentIFrame.size('+valString+')', customHeight, customWidth);\n      }\n    };\n  }\n\n  function initInterval() {\n    if ( 0 !== interval ) {\n      log('setInterval: '+interval+'ms');\n      intervalTimer = setInterval(function() {\n        sendSize('interval','setInterval: '+interval);\n      },Math.abs(interval));\n    }\n  }\n\n  /* istanbul ignore next */  //Not testable in PhantomJS\n  function setupBodyMutationObserver() {\n    function addImageLoadListners(mutation) {\n      function addImageLoadListener(element) {\n        if (false === element.complete) {\n          log('Attach listeners to ' + element.src);\n          element.addEventListener('load', imageLoaded, false);\n          element.addEventListener('error', imageError, false);\n          elements.push(element);\n        }\n      }\n\n      if (mutation.type === 'attributes' && mutation.attributeName === 'src') {\n        addImageLoadListener(mutation.target);\n      } else if (mutation.type === 'childList') {\n        Array.prototype.forEach.call(\n          mutation.target.querySelectorAll('img'),\n          addImageLoadListener\n        );\n      }\n    }\n\n    function removeFromArray(element) {\n      elements.splice(elements.indexOf(element),1);\n    }\n\n    function removeImageLoadListener(element) {\n      log('Remove listeners from ' + element.src);\n      element.removeEventListener('load', imageLoaded, false);\n      element.removeEventListener('error', imageError, false);\n      removeFromArray(element);\n    }\n\n    function imageEventTriggered(event,type,typeDesc) {\n      removeImageLoadListener(event.target);\n      sendSize(type, typeDesc + ': ' + event.target.src, undefined, undefined);\n    }\n\n    function imageLoaded(event) {\n      imageEventTriggered(event,'imageLoad','Image loaded');\n    }\n\n    function imageError(event) {\n      imageEventTriggered(event,'imageLoadFailed','Image load failed');\n    }\n\n    function mutationObserved(mutations) {\n      sendSize('mutationObserver','mutationObserver: ' + mutations[0].target + ' ' + mutations[0].type);\n\n      //Deal with WebKit asyncing image loading when tags are injected into the page\n      mutations.forEach(addImageLoadListners);\n    }\n\n    function createMutationObserver() {\n      var\n        target = document.querySelector('body'),\n\n        config = {\n          attributes            : true,\n          attributeOldValue     : false,\n          characterData         : true,\n          characterDataOldValue : false,\n          childList             : true,\n          subtree               : true\n        };\n\n      observer = new MutationObserver(mutationObserved);\n\n      log('Create body MutationObserver');\n      observer.observe(target, config);\n\n      return observer;\n    }\n\n    var\n      elements         = [],\n      MutationObserver = window.MutationObserver || window.WebKitMutationObserver,\n      observer         = createMutationObserver();\n\n    return {\n      disconnect: function () {\n        if ('disconnect' in observer) {\n          log('Disconnect body MutationObserver');\n          observer.disconnect();\n          elements.forEach(removeImageLoadListener);\n        }\n      }\n    };\n  }\n\n  function setupMutationObserver() {\n    var\tforceIntervalTimer = 0 > interval;\n\n    /* istanbul ignore if */ // Not testable in PhantomJS\n    if (window.MutationObserver || window.WebKitMutationObserver) {\n      if (forceIntervalTimer) {\n        initInterval();\n      } else {\n        bodyObserver = setupBodyMutationObserver();\n      }\n    } else {\n      log('MutationObserver not supported in this browser!');\n      initInterval();\n    }\n  }\n\n\n  // document.documentElement.offsetHeight is not reliable, so\n  // we have to jump through hoops to get a better value.\n  function getComputedStyle(prop,el) {\n    /* istanbul ignore next */  //Not testable in PhantomJS\n    function convertUnitsToPxForIE8(value) {\n      var PIXEL = /^\\d+(px)?$/i;\n\n      if (PIXEL.test(value)) {\n        return parseInt(value,base);\n      }\n\n      var\n        style = el.style.left,\n        runtimeStyle = el.runtimeStyle.left;\n\n      el.runtimeStyle.left = el.currentStyle.left;\n      el.style.left = value || 0;\n      value = el.style.pixelLeft;\n      el.style.left = style;\n      el.runtimeStyle.left = runtimeStyle;\n\n      return value;\n    }\n\n    var retVal = 0;\n    el =  el || document.body;\n\n    /* istanbul ignore else */ // Not testable in phantonJS\n    if (('defaultView' in document) && ('getComputedStyle' in document.defaultView)) {\n      retVal = document.defaultView.getComputedStyle(el, null);\n      retVal = (null !== retVal) ? retVal[prop] : 0;\n    } else {//IE8\n      retVal =  convertUnitsToPxForIE8(el.currentStyle[prop]);\n    }\n\n    return parseInt(retVal,base);\n  }\n\n  function chkEventThottle(timer) {\n    if(timer > throttledTimer/2) {\n      throttledTimer = 2*timer;\n      log('Event throttle increased to ' + throttledTimer + 'ms');\n    }\n  }\n\n  //Idea from https://github.com/guardian/iframe-messenger\n  function getMaxElement(side,elements) {\n    var\n      elementsLength = elements.length,\n      elVal          = 0,\n      maxVal         = 0,\n      Side           = capitalizeFirstLetter(side),\n      timer          = getNow();\n\n    for (var i = 0; i < elementsLength; i++) {\n      elVal = elements[i].getBoundingClientRect()[side] + getComputedStyle('margin'+Side,elements[i]);\n      if (elVal > maxVal) {\n        maxVal = elVal;\n      }\n    }\n\n    timer = getNow() - timer;\n\n    log('Parsed '+elementsLength+' HTML elements');\n    log('Element position calculated in ' + timer + 'ms');\n\n    chkEventThottle(timer);\n\n    return maxVal;\n  }\n\n  function getAllMeasurements(dimention) {\n    return [\n      dimention.bodyOffset(),\n      dimention.bodyScroll(),\n      dimention.documentElementOffset(),\n      dimention.documentElementScroll()\n    ];\n  }\n\n  function getTaggedElements(side,tag) {\n    function noTaggedElementsFound() {\n      warn('No tagged elements ('+tag+') found on page');\n      return document.querySelectorAll('body *');\n    }\n\n    var elements = document.querySelectorAll('['+tag+']');\n\n    if (0 === elements.length) noTaggedElementsFound();\n\n    return getMaxElement(side,elements);\n  }\n\n  function getAllElements() {\n    return document.querySelectorAll('body *');\n  }\n\n  var\n    getHeight = {\n      bodyOffset: function getBodyOffsetHeight() {\n        return  document.body.offsetHeight + getComputedStyle('marginTop') + getComputedStyle('marginBottom');\n      },\n\n      offset: function() {\n        return getHeight.bodyOffset(); //Backwards compatability\n      },\n\n      bodyScroll: function getBodyScrollHeight() {\n        return document.body.scrollHeight;\n      },\n\n      custom: function getCustomWidth() {\n        return customCalcMethods.height();\n      },\n\n      documentElementOffset: function getDEOffsetHeight() {\n        return document.documentElement.offsetHeight;\n      },\n\n      documentElementScroll: function getDEScrollHeight() {\n        return document.documentElement.scrollHeight;\n      },\n\n      max: function getMaxHeight() {\n        return Math.max.apply(null,getAllMeasurements(getHeight));\n      },\n\n      min: function getMinHeight() {\n        return Math.min.apply(null,getAllMeasurements(getHeight));\n      },\n\n      grow: function growHeight() {\n        return getHeight.max(); //Run max without the forced downsizing\n      },\n\n      lowestElement: function getBestHeight() {\n        return Math.max(getHeight.bodyOffset() || getHeight.documentElementOffset(), getMaxElement('bottom',getAllElements()));\n      },\n\n      taggedElement: function getTaggedElementsHeight() {\n        return getTaggedElements('bottom','data-iframe-height');\n      }\n    },\n\n    getWidth = {\n      bodyScroll: function getBodyScrollWidth() {\n        return document.body.scrollWidth;\n      },\n\n      bodyOffset: function getBodyOffsetWidth() {\n        return document.body.offsetWidth;\n      },\n\n      custom: function getCustomWidth() {\n        return customCalcMethods.width();\n      },\n\n      documentElementScroll: function getDEScrollWidth() {\n        return document.documentElement.scrollWidth;\n      },\n\n      documentElementOffset: function getDEOffsetWidth() {\n        return document.documentElement.offsetWidth;\n      },\n\n      scroll: function getMaxWidth() {\n        return Math.max(getWidth.bodyScroll(), getWidth.documentElementScroll());\n      },\n\n      max: function getMaxWidth() {\n        return Math.max.apply(null,getAllMeasurements(getWidth));\n      },\n\n      min: function getMinWidth() {\n        return Math.min.apply(null,getAllMeasurements(getWidth));\n      },\n\n      rightMostElement: function rightMostElement() {\n        return getMaxElement('right', getAllElements());\n      },\n\n      taggedElement: function getTaggedElementsWidth() {\n        return getTaggedElements('right', 'data-iframe-width');\n      }\n    };\n\n\n  function sizeIFrame(triggerEvent, triggerEventDesc, customHeight, customWidth) {\n\n    function resizeIFrame() {\n      height = currentHeight;\n      width  = currentWidth;\n\n      sendMsg(height,width,triggerEvent);\n    }\n\n    function isSizeChangeDetected() {\n      function checkTolarance(a,b) {\n        var retVal = Math.abs(a-b) <= tolerance;\n        return !retVal;\n      }\n\n      currentHeight = (undefined !== customHeight)  ? customHeight : getHeight[heightCalcMode]();\n      currentWidth  = (undefined !== customWidth )  ? customWidth  : getWidth[widthCalcMode]();\n\n      return\tcheckTolarance(height,currentHeight) || (calculateWidth && checkTolarance(width,currentWidth));\n    }\n\n    function isForceResizableEvent() {\n      return !(triggerEvent in {'init':1,'interval':1,'size':1});\n    }\n\n    function isForceResizableCalcMode() {\n      return (heightCalcMode in resetRequiredMethods) || (calculateWidth && widthCalcMode in resetRequiredMethods);\n    }\n\n    function logIgnored() {\n      log('No change in size detected');\n    }\n\n    function checkDownSizing() {\n      if (isForceResizableEvent() && isForceResizableCalcMode()) {\n        resetIFrame(triggerEventDesc);\n      } else if (!(triggerEvent in {'interval':1})) {\n        logIgnored();\n      }\n    }\n\n    var\tcurrentHeight,currentWidth;\n\n    if (isSizeChangeDetected() || 'init' === triggerEvent) {\n      lockTrigger();\n      resizeIFrame();\n    } else {\n      checkDownSizing();\n    }\n  }\n\n  var sizeIFrameThrottled = throttle(sizeIFrame);\n\n  function sendSize(triggerEvent, triggerEventDesc, customHeight, customWidth) {\n    function recordTrigger() {\n      if (!(triggerEvent in {'reset':1,'resetPage':1,'init':1})) {\n        log( 'Trigger event: ' + triggerEventDesc );\n      }\n    }\n\n    function isDoubleFiredEvent() {\n      return  triggerLocked && (triggerEvent in doubleEventList);\n    }\n\n    if (!isDoubleFiredEvent()) {\n      recordTrigger();\n      if (triggerEvent === 'init') {\n        sizeIFrame(triggerEvent, triggerEventDesc, customHeight, customWidth);\n      } else {\n        sizeIFrameThrottled(triggerEvent, triggerEventDesc, customHeight, customWidth);\n      }\n    } else {\n      log('Trigger event cancelled: '+triggerEvent);\n    }\n  }\n\n  function lockTrigger() {\n    if (!triggerLocked) {\n      triggerLocked = true;\n      log('Trigger event lock on');\n    }\n    clearTimeout(triggerLockedTimer);\n    triggerLockedTimer = setTimeout(function() {\n      triggerLocked = false;\n      log('Trigger event lock off');\n      log('--');\n    },eventCancelTimer);\n  }\n\n  function triggerReset(triggerEvent) {\n    height = getHeight[heightCalcMode]();\n    width  = getWidth[widthCalcMode]();\n\n    sendMsg(height,width,triggerEvent);\n  }\n\n  function resetIFrame(triggerEventDesc) {\n    var hcm = heightCalcMode;\n    heightCalcMode = heightCalcModeDefault;\n\n    log('Reset trigger event: ' + triggerEventDesc);\n    lockTrigger();\n    triggerReset('reset');\n\n    heightCalcMode = hcm;\n  }\n\n  function sendMsg(height,width,triggerEvent,msg,targetOrigin) {\n    function setTargetOrigin() {\n      if (undefined === targetOrigin) {\n        targetOrigin = targetOriginDefault;\n      } else {\n        log('Message targetOrigin: '+targetOrigin);\n      }\n    }\n\n    function sendToParent() {\n      var\n        size  = height + ':' + width,\n        message = myID + ':' +  size + ':' + triggerEvent + (undefined !== msg ? ':' + msg : '');\n\n      log('Sending message to host page (' + message + ')');\n      target.postMessage( msgID + message, targetOrigin);\n    }\n\n    if(true === sendPermit) {\n      setTargetOrigin();\n      sendToParent();\n    }\n  }\n\n  function receiver(event) {\n    var processRequestFromParent = {\n      init: function initFromParent() {\n        initMsg = event.data;\n        target  = event.source;\n\n        init();\n        firstRun = false;\n        setTimeout(function() { initLock = false;},eventCancelTimer);\n      },\n\n      reset: function resetFromParent() {\n        if (!initLock) {\n          log('Page size reset by host page');\n          triggerReset('resetPage');\n        } else {\n          log('Page reset ignored by init');\n        }\n      },\n\n      resize: function resizeFromParent() {\n        sendSize('resizeParent','Parent window requested size check');\n      },\n\n      moveToAnchor: function moveToAnchorF() {\n        inPageLinks.findTarget(getData());\n      },\n      inPageLink: function inPageLinkF() {this.moveToAnchor();}, //Backward compatability\n\n      pageInfo: function pageInfoFromParent() {\n        var msgBody = getData();\n        log('PageInfoFromParent called from parent: ' + msgBody );\n        pageInfoCallback(JSON.parse(msgBody));\n        log(' --');\n      },\n\n      message: function messageFromParent() {\n        var msgBody = getData();\n\n        log('MessageCallback called from parent: ' + msgBody );\n        messageCallback(JSON.parse(msgBody));\n        log(' --');\n      }\n    };\n\n    function isMessageForUs() {\n      return msgID === (''+event.data).substr(0,msgIdLen); //''+ Protects against non-string messages\n    }\n\n    function getMessageType() {\n      return event.data.split(']')[1].split(':')[0];\n    }\n\n    function getData() {\n      return event.data.substr(event.data.indexOf(':')+1);\n    }\n\n    function isMiddleTier() {\n      return !(typeof module !== 'undefined' && module.exports) && ('iFrameResize' in window) ||\n        ('jQuery' in window) && ('iFrameResize' in window.jQuery.prototype);\n    }\n\n    function isInitMsg() {\n      //Test if this message is from a child below us. This is an ugly test, however, updating\n      //the message format would break backwards compatibity.\n      return event.data.split(':')[2] in {'true':1,'false':1};\n    }\n\n    function callFromParent() {\n      var messageType = getMessageType();\n\n      if (messageType in processRequestFromParent) {\n        processRequestFromParent[messageType]();\n      } else if (!isMiddleTier() && !isInitMsg()) {\n        warn('Unexpected message ('+event.data+')');\n      }\n    }\n\n    function processMessage() {\n      if (false === firstRun) {\n        callFromParent();\n      } else if (isInitMsg()) {\n        processRequestFromParent.init();\n      } else {\n        log('Ignored message of type \"' + getMessageType() + '\". Received before initialization.');\n      }\n    }\n\n    if (isMessageForUs()) {\n      processMessage();\n    }\n  }\n\n  //Normally the parent kicks things off when it detects the iFrame has loaded.\n  //If this script is async-loaded, then tell parent page to retry init.\n  function chkLateLoaded() {\n    if('loading' !== document.readyState) {\n      window.parent.postMessage('[iFrameResizerChild]Ready','*');\n    }\n  }\n\n  addEventListener(window, 'message', receiver);\n  addEventListener(window, 'readystatechange', chkLateLoaded);\n  chkLateLoaded();\n\n  \n\n})();\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.crossfilter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nmodule.exports = require(\"./src/crossfilter\").crossfilter;\n\n},{\"./src/crossfilter\":6}],2:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    object = undefined;\n    length = 1;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nmodule.exports = result;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(require,module,exports){\nmodule.exports={\"version\":\"1.4.6\"}\n},{}],4:[function(require,module,exports){\nif (typeof Uint8Array !== \"undefined\") {\n  var crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  var crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  var crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  var crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  var crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\n\n// An arbitrarily-wide array of bitmasks\nfunction crossfilter_bitarray(n) {\n  this.length = n;\n  this.subarrays = 1;\n  this.width = 8;\n  this.masks = {\n    0: 0\n  }\n\n  this[0] = crossfilter_array8(n);\n}\n\ncrossfilter_bitarray.prototype.lengthen = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i] = crossfilter_arrayLengthen(this[i], n);\n  }\n  this.length = n;\n};\n\n// Reserve a new bit index in the array, returns {offset, one}\ncrossfilter_bitarray.prototype.add = function() {\n  var m, w, one, i, len;\n\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    m = this.masks[i];\n    w = this.width - (32 * i);\n    one = ~m & -~m;\n\n    if (w >= 32 && !one) {\n      continue;\n    }\n\n    if (w < 32 && (one & (1 << w))) {\n      // widen this subarray\n      this[i] = crossfilter_arrayWiden(this[i], w <<= 1);\n      this.width = 32 * i + w;\n    }\n\n    this.masks[i] |= one;\n\n    return {\n      offset: i,\n      one: one\n    };\n  }\n\n  // add a new subarray\n  this[this.subarrays] = crossfilter_array8(this.length);\n  this.masks[this.subarrays] = 1;\n  this.width += 8;\n  return {\n    offset: this.subarrays++,\n    one: 1\n  };\n};\n\n// Copy record from index src to index dest\ncrossfilter_bitarray.prototype.copy = function(dest, src) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i][dest] = this[i][src];\n  }\n};\n\n// Truncate the array to the given length\ncrossfilter_bitarray.prototype.truncate = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    for (var j = this.length - 1; j >= n; j--) {\n      this[i][j] = 0;\n    }\n    this[i].length = n;\n  }\n  this.length = n;\n};\n\n// Checks that all bits for the given index are 0\ncrossfilter_bitarray.prototype.zero = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given index are 0 except for possibly one\ncrossfilter_bitarray.prototype.zeroExcept = function(n, offset, zero) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (i === offset ? this[i][n] & zero : this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given indez are 0 except for the specified mask.\n// The mask should be an array of the same size as the filter subarrays width.\ncrossfilter_bitarray.prototype.zeroExceptMask = function(n, mask) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] & mask[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks that only the specified bit is set for the given index\ncrossfilter_bitarray.prototype.only = function(n, offset, one) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] != (i === offset ? one : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that only the specified bit is set for the given index except for possibly one other\ncrossfilter_bitarray.prototype.onlyExcept = function(n, offset, zero, onlyOffset, onlyOne) {\n  var mask;\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    mask = this[i][n];\n    if (i === offset)\n      mask &= zero;\n    if (mask != (i === onlyOffset ? onlyOne : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = {\n  array8: crossfilter_arrayUntyped,\n  array16: crossfilter_arrayUntyped,\n  array32: crossfilter_arrayUntyped,\n  arrayLengthen: crossfilter_arrayLengthenUntyped,\n  arrayWiden: crossfilter_arrayWidenUntyped,\n  bitarray: crossfilter_bitarray\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\n\nmodule.exports = bisect_by(crossfilter_identity);\nmodule.exports.by = bisect_by; // assign the raw function to the export as well\n\n},{\"./identity\":10}],6:[function(require,module,exports){\n'use strict';\n\nvar xfilterArray = require('./array');\nvar xfilterFilter = require('./filter');\nvar crossfilter_identity = require('./identity');\nvar crossfilter_null = require('./null');\nvar crossfilter_zero = require('./zero');\nvar xfilterHeapselect = require('./heapselect');\nvar xfilterHeap = require('./heap');\nvar bisect = require('./bisect');\nvar insertionsort = require('./insertionsort');\nvar permute = require('./permute');\nvar quicksort = require('./quicksort');\nvar xfilterReduce = require('./reduce');\nvar packageJson = require('./../package.json'); // require own package.json for the version field\nvar result = require('lodash.result');\n\n// constants\nvar REMOVED_INDEX = -1;\n\n// expose API exports\nexports.crossfilter = crossfilter;\nexports.crossfilter.heap = xfilterHeap;\nexports.crossfilter.heapselect = xfilterHeapselect;\nexports.crossfilter.bisect = bisect;\nexports.crossfilter.insertionsort = insertionsort;\nexports.crossfilter.permute = permute;\nexports.crossfilter.quicksort = quicksort;\nexports.crossfilter.version = packageJson.version; // please note use of \"package-json-versionify\" transform\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size,\n    all: all,\n    allFiltered: allFiltered,\n    onChange: onChange,\n    isElementFiltered: isElementFiltered\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      filters, // 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = [], // when data is removed\n      callbacks = [];\n\n  filters = new xfilterArray.bitarray(0);\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters.lengthen(n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n      triggerOnChange('dataAdded');\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters, or if a predicate function is passed,\n  // removes all records matching the predicate (ignoring filters).\n  function removeData(predicate) {\n    var // Mapping from old record indexes to new indexes (after records removed)\n        newIndex = crossfilter_index(n, n),\n        removed = [],\n        usePred = typeof predicate === 'function',\n        shouldRemove = function (i) {\n          return usePred ? predicate(data[i], i) : filters.zero(i)\n        };\n\n    for (var index1 = 0, index2 = 0; index1 < n; ++index1) {\n      if ( shouldRemove(index1) ) {\n        removed.push(index1);\n        newIndex[index1] = REMOVED_INDEX;\n      } else {\n        newIndex[index1] = index2++;\n      }\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(-1, -1, [], removed, true); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var index3 = 0, index4 = 0; index3 < n; ++index3) {\n      if ( newIndex[index3] !== REMOVED_INDEX ) {\n        if (index3 !== index4) filters.copy(index4, index3), data[index4] = data[index3];\n        ++index4;\n      }\n    }\n\n    data.length = n = index4;\n    filters.truncate(index4);\n    triggerOnChange('dataRemoved');\n  }\n\n  function maskForDimensions(dimensions) {\n    var n,\n        d,\n        len,\n        id,\n        mask = Array(filters.subarrays);\n    for (n = 0; n < filters.subarrays; n++) { mask[n] = ~0; }\n    for (d = 0, len = dimensions.length; d < len; d++) {\n      // The top bits of the ID are the subarray offset and the lower bits are the bit\n      // offset of the \"one\" mask.\n      id = dimensions[d].id();\n      mask[id >> 7] &= ~(0x1 << (id & 0x3f));\n    }\n    return mask;\n  }\n\n  // Return true if the data element at index i is filtered IN.\n  // Optionally, ignore the filters of any dimensions in the ignore_dimensions list.\n  function isElementFiltered(i, ignore_dimensions) {\n    var mask = maskForDimensions(ignore_dimensions || []);\n    return filters.zeroExceptMask(i,mask);\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value, iterable) {\n\n    if (typeof value === 'string') {\n      var accessorPath = value;\n      value = function(d) { return result(d, accessorPath); };\n    }\n\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      currentFilter: currentFilter,\n      hasCurrentFilter: hasCurrentFilter,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose, // for backwards-compatibility\n      accessor: value,\n      id: function() { return id; }\n    };\n\n    var one, // lowest unset bit as mask, e.g., 00001000\n        zero, // inverted one, e.g., 11110111\n        offset, // offset into the filters arrays\n        id, // unique ID for this dimension (reused when dimensions are disposed)\n        values, // sorted, cached array\n        index, // maps sorted value index -> record index (in data)\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        iterablesIndexCount,\n        newIterablesIndexCount,\n        iterablesIndexFilterStatus,\n        newIterablesIndexFilterStatus,\n        iterablesEmptyRows = [],\n        sort = quicksort.by(function(i) { return newValues[i]; }),\n        refilter = xfilterFilter.filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        filterValue, // the value used for filtering (value, array, function or undefined)\n        filterValuePresent, // true if filterValue contains something\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0,\n        t = 0,\n        k;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Add a new dimension in the filter bitmap and store the offset and bitmask.\n    var tmp = filters.add();\n    offset = tmp.offset;\n    one = tmp.one;\n    zero = ~one;\n\n    // Create a unique ID for the dimension\n    // IDs will be re-used if dimensions are disposed.\n    // For internal use the ID is the subarray offset shifted left 7 bits or'd with the\n    // bit offset of the set bit in the dimension's \"one\" mask.\n    id = (offset << 7) | (Math.log(one) / Math.log(2));\n\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      if (iterable){\n        // Count all the values\n        t = 0;\n        j = 0;\n        k = [];\n\n        for (var i0 = 0; i0 < newData.length; i0++) {\n          for(j = 0, k = value(newData[i0]); j < k.length; j++) {\n            t++;\n          }\n        }\n\n        newValues = [];\n        newIterablesIndexCount = crossfilter_range(newData.length);\n        newIterablesIndexFilterStatus = crossfilter_index(t,1);\n        var unsortedIndex = crossfilter_range(t);\n\n        for (var l = 0, index1 = 0; index1 < newData.length; index1++) {\n          k = value(newData[index1])\n          //\n          if(!k.length){\n            newIterablesIndexCount[index1] = 0;\n            iterablesEmptyRows.push(index1 + n0);\n            continue;\n          }\n          newIterablesIndexCount[index1] = k.length\n          for (j = 0; j < k.length; j++) {\n            newValues.push(k[j]);\n            unsortedIndex[l] = index1;\n            l++;\n          }\n        }\n\n        // Create the Sort map used to sort both the values and the valueToData indices\n        var sortMap = sort(crossfilter_range(t), 0, t);\n\n        // Use the sortMap to sort the newValues\n        newValues = permute(newValues, sortMap);\n\n\n        // Use the sortMap to sort the unsortedIndex map\n        // newIndex should be a map of sortedValue -> crossfilterData\n        newIndex = permute(unsortedIndex, sortMap)\n\n      } else{\n        // Permute new values into natural order using a standard sorted index.\n        newValues = newData.map(value);\n        newIndex = sort(crossfilter_range(n1), 0, n1);\n        newValues = permute(newValues, newIndex);\n      }\n\n      if(iterable) {\n        n1 = t;\n      }\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1];\n      if (refilterFunction) {\n        for (var index2 = 0; index2 < n1; ++index2) {\n          if (!refilterFunction(newValues[index2], index2)) {\n            filters[offset][newIndex[index2] + n0] |= one;\n            if(iterable) newIterablesIndexFilterStatus[index2] = 1;\n          }\n        }\n      } else {\n        for (var index3 = 0; index3 < lo1; ++index3) {\n          filters[offset][newIndex[index3] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index3] = 1;\n        }\n        for (var index4 = hi1; index4 < n1; ++index4) {\n          filters[offset][newIndex[index4] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index4] = 1;\n        }\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        iterablesIndexCount = newIterablesIndexCount;\n        iterablesIndexFilterStatus = newIterablesIndexFilterStatus;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n\n\n      var oldValues = values,\n        oldIndex = index,\n        oldIterablesIndexFilterStatus = iterablesIndexFilterStatus,\n        old_n0,\n        i1 = 0;\n\n      i0 = 0;\n\n      if(iterable){\n        old_n0 = n0\n        n0 = oldValues.length;\n        n1 = t\n      }\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = iterable ? new Array(n0 + n1) : new Array(n);\n      index = iterable ? new Array(n0 + n1) : crossfilter_index(n, n);\n      if(iterable) iterablesIndexFilterStatus = crossfilter_index(n0 + n1, 1);\n\n      // Concatenate the newIterablesIndexCount onto the old one.\n      if(iterable) {\n        var oldiiclength = iterablesIndexCount.length;\n        iterablesIndexCount = xfilterArray.arrayLengthen(iterablesIndexCount, n);\n        for(var j=0; j+oldiiclength < n; j++) {\n          iterablesIndexCount[j+oldiiclength] = newIterablesIndexCount[j];\n        }\n      }\n\n      // Merge the old and new sorted values, and old and new index.\n      var index5 = 0;\n      for (; i0 < n0 && i1 < n1; ++index5) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[index5] = oldValues[i0];\n          if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n          index[index5] = oldIndex[i0++];\n        } else {\n          values[index5] = newValues[i1];\n          if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n          index[index5] = newIndex[i1++] + (iterable ? old_n0 : n0);\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++index5) {\n        values[index5] = oldValues[i0];\n        if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n        index[index5] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++index5) {\n        values[index5] = newValues[i1];\n        if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n        index[index5] = newIndex[i1] + (iterable ? old_n0 : n0);\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      if (iterable) {\n        for (var i0 = 0, i1 = 0; i0 < iterablesEmptyRows.length; i0++) {\n          if (reIndex[iterablesEmptyRows[i0]] !== REMOVED_INDEX) {\n            iterablesEmptyRows[i1] = reIndex[iterablesEmptyRows[i0]];\n            i1++;\n          }\n        }\n        iterablesEmptyRows.length = i1;\n        for (i0 = 0, i1 = 0; i0 < n; i0++) {\n          if (reIndex[i0] !== REMOVED_INDEX) {\n            if (i1 !== i0) iterablesIndexCount[i1] = iterablesIndexCount[i0];\n            i1++;\n          }\n        }\n        iterablesIndexCount.length = i1;\n      }\n      // Rewrite our index, overwriting removed values\n      var n0 = values.length;\n      for (var i = 0, j = 0, oldDataIndex; i < n0; ++i) {\n        oldDataIndex = index[i];\n        if (reIndex[oldDataIndex] !== REMOVED_INDEX) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[oldDataIndex];\n          if (iterable) {\n            iterablesIndexFilterStatus[j] = iterablesIndexFilterStatus[i];\n          }\n          ++j;\n        }\n      }\n      values.length = j;\n      if (iterable) iterablesIndexFilterStatus.length = j;\n      while (j < n0) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; }, bounds[0] === 0 && bounds[1] === values.length);\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [];\n\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      if(!iterable) {\n        // Flip filters normally.\n\n        for(i=0; i<added.length; i++) {\n          filters[offset][added[i]] ^= one;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          filters[offset][removed[i]] ^= one;\n        }\n\n      } else {\n        // For iterables, we need to figure out if the row has been completely removed vs partially included\n        // Only count a row as added if it is not already being aggregated. Only count a row\n        // as removed if the last element being aggregated is removed.\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          iterablesIndexCount[added[i]]++\n          iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n          if(iterablesIndexCount[added[i]] === 1) {\n            filters[offset][added[i]] ^= one;\n            newAdded.push(added[i]);\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          iterablesIndexCount[removed[i]]--\n          iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n          if(iterablesIndexCount[removed[i]] === 0) {\n            filters[offset][removed[i]] ^= one;\n            newRemoved.push(removed[i]);\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(bounds[0] === 0 && bounds[1] === values.length) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      filterValue = value;\n      filterValuePresent = true;\n      return filterIndexBounds((refilter = xfilterFilter.filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      filterValue = range;\n      filterValuePresent = true;\n      return filterIndexBounds((refilter = xfilterFilter.filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      filterValue = undefined;\n      filterValuePresent = false;\n      return filterIndexBounds((refilter = xfilterFilter.filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      filterValue = f;\n      filterValuePresent = true;\n      \n      refilterFunction = f;\n      refilter = xfilterFilter.filterAll;\n\n      filterIndexFunction(f, false);\n\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f, filterAll) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [],\n          indexLength = values.length;\n\n      if(!iterable) {\n        for (i = 0; i < indexLength; ++i) {\n          if (!(filters[offset][k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n            if (x) added.push(k);\n            else removed.push(k);\n          }\n        }\n      }\n\n      if(iterable) {\n        for(i=0; i < indexLength; ++i) {\n          if(f(values[i], i)) {\n            added.push(index[i]);\n            valueIndexAdded.push(i);\n          } else {\n            removed.push(index[i]);\n            valueIndexRemoved.push(i);\n          }\n        }\n      }\n\n      if(!iterable) {\n        for(i=0; i<added.length; i++) {\n          if(filters[offset][added[i]] & one) filters[offset][added[i]] &= zero;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          if(!(filters[offset][removed[i]] & one)) filters[offset][removed[i]] |= one;\n        }\n      } else {\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          // First check this particular value needs to be added\n          if(iterablesIndexFilterStatus[valueIndexAdded[i]] === 1) {\n            iterablesIndexCount[added[i]]++\n            iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n            if(iterablesIndexCount[added[i]] === 1) {\n              filters[offset][added[i]] ^= one;\n              newAdded.push(added[i]);\n            }\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          // First check this particular value needs to be removed\n          if(iterablesIndexFilterStatus[valueIndexRemoved[i]] === 0) {\n            iterablesIndexCount[removed[i]]--\n            iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n            if(iterablesIndexCount[removed[i]] === 0) {\n              filters[offset][removed[i]] ^= one;\n              newRemoved.push(removed[i]);\n            }\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(filterAll) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n    }\n    \n    function currentFilter() {\n      return filterValue;\n    }\n    \n    function hasCurrentFilter() {\n      return filterValuePresent;\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k, top_offset) {\n      var array = [],\n          i = hi0,\n          j,\n          toSkip = 0;\n\n      if(top_offset && top_offset > 0) toSkip = top_offset;\n\n      while (--i >= lo0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n      }\n\n      if(iterable){\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          // Add row with empty iterable column at the end\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k, bottom_offset) {\n      var array = [],\n          i,\n          j,\n          toSkip = 0;\n\n      if(bottom_offset && bottom_offset > 0) toSkip = bottom_offset;\n\n      if(iterable) {\n        // Add row with empty iterable column at the top\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      i = lo0;\n\n      while (i < hi0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null,\n          n0old;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n\n        if(iterable) {\n          n0old = n0\n          n0 = values.length - newValues.length\n          n1 = newValues.length;\n        }\n\n        var oldGroups = groups,\n            reIndex = iterable ? [] : crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            remove = reduceRemove,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n        if (resetNeeded) remove = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        if(iterable){\n          groupIndex = k0 ? groupIndex : [];\n        }\n        else{\n          groupIndex = k0 > 1 ? xfilterArray.arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n        }\n\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            g0 = oldGroups[++i0];\n            if (g0) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n\n          while (x1 <= x) {\n            j = newIndex[i1] + (iterable ? n0old : n0)\n\n\n            if(iterable){\n              if(groupIndex[j]){\n                groupIndex[j].push(k)\n              }\n              else{\n                groupIndex[j] = [k]\n              }\n            }\n            else{\n              groupIndex[j] = k;\n            }\n\n            // Always add new values to groups. Only remove when not in filter.\n            // This gives groups full information on data life-cycle.\n            g.value = add(g.value, data[j], true);\n            if (!filters.zeroExcept(j, offset, zero)) g.value = remove(g.value, data[j], false);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater th1an all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n\n        // Fill in gaps with empty arrays where there may have been rows with empty iterables\n        if(iterable){\n          for (var index1 = 0; index1 < n; index1++) {\n            if(!groupIndex[index1]){\n              groupIndex[index1] = [];\n            }\n          }\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if(k > i0){\n          if(iterable){\n            for (i0 = 0; i0 < n0old; ++i0) {\n              for (index1 = 0; index1 < groupIndex[i0].length; index1++) {\n                groupIndex[i0][index1] = reIndex[groupIndex[i0][index1]];\n              }\n            }\n          }\n          else{\n            for (i0 = 0; i0 < n0; ++i0) {\n              groupIndex[i0] = reIndex[groupIndex[i0]];\n            }\n          }\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1 || iterable) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if(iterable){\n            k++\n            return\n          }\n          if (++k === groupCapacity) {\n            reIndex = xfilterArray.arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = xfilterArray.arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData(reIndex) {\n        if (k > 1 || iterable) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK),\n              i,\n              i0,\n              j;\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          if (!iterable) {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n                ++j;\n              }\n            }\n          } else {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                groupIndex[j] = groupIndex[i];\n                for (i0 = 0; i0 < groupIndex[j].length; i0++) {\n                  seenGroups[groupIndex[j][i0]] = 1;\n                }\n                ++j;\n              }\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1 || iterable) {\n            // Reindex the group index using seenGroups to find the new index.\n            if (!iterable) {\n              for (i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n            } else {\n              for (i = 0; i < j; ++i) {\n                for (i0 = 0; i0 < groupIndex[i].length; ++i0) {\n                  groupIndex[i][i0] = seenGroups[groupIndex[i][i0]];\n                }\n              }\n            }\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1 || iterable\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var index3 = 0; index3 < n; ++index3) if (reIndex[index3] !== REMOVED_INDEX) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateMany(filterOne, filterOffset, added, removed, notFilter) {\n\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            j,\n            k,\n            n,\n            g;\n\n        if(iterable){\n          // Add the added values.\n          for (i = 0, n = added.length; i < n; ++i) {\n            if (filters.zeroExcept(k = added[i], offset, zero)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceAdd(g.value, data[k], false, j);\n              }\n            }\n          }\n\n          // Remove the removed values.\n          for (i = 0, n = removed.length; i < n; ++i) {\n            if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceRemove(g.value, data[k], notFilter, j);\n              }\n            }\n          }\n          return;\n        }\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateOne(filterOne, filterOffset, added, removed, notFilter) {\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            j,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        if(iterable){\n          for (i = 0; i < n; ++i) {\n            for (j = 0; j < groupIndex[i].length; j++) {\n              g = groups[groupIndex[i][j]];\n              g.value = reduceAdd(g.value, data[i], true, j);\n            }\n          }\n          for (i = 0; i < n; ++i) {\n            if (!filters.zeroExcept(i, offset, zero)) {\n              for (j = 0; j < groupIndex[i].length; j++) {\n                g = groups[groupIndex[i][j]];\n                g.value = reduceRemove(g.value, data[i], false, j);\n              }\n            }\n          }\n          return;\n        }\n\n        for (i = 0; i < n; ++i) {\n          g = groups[groupIndex[i]];\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        for (i = 0; i < n; ++i) {\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = xfilterHeapselect.by(valueOf);\n        heap = xfilterHeap.by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        i = dimensionGroups.indexOf(group);\n        if (i >= 0) dimensionGroups.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      filters.masks[offset] &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Cycle through all the values.\n      for (i = n0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, filterOffset, added, removed, notFilter) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (filters.zero(k = added[i])) {\n          reduceValue = reduceAdd(reduceValue, data[k], notFilter);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters.only(k = removed[i], filterOffset, filterOne)) {\n          reduceValue = reduceRemove(reduceValue, data[k], notFilter);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      // Cycle through all the values.\n      for (i = 0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if it is filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i, 1);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i, 1);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  // Returns the raw row data contained in this crossfilter\n  function all(){\n    return data;\n  }\n\n  // Returns row data with all dimension filters applied, except for filters in ignore_dimensions\n  function allFiltered(ignore_dimensions) {\n    var array = [],\n        i = 0,\n        mask = maskForDimensions(ignore_dimensions || []);\n\n      for (i = 0; i < n; i++) {\n        if (filters.zeroExceptMask(i, mask)) {\n          array.push(data[i]);\n        }\n      }\n\n      return array;\n  }\n\n  function onChange(cb){\n    if(typeof cb !== 'function'){\n      /* eslint no-console: 0 */\n      console.warn('onChange callback parameter must be a function!');\n      return;\n    }\n    callbacks.push(cb);\n    return function(){\n      callbacks.splice(callbacks.indexOf(cb), 1);\n    };\n  }\n\n  function triggerOnChange(eventName){\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i](eventName);\n    }\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? xfilterArray.array8 : m < 0x10001\n      ? xfilterArray.array16\n      : xfilterArray.array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n\n},{\"./../package.json\":3,\"./array\":4,\"./bisect\":5,\"./filter\":7,\"./heap\":8,\"./heapselect\":9,\"./identity\":10,\"./insertionsort\":11,\"./null\":12,\"./permute\":13,\"./quicksort\":14,\"./reduce\":15,\"./zero\":16,\"lodash.result\":2}],7:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\n\nmodule.exports = {\n  filterExact: crossfilter_filterExact,\n  filterRange: crossfilter_filterRange,\n  filterAll: crossfilter_filterAll\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\n\nmodule.exports = heap_by(crossfilter_identity);\nmodule.exports.by = heap_by;\n\n},{\"./identity\":10}],9:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\nvar xFilterHeap = require('./heap');\n\nfunction heapselect_by(f) {\n  var heap = xFilterHeap.by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\n\nmodule.exports = heapselect_by(crossfilter_identity);\nmodule.exports.by = heapselect_by; // assign the raw function to the export as well\n\n},{\"./heap\":8,\"./identity\":10}],10:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_identity(d) {\n  return d;\n}\n\nmodule.exports = crossfilter_identity;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n\nmodule.exports = insertionsort_by(crossfilter_identity);\nmodule.exports.by = insertionsort_by;\n\n},{\"./identity\":10}],12:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_null() {\n  return null;\n}\n\nmodule.exports = crossfilter_null;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nfunction permute(array, index, deep) {\n  for (var i = 0, n = index.length, copy = deep ? JSON.parse(JSON.stringify(array)) : new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\n\nmodule.exports = permute;\n\n},{}],14:[function(require,module,exports){\nvar crossfilter_identity = require('./identity');\nvar xFilterInsertionsort = require('./insertionsort');\n\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see NOTICE and AUTHORS for details.\n\nfunction quicksort_by(f) {\n  var insertionsort = xFilterInsertionsort.by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          /* eslint no-constant-condition: 0 */\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      (function () { // isolate scope\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n\n      (function () { // isolate scope\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            /* eslint no-constant-condition: 0 */\n            while (true) {\n              greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\n\nmodule.exports = quicksort_by(crossfilter_identity);\nmodule.exports.by = quicksort_by;\n\n},{\"./identity\":10,\"./insertionsort\":11}],15:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\n\nmodule.exports = {\n  reduceIncrement: crossfilter_reduceIncrement,\n  reduceDecrement: crossfilter_reduceDecrement,\n  reduceAdd: crossfilter_reduceAdd,\n  reduceSubtract: crossfilter_reduceSubtract\n};\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_zero() {\n  return 0;\n}\n\nmodule.exports = crossfilter_zero;\n\n},{}]},{},[1])(1)\n});\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.reductio=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar reductio_build = require('./build.js');\nvar reductio_accessors = require('./accessors.js');\nvar reductio_parameters = require('./parameters.js');\nvar reductio_postprocess = require('./postprocess');\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nfunction reductio() {\n\tvar parameters = reductio_parameters();\n\n\tvar funcs = {};\n\n\tfunction my(group) {\n\t\t// Start fresh each time.\n\t\tfuncs = {\n\t\t\treduceAdd: function(p) { return p; },\n\t\t\treduceRemove: function(p) { return p; },\n\t\t\treduceInitial: function () { return {}; },\n\t\t};\n\n\t\treductio_build.build(parameters, funcs);\n\n\t\t// If we're doing groupAll\n\t\tif(parameters.groupAll) {\n\t\t\tif(group.top) {\n\t\t\t\tconsole.warn(\"'groupAll' is defined but attempting to run on a standard dimension.group(). Must run on dimension.groupAll().\");\n\t\t\t} else {\n\t\t\t\tvar bisect = crossfilter.bisect.by(function(d) { return d.key; }).left;\n\t\t\t\tvar i, j;\n\t\t\t\tvar keys;\n        var keysLength;\n        var k; // Key\n\t\t\t\tgroup.reduce(\n\t\t\t\t\tfunction(p, v, nf) {\n\t\t\t\t\t\tkeys = parameters.groupAll(v);\n            keysLength = keys.length;\n            for(j=0;j<keysLength;j++) {\n              k = keys[j];\n              i = bisect(p, k, 0, p.length);\n\t\t\t\t\t\t\tif(!p[i] || p[i].key !== k) {\n\t\t\t\t\t\t\t\t// If the group doesn't yet exist, create it first.\n\t\t\t\t\t\t\t\tp.splice(i, 0, { key: k, value: funcs.reduceInitial() });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Then pass the record and the group value to the reducers\n\t\t\t\t\t\t\tfuncs.reduceAdd(p[i].value, v, nf);\n            }\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t},\n\t\t\t\t\tfunction(p, v, nf) {\n\t\t\t\t\t\tkeys = parameters.groupAll(v);\n            keysLength = keys.length;\n            for(j=0;j<keysLength;j++) {\n              i = bisect(p, keys[j], 0, p.length);\n\t\t\t\t\t\t\t// The group should exist or we're in trouble!\n\t\t\t\t\t\t\t// Then pass the record and the group value to the reducers\n\t\t\t\t\t\t\tfuncs.reduceRemove(p[i].value, v, nf);\n            }\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif(!group.all) {\n\t\t\t\t\t// Add an 'all' method for compatibility with standard Crossfilter groups.\n\t\t\t\t\tgroup.all = function() { return this.value(); };\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tgroup.reduce(funcs.reduceAdd, funcs.reduceRemove, funcs.reduceInitial);\n\t\t}\n\n\t\treductio_postprocess(group, parameters, funcs);\n\n\t\treturn group;\n\t}\n\n\treductio_accessors.build(my, parameters);\n\n\treturn my;\n}\n\nrequire('./postprocessors')(reductio);\nreductio_postprocess = reductio_postprocess(reductio);\n\nmodule.exports = reductio;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./accessors.js\":2,\"./build.js\":6,\"./parameters.js\":19,\"./postprocess\":20,\"./postprocessors\":21}],2:[function(require,module,exports){\nvar reductio_parameters = require('./parameters.js');\n\n_assign = function assign(target) {\n\tif (target == null) {\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t}\n\n\tvar output = Object(target);\n\tfor (var index = 1; index < arguments.length; ++index) {\n\t\tvar source = arguments[index];\n\t\tif (source != null) {\n\t\t\tfor (var nextKey in source) {\n\t\t\t\tif(source.hasOwnProperty(nextKey)) {\n\t\t\t\t\toutput[nextKey] = source[nextKey];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n};\n\nfunction accessor_build(obj, p) {\n\t// obj.order = function(value) {\n\t// \tif (!arguments.length) return p.order;\n\t// \tp.order = value;\n\t// \treturn obj;\n\t// };\n\n\t// Converts a string to an accessor function\n\tfunction accessorify(v) {\n\t\tif( typeof v === 'string' ) {\n\t\t\t// Rewrite to a function\n\t\t\tvar tempValue = v;\n\t\t\tvar func = function (d) { return d[tempValue]; }\n\t\t\treturn func;\n\t\t} else {\n\t\t\treturn v;\n\t\t}\n\t}\n\n\t// Converts a string to an accessor function\n\tfunction accessorifyNumeric(v) {\n\t\tif( typeof v === 'string' ) {\n\t\t\t// Rewrite to a function\n\t\t\tvar tempValue = v;\n\t\t\tvar func = function (d) { return +d[tempValue]; }\n\t\t\treturn func;\n\t\t} else {\n\t\t\treturn v;\n\t\t}\n\t}\n\n\tobj.fromObject = function(value) {\n\t\tif(!arguments.length) return p;\n\t\t_assign(p, value);\n\t\treturn obj;\n\t};\n\n\tobj.toObject = function() {\n\t\treturn p;\n\t};\n\n\tobj.count = function(value, propName) {\n\t\tif (!arguments.length) return p.count;\n    if (!propName) {\n      propName = 'count';\n    }\n\t\tp.count = propName;\n\t\treturn obj;\n\t};\n\n\tobj.sum = function(value) {\n\t\tif (!arguments.length) return p.sum;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.sum = value;\n\t\treturn obj;\n\t};\n\n\tobj.avg = function(value) {\n\t\tif (!arguments.length) return p.avg;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\t// We can take an accessor function, a boolean, or a string\n\t\tif( typeof value === 'function' ) {\n\t\t\tif(p.sum && p.sum !== value) console.warn('SUM aggregation is being overwritten by AVG aggregation');\n\t\t\tp.sum = value;\n\t\t\tp.avg = true;\n\t\t\tp.count = 'count';\n\t\t} else {\n\t\t\tp.avg = value;\n\t\t}\n\t\treturn obj;\n\t};\n\n\tobj.exception = function(value) {\n\t\tif (!arguments.length) return p.exceptionAccessor;\n\n\t\tvalue = accessorify(value);\n\n\t\tp.exceptionAccessor = value;\n\t\treturn obj;\n\t};\n\n\tobj.filter = function(value) {\n\t\tif (!arguments.length) return p.filter;\n\t\tp.filter = value;\n\t\treturn obj;\n\t};\n\n\tobj.valueList = function(value) {\n\t\tif (!arguments.length) return p.valueList;\n\n\t\tvalue = accessorify(value);\n\n\t\tp.valueList = value;\n\t\treturn obj;\n\t};\n\n\tobj.median = function(value) {\n\t\tif (!arguments.length) return p.median;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof value === 'function') {\n\t\t\tif(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by median aggregation');\n\t\t\tp.valueList = value;\n\t\t}\n\t\tp.median = value;\n\t\treturn obj;\n\t};\n\n\tobj.min = function(value) {\n\t\tif (!arguments.length) return p.min;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof value === 'function') {\n\t\t\tif(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by min aggregation');\n\t\t\tp.valueList = value;\n\t\t}\n\t\tp.min = value;\n\t\treturn obj;\n\t};\n\n\tobj.max = function(value) {\n\t\tif (!arguments.length) return p.max;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof value === 'function') {\n\t\t\tif(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by max aggregation');\n\t\t\tp.valueList = value;\n\t\t}\n\t\tp.max = value;\n\t\treturn obj;\n\t};\n\n\tobj.exceptionCount = function(value) {\n\t\tif (!arguments.length) return p.exceptionCount;\n\n\t\tvalue = accessorify(value);\n\n\t\tif( typeof value === 'function' ) {\n\t\t\tif(p.exceptionAccessor && p.exceptionAccessor !== value) console.warn('EXCEPTION accessor is being overwritten by exception count aggregation');\n\t\t\tp.exceptionAccessor = value;\n\t\t\tp.exceptionCount = true;\n\t\t} else {\n\t\t\tp.exceptionCount = value;\n\t\t}\n\t\treturn obj;\n\t};\n\n\tobj.exceptionSum = function(value) {\n\t\tif (!arguments.length) return p.exceptionSum;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.exceptionSum = value;\n\t\treturn obj;\n\t};\n\n\tobj.histogramValue = function(value) {\n\t\tif (!arguments.length) return p.histogramValue;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.histogramValue = value;\n\t\treturn obj;\n\t};\n\n\tobj.histogramBins = function(value) {\n\t\tif (!arguments.length) return p.histogramThresholds;\n\t\tp.histogramThresholds = value;\n\t\treturn obj;\n\t};\n\n\tobj.std = function(value) {\n\t\tif (!arguments.length) return p.std;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tif(typeof(value) === 'function') {\n\t\t\tp.sumOfSquares = value;\n\t\t\tp.sum = value;\n\t\t\tp.count = 'count';\n\t\t\tp.std = true;\n\t\t} else {\n\t\t\tp.std = value;\n\t\t}\n\t\treturn obj;\n\t};\n\n\tobj.sumOfSq = function(value) {\n\t\tif (!arguments.length) return p.sumOfSquares;\n\n\t\tvalue = accessorifyNumeric(value);\n\n\t\tp.sumOfSquares = value;\n\t\treturn obj;\n\t};\n\n\tobj.value = function(value, accessor) {\n\t\tif (!arguments.length || typeof value !== 'string' ) {\n\t\t\tconsole.error(\"'value' requires a string argument.\");\n\t\t} else {\n\t\t\tif(!p.values) p.values = {};\n\t\t\tp.values[value] = {};\n\t\t\tp.values[value].parameters = reductio_parameters();\n\t\t\taccessor_build(p.values[value], p.values[value].parameters);\n\t\t\tif(accessor) p.values[value].accessor = accessor;\n\t\t\treturn p.values[value];\n\t\t}\n\t};\n\n\tobj.nest = function(keyAccessorArray) {\n\t\tif(!arguments.length) return p.nestKeys;\n\n\t\tkeyAccessorArray.map(accessorify);\n\n\t\tp.nestKeys = keyAccessorArray;\n\t\treturn obj;\n\t};\n\n\tobj.alias = function(propAccessorObj) {\n\t\tif(!arguments.length) return p.aliasKeys;\n\t\tp.aliasKeys = propAccessorObj;\n\t\treturn obj;\n\t};\n\n\tobj.aliasProp = function(propAccessorObj) {\n\t\tif(!arguments.length) return p.aliasPropKeys;\n\t\tp.aliasPropKeys = propAccessorObj;\n\t\treturn obj;\n\t};\n\n\tobj.groupAll = function(groupTest) {\n\t\tif(!arguments.length) return p.groupAll;\n\t\tp.groupAll = groupTest;\n\t\treturn obj;\n\t};\n\n\tobj.dataList = function(value) {\n\t\tif (!arguments.length) return p.dataList;\n\t\tp.dataList = value;\n\t\treturn obj;\n\t};\n\n\tobj.custom = function(addRemoveInitialObj) {\n\t\tif (!arguments.length) return p.custom;\n\t\tp.custom = addRemoveInitialObj;\n\t\treturn obj;\n\t};\n\n}\n\nvar reductio_accessors = {\n\tbuild: accessor_build\n};\n\nmodule.exports = reductio_accessors;\n\n},{\"./parameters.js\":19}],3:[function(require,module,exports){\nvar reductio_alias = {\n\tinitial: function(prior, path, obj) {\n\t\treturn function (p) {\n\t\t\tif(prior) p = prior(p);\n\t\t\tfunction buildAliasFunction(key){\n\t\t\t\treturn function(){\n\t\t\t\t\treturn obj[key](path(p));\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor(var prop in obj) {\n\t\t\t\tpath(p)[prop] = buildAliasFunction(prop);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_alias;\n},{}],4:[function(require,module,exports){\nvar reductio_alias_prop = {\n\tadd: function (obj, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tfor(var prop in obj) {\n\t\t\t\tpath(p)[prop] = obj[prop](path(p),v);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_alias_prop;\n},{}],5:[function(require,module,exports){\nvar reductio_avg = {\n\tadd: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).avg = path(p).sum / path(p).count;\n\t\t\t} else {\n\t\t\t\tpath(p).avg = 0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).avg = path(p).sum / path(p).count;\n\t\t\t} else {\n\t\t\t\tpath(p).avg = 0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).avg = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_avg;\n},{}],6:[function(require,module,exports){\nvar reductio_filter = require('./filter.js');\nvar reductio_count = require('./count.js');\nvar reductio_sum = require('./sum.js');\nvar reductio_avg = require('./avg.js');\nvar reductio_median = require('./median.js');\nvar reductio_min = require('./min.js');\nvar reductio_max = require('./max.js');\nvar reductio_value_count = require('./value-count.js');\nvar reductio_value_list = require('./value-list.js');\nvar reductio_exception_count = require('./exception-count.js');\nvar reductio_exception_sum = require('./exception-sum.js');\nvar reductio_histogram = require('./histogram.js');\nvar reductio_sum_of_sq = require('./sum-of-squares.js');\nvar reductio_std = require('./std.js');\nvar reductio_nest = require('./nest.js');\nvar reductio_alias = require('./alias.js');\nvar reductio_alias_prop = require('./aliasProp.js');\nvar reductio_data_list = require('./data-list.js');\nvar reductio_custom = require('./custom.js');\n\nfunction build_function(p, f, path) {\n\t// We have to build these functions in order. Eventually we can include dependency\n\t// information and create a dependency graph if the process becomes complex enough.\n\n\tif(!path) path = function (d) { return d; };\n\n\t// Keep track of the original reducers so that filtering can skip back to\n\t// them if this particular value is filtered out.\n\tvar origF = {\n\t\treduceAdd: f.reduceAdd,\n\t\treduceRemove: f.reduceRemove,\n\t\treduceInitial: f.reduceInitial\n\t};\n\n\tif(p.count || p.std) {\n    f.reduceAdd = reductio_count.add(f.reduceAdd, path, p.count);\n    f.reduceRemove = reductio_count.remove(f.reduceRemove, path, p.count);\n    f.reduceInitial = reductio_count.initial(f.reduceInitial, path, p.count);\n\t}\n\n\tif(p.sum) {\n\t\tf.reduceAdd = reductio_sum.add(p.sum, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_sum.remove(p.sum, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_sum.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.avg) {\n\t\tif(!p.count || !p.sum) {\n\t\t\tconsole.error(\"You must set .count(true) and define a .sum(accessor) to use .avg(true).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_avg.add(p.sum, f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_avg.remove(p.sum, f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_avg.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\t// The unique-only reducers come before the value_count reducers. They need to check if\n\t// the value is already in the values array on the group. They should only increment/decrement\n\t// counts if the value not in the array or the count on the value is 0.\n\tif(p.exceptionCount) {\n\t\tif(!p.exceptionAccessor) {\n\t\t\tconsole.error(\"You must define an .exception(accessor) to use .exceptionCount(true).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_exception_count.add(p.exceptionAccessor, f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_exception_count.remove(p.exceptionAccessor, f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_exception_count.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\tif(p.exceptionSum) {\n\t\tif(!p.exceptionAccessor) {\n\t\t\tconsole.error(\"You must define an .exception(accessor) to use .exceptionSum(accessor).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_exception_sum.add(p.exceptionAccessor, p.exceptionSum, f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_exception_sum.remove(p.exceptionAccessor, p.exceptionSum, f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_exception_sum.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\t// Maintain the values array.\n\tif(p.valueList || p.median || p.min || p.max) {\n\t\tf.reduceAdd = reductio_value_list.add(p.valueList, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_value_list.remove(p.valueList, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_value_list.initial(f.reduceInitial, path);\n\t}\n\n\t// Maintain the data array.\n\tif(p.dataList) {\n\t\tf.reduceAdd = reductio_data_list.add(p.dataList, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_data_list.remove(p.dataList, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_data_list.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.median) {\n\t\tf.reduceAdd = reductio_median.add(f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_median.remove(f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_median.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.min) {\n\t\tf.reduceAdd = reductio_min.add(f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_min.remove(f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_min.initial(f.reduceInitial, path);\n\t}\n\n\tif(p.max) {\n\t\tf.reduceAdd = reductio_max.add(f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_max.remove(f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_max.initial(f.reduceInitial, path);\n\t}\n\n\t// Maintain the values count array.\n\tif(p.exceptionAccessor) {\n\t\tf.reduceAdd = reductio_value_count.add(p.exceptionAccessor, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_value_count.remove(p.exceptionAccessor, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_value_count.initial(f.reduceInitial, path);\n\t}\n\n\t// Histogram\n\tif(p.histogramValue && p.histogramThresholds) {\n\t\tf.reduceAdd = reductio_histogram.add(p.histogramValue, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_histogram.remove(p.histogramValue, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_histogram.initial(p.histogramThresholds ,f.reduceInitial, path);\n\t}\n\n\t// Sum of Squares\n\tif(p.sumOfSquares) {\n\t\tf.reduceAdd = reductio_sum_of_sq.add(p.sumOfSquares, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_sum_of_sq.remove(p.sumOfSquares, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_sum_of_sq.initial(f.reduceInitial, path);\n\t}\n\n\t// Standard deviation\n\tif(p.std) {\n\t\tif(!p.sumOfSquares || !p.sum) {\n\t\t\tconsole.error(\"You must set .sumOfSq(accessor) and define a .sum(accessor) to use .std(true). Or use .std(accessor).\");\n\t\t} else {\n\t\t\tf.reduceAdd = reductio_std.add(f.reduceAdd, path);\n\t\t\tf.reduceRemove = reductio_std.remove(f.reduceRemove, path);\n\t\t\tf.reduceInitial = reductio_std.initial(f.reduceInitial, path);\n\t\t}\n\t}\n\n\t// Custom reducer defined by 3 functions : add, remove, initial\n\tif (p.custom) {\n\t\tf.reduceAdd = reductio_custom.add(f.reduceAdd, path, p.custom.add);\n\t\tf.reduceRemove = reductio_custom.remove(f.reduceRemove, path, p.custom.remove);\n\t\tf.reduceInitial = reductio_custom.initial(f.reduceInitial, path, p.custom.initial);\n\t}\n\n\t// Nesting\n\tif(p.nestKeys) {\n\t\tf.reduceAdd = reductio_nest.add(p.nestKeys, f.reduceAdd, path);\n\t\tf.reduceRemove = reductio_nest.remove(p.nestKeys, f.reduceRemove, path);\n\t\tf.reduceInitial = reductio_nest.initial(f.reduceInitial, path);\n\t}\n\n\t// Alias functions\n\tif(p.aliasKeys) {\n\t\tf.reduceInitial = reductio_alias.initial(f.reduceInitial, path, p.aliasKeys);\n\t}\n\n\t// Alias properties - this is less efficient than alias functions\n\tif(p.aliasPropKeys) {\n\t\tf.reduceAdd = reductio_alias_prop.add(p.aliasPropKeys, f.reduceAdd, path);\n\t\t// This isn't a typo. The function is the same for add/remove.\n\t\tf.reduceRemove = reductio_alias_prop.add(p.aliasPropKeys, f.reduceRemove, path);\n\t}\n\n\t// Filters determine if our built-up priors should run, or if it should skip\n\t// back to the filters given at the beginning of this build function.\n\tif (p.filter) {\n\t\tf.reduceAdd = reductio_filter.add(p.filter, f.reduceAdd, origF.reduceAdd, path);\n\t\tf.reduceRemove = reductio_filter.remove(p.filter, f.reduceRemove, origF.reduceRemove, path);\n\t}\n\n\t// Values go last.\n\tif(p.values) {\n\t\tObject.getOwnPropertyNames(p.values).forEach(function(n) {\n\t\t\t// Set up the path on each group.\n\t\t\tvar setupPath = function(prior) {\n\t\t\t\treturn function (p) {\n\t\t\t\t\tp = prior(p);\n\t\t\t\t\tpath(p)[n] = {};\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t};\n\t\t\tf.reduceInitial = setupPath(f.reduceInitial);\n\t\t\tbuild_function(p.values[n].parameters, f, function (p) { return p[n]; });\n\t\t});\n\t}\n}\n\nvar reductio_build = {\n\tbuild: build_function\n};\n\nmodule.exports = reductio_build;\n\n},{\"./alias.js\":3,\"./aliasProp.js\":4,\"./avg.js\":5,\"./count.js\":8,\"./custom.js\":9,\"./data-list.js\":10,\"./exception-count.js\":11,\"./exception-sum.js\":12,\"./filter.js\":13,\"./histogram.js\":14,\"./max.js\":15,\"./median.js\":16,\"./min.js\":17,\"./nest.js\":18,\"./std.js\":23,\"./sum-of-squares.js\":24,\"./sum.js\":25,\"./value-count.js\":26,\"./value-list.js\":27}],7:[function(require,module,exports){\nvar pluck = function(n){\n    return function(d){\n        return d[n];\n    };\n};\n\n// supported operators are sum, avg, and count\n_grouper = function(path, prior){\n    if(!path) path = function(d){return d;};\n    return function(p, v){\n        if(prior) prior(p, v);\n        var x = path(p), y = path(v);\n        if(typeof y.count !== 'undefined') x.count += y.count;\n        if(typeof y.sum !== 'undefined') x.sum += y.sum;\n        if(typeof y.avg !== 'undefined') x.avg = x.sum/x.count;\n        return p;\n    };\n};\n\nreductio_cap = function (prior, f, p) {\n    var obj = f.reduceInitial();\n    // we want to support values so we'll need to know what those are\n    var values = p.values ? Object.keys(p.values) : [];\n    var _othersGrouper = _grouper();\n    if (values.length) {\n        for (var i = 0; i < values.length; ++i) {\n            _othersGrouper = _grouper(pluck(values[i]), _othersGrouper);\n        }\n    }\n    return function (cap, othersName) {\n        if (!arguments.length) return prior();\n        if( cap === Infinity || !cap ) return prior();\n        var all = prior();\n        var slice_idx = cap-1;\n        if(all.length <= cap) return all;\n        var data = all.slice(0, slice_idx);\n        var others = {key: othersName || 'Others'};\n        others.value = f.reduceInitial();\n        for (var i = slice_idx; i < all.length; ++i) {\n            _othersGrouper(others.value, all[i].value);\n        }\n        data.push(others);\n        return data;\n    };\n};\n\nmodule.exports = reductio_cap;\n\n},{}],8:[function(require,module,exports){\nvar reductio_count = {\n\tadd: function(prior, path, propName) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p)[propName]++;\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function(prior, path, propName) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p)[propName]--;\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function(prior, path, propName) {\n\t\treturn function (p) {\n\t\t\tif(prior) p = prior(p);\n\t\t\t// if(p === undefined) p = {};\n\t\t\tpath(p)[propName] = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_count;\n},{}],9:[function(require,module,exports){\nvar reductio_custom = {\n\tadd: function(prior, path, addFn) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\treturn addFn(p, v);\n\t\t};\n\t},\n\tremove: function(prior, path, removeFn) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\treturn removeFn(p, v);\n\t\t};\n\t},\n\tinitial: function(prior, path, initialFn) {\n\t\treturn function (p) {\t\n\t\t\tif(prior) p = prior(p);\n\t\t\treturn initialFn(p);\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_custom;\n},{}],10:[function(require,module,exports){\nvar reductio_data_list = {\n\tadd: function(a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).dataList.push(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function(a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).dataList.splice(path(p).dataList.indexOf(v), 1);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function(prior, path) {\n\t\treturn function (p) {\n\t\t\tif(prior) p = prior(p);\n\t\t\tpath(p).dataList = [];\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_data_list;\n\n},{}],11:[function(require,module,exports){\nvar reductio_exception_count = {\n\tadd: function (a, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only count++ if the p.values array doesn't contain a(v) or if it's 0.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif((!curr || curr[0] !== a(v)) || curr[1] === 0) {\n\t\t\t\tpath(p).exceptionCount++;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only count-- if the p.values array contains a(v) value of 1.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif(curr && curr[0] === a(v) && curr[1] === 1) {\n\t\t\t\tpath(p).exceptionCount--;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).exceptionCount = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_exception_count;\n},{}],12:[function(require,module,exports){\nvar reductio_exception_sum = {\n\tadd: function (a, sum, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only sum if the p.values array doesn't contain a(v) or if it's 0.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif((!curr || curr[0] !== a(v)) || curr[1] === 0) {\n\t\t\t\tpath(p).exceptionSum = path(p).exceptionSum + sum(v);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, sum, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Only sum if the p.values array contains a(v) value of 1.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif(curr && curr[0] === a(v) && curr[1] === 1) {\n\t\t\t\tpath(p).exceptionSum = path(p).exceptionSum - sum(v);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).exceptionSum = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_exception_sum;\n},{}],13:[function(require,module,exports){\nvar reductio_filter = {\n\t// The big idea here is that you give us a filter function to run on values,\n\t// a 'prior' reducer to run (just like the rest of the standard reducers),\n\t// and a reference to the last reducer (called 'skip' below) defined before\n\t// the most recent chain of reducers.  This supports individual filters for\n\t// each .value('...') chain that you add to your reducer.\n\tadd: function (filter, prior, skip) {\n\t\treturn function (p, v, nf) {\n\t\t\tif (filter(v, nf)) {\n\t\t\t\tif (prior) prior(p, v, nf);\n\t\t\t} else {\n\t\t\t\tif (skip) skip(p, v, nf);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (filter, prior, skip) {\n\t\treturn function (p, v, nf) {\n\t\t\tif (filter(v, nf)) {\n\t\t\t\tif (prior) prior(p, v, nf);\n\t\t\t} else {\n\t\t\t\tif (skip) skip(p, v, nf);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_filter;\n\n},{}],14:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_histogram = {\n\tadd: function (a, prior, path) {\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\tvar bisectHisto = crossfilter.bisect.by(function(d) { return d.x; }).right;\n\t\tvar curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tcurr = path(p).histogram[bisectHisto(path(p).histogram, a(v), 0, path(p).histogram.length) - 1];\n\t\t\tcurr.y++;\n\t\t\tcurr.splice(bisect(curr, a(v), 0, curr.length), 0, a(v));\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\tvar bisectHisto = crossfilter.bisect.by(function(d) { return d.x; }).right;\n\t\tvar curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tcurr = path(p).histogram[bisectHisto(path(p).histogram, a(v), 0, path(p).histogram.length) - 1];\n\t\t\tcurr.y--;\n\t\t\tcurr.splice(bisect(curr, a(v), 0, curr.length), 1);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (thresholds, prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).histogram = [];\n\t\t\tvar arr = [];\n\t\t\tfor(var i = 1; i < thresholds.length; i++) {\n\t\t\t\tarr = [];\n\t\t\t\tarr.x = thresholds[i - 1];\n\t\t\t\tarr.dx = (thresholds[i] - thresholds[i - 1]);\n\t\t\t\tarr.y = 0;\n\t\t\t\tpath(p).histogram.push(arr);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_histogram;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(require,module,exports){\nvar reductio_max = {\n\tadd: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n \n\t\t\tpath(p).max = path(p).valueList[path(p).valueList.length - 1];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\t// Check for undefined.\n\t\t\tif(path(p).valueList.length === 0) {\n\t\t\t\tpath(p).max = undefined;\n\t\t\t\treturn p;\n\t\t\t}\n \n\t\t\tpath(p).max = path(p).valueList[path(p).valueList.length - 1];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).max = undefined;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_max;\n},{}],16:[function(require,module,exports){\nvar reductio_median = {\n\tadd: function (prior, path) {\n\t\tvar half;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\thalf = Math.floor(path(p).valueList.length/2);\n \n\t\t\tif(path(p).valueList.length % 2) {\n\t\t\t\tpath(p).median = path(p).valueList[half];\n\t\t\t} else {\n\t\t\t\tpath(p).median = (path(p).valueList[half-1] + path(p).valueList[half]) / 2.0;\n\t\t\t}\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\tvar half;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\thalf = Math.floor(path(p).valueList.length/2);\n\n\t\t\t// Check for undefined.\n\t\t\tif(path(p).valueList.length === 0) {\n\t\t\t\tpath(p).median = undefined;\n\t\t\t\treturn p;\n\t\t\t}\n \n\t\t\tif(path(p).valueList.length === 1 || path(p).valueList.length % 2) {\n\t\t\t\tpath(p).median = path(p).valueList[half];\n\t\t\t} else {\n\t\t\t\tpath(p).median = (path(p).valueList[half-1] + path(p).valueList[half]) / 2.0;\n\t\t\t}\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).median = undefined;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_median;\n},{}],17:[function(require,module,exports){\nvar reductio_min = {\n\tadd: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n \n\t\t\tpath(p).min = path(p).valueList[0];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\t// Check for undefined.\n\t\t\tif(path(p).valueList.length === 0) {\n\t\t\t\tpath(p).min = undefined;\n\t\t\t\treturn p;\n\t\t\t}\n \n\t\t\tpath(p).min = path(p).valueList[0];\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).min = undefined;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_min;\n},{}],18:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_nest = {\n\tadd: function (keyAccessors, prior, path) {\n\t\tvar i; // Current key accessor\n\t\tvar arrRef;\n\t\tvar newRef;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\tarrRef = path(p).nest;\n\t\t\tkeyAccessors.forEach(function(a) {\n\t\t\t\tnewRef = arrRef.filter(function(d) { return d.key === a(v); })[0];\n\t\t\t\tif(newRef) {\n\t\t\t\t\t// There is another level.\n\t\t\t\t\tarrRef = newRef.values;\n\t\t\t\t} else {\n\t\t\t\t\t// Next level doesn't yet exist so we create it.\n\t\t\t\t\tnewRef = [];\n\t\t\t\t\tarrRef.push({ key: a(v), values: newRef });\n\t\t\t\t\tarrRef = newRef;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tarrRef.push(v);\n\t\t\t\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (keyAccessors, prior, path) {\n\t\tvar arrRef;\n\t\tvar nextRef;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\n\t\t\tarrRef = path(p).nest;\n\t\t\tkeyAccessors.forEach(function(a) {\n\t\t\t\tarrRef = arrRef.filter(function(d) { return d.key === a(v); })[0].values;\n\t\t\t});\n\n\t\t\t// Array contains an actual reference to the row, so just splice it out.\n\t\t\tarrRef.splice(arrRef.indexOf(v), 1);\n\n\t\t\t// If the leaf now has length 0 and it's not the base array remove it.\n\t\t\t// TODO\n\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).nest = [];\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_nest;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],19:[function(require,module,exports){\nvar reductio_parameters = function() {\n\treturn {\n\t\torder: false,\n\t\tavg: false,\n\t\tcount: false,\n\t\tsum: false,\n\t\texceptionAccessor: false,\n\t\texceptionCount: false,\n\t\texceptionSum: false,\n\t\tfilter: false,\n\t\tvalueList: false,\n\t\tmedian: false,\n\t\thistogramValue: false,\n\t\tmin: false,\n\t\tmax: false,\n\t\thistogramThresholds: false,\n\t\tstd: false,\n\t\tsumOfSquares: false,\n\t\tvalues: false,\n\t\tnestKeys: false,\n\t\taliasKeys: false,\n\t\taliasPropKeys: false,\n\t\tgroupAll: false,\n\t\tdataList: false,\n\t\tcustom: false\n\t};\n};\n\nmodule.exports = reductio_parameters;\n\n},{}],20:[function(require,module,exports){\nfunction postProcess(reductio) {\n    return function (group, p, f) {\n        group.post = function(){\n            var postprocess = function () {\n                return postprocess.all();\n            };\n            postprocess.all = function () {\n                return group.all();\n            };\n            var postprocessors = reductio.postprocessors;\n            Object.keys(postprocessors).forEach(function (name) {\n                postprocess[name] = function () {\n                    var _all = postprocess.all;\n                    var args = [].slice.call(arguments);\n                    postprocess.all = function () {\n                        return postprocessors[name](_all, f, p).apply(null, args);\n                    };\n                    return postprocess;\n                };\n            });\n            return postprocess;\n        };\n    };\n}\n\nmodule.exports = postProcess;\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function(reductio){\n    reductio.postprocessors = {};\n    reductio.registerPostProcessor = function(name, func){\n        reductio.postprocessors[name] = func;\n    };\n\n    reductio.registerPostProcessor('cap', require('./cap'));\n    reductio.registerPostProcessor('sortBy', require('./sortBy'));\n};\n\n},{\"./cap\":7,\"./sortBy\":22}],22:[function(require,module,exports){\nvar pluck_n = function (n) {\n    if (typeof n === 'function') {\n        return n;\n    }\n    if (~n.indexOf('.')) {\n        var split = n.split('.');\n        return function (d) {\n            return split.reduce(function (p, v) {\n                return p[v];\n            }, d);\n        };\n    }\n    return function (d) {\n        return d[n];\n    };\n};\n\nfunction ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar comparer = function (accessor, ordering) {\n    return function (a, b) {\n        return ordering(accessor(a), accessor(b));\n    };\n};\n\nvar type = {}.toString;\n\nmodule.exports = function (prior) {\n    return function (value, order) {\n        if (arguments.length === 1) {\n            order = ascending;\n        }\n        return prior().sort(comparer(pluck_n(value), order));\n    };\n};\n\n},{}],23:[function(require,module,exports){\nvar reductio_std = {\n\tadd: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).std = 0.0;\n\t\t\t\tvar n = path(p).sumOfSq - path(p).sum*path(p).sum/path(p).count;\n\t\t\t\tif (n>0.0) path(p).std = Math.sqrt(n/(path(p).count-1));\n\t\t\t} else {\n\t\t\t\tpath(p).std = 0.0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tif(path(p).count > 0) {\n\t\t\t\tpath(p).std = 0.0;\n\t\t\t\tvar n = path(p).sumOfSq - path(p).sum*path(p).sum/path(p).count;\n\t\t\t\tif (n>0.0) path(p).std = Math.sqrt(n/(path(p).count-1));\n\t\t\t} else {\n\t\t\t\tpath(p).std = 0;\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).std = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_std;\n},{}],24:[function(require,module,exports){\nvar reductio_sum_of_sq = {\n\tadd: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sumOfSq = path(p).sumOfSq + a(v)*a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sumOfSq = path(p).sumOfSq - a(v)*a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).sumOfSq = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_sum_of_sq;\n},{}],25:[function(require,module,exports){\nvar reductio_sum = {\n\tadd: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sum = path(p).sum + a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\tpath(p).sum = path(p).sum - a(v);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).sum = 0;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_sum;\n},{}],26:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_value_count = {\n\tadd: function (a, prior, path) {\n\t\tvar i, curr;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Not sure if this is more efficient than sorting.\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\tcurr = path(p).values[i];\n\t\t\tif(curr && curr[0] === a(v)) {\n\t\t\t\t// Value already exists in the array - increment it\n\t\t\t\tcurr[1]++;\n\t\t\t} else {\n\t\t\t\t// Value doesn't exist - add it in form [value, 1]\n\t\t\t\tpath(p).values.splice(i, 0, [a(v), 1]);\n\t\t\t}\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar i;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\ti = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);\n\t\t\t// Value already exists or something has gone terribly wrong.\n\t\t\tpath(p).values[i][1]--;\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\t// Array[Array[value, count]]\n\t\t\tpath(p).values = [];\n\t\t\tpath(p).bisect = crossfilter.bisect.by(function(d) { return d[0]; }).left;\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_value_count;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],27:[function(require,module,exports){\n(function (global){\nvar crossfilter = (typeof window !== \"undefined\" ? window['crossfilter'] : typeof global !== \"undefined\" ? global['crossfilter'] : null);\n\nvar reductio_value_list = {\n\tadd: function (a, prior, path) {\n\t\tvar i;\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\t// Not sure if this is more efficient than sorting.\n\t\t\ti = bisect(path(p).valueList, a(v), 0, path(p).valueList.length);\n\t\t\tpath(p).valueList.splice(i, 0, a(v));\n\t\t\treturn p;\n\t\t};\n\t},\n\tremove: function (a, prior, path) {\n\t\tvar i;\n\t\tvar bisect = crossfilter.bisect.by(function(d) { return d; }).left;\n\t\treturn function (p, v, nf) {\n\t\t\tif(prior) prior(p, v, nf);\n\t\t\ti = bisect(path(p).valueList, a(v), 0, path(p).valueList.length);\n\t\t\t// Value already exists or something has gone terribly wrong.\n\t\t\tpath(p).valueList.splice(i, 1);\n\t\t\treturn p;\n\t\t};\n\t},\n\tinitial: function (prior, path) {\n\t\treturn function (p) {\n\t\t\tp = prior(p);\n\t\t\tpath(p).valueList = [];\n\t\t\treturn p;\n\t\t};\n\t}\n};\n\nmodule.exports = reductio_value_list;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1])(1)\n});","// https://d3js.org Version 5.5.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"5.5.0\";\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction sequence(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction thresholdSturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = thresholdSturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction threshold(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nvar slice$1 = Array.prototype.slice;\n\nfunction identity$1(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant$1(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nfunction dragDisable(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant$2(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point$$1, that, args) {\n    var p = point$$1(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point$$1(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant$3(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array$1(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction reinterpolate(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction interpolateString(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction interpolateValue(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n}\n\nfunction interpolateRound(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction interpolateZoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create$1(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create$1(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction constant$4(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$1() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter$1,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point$$1 = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point$$1[0]) > Math.abs(point1[1] - point$$1[1])) lockY = true;\n        else lockX = true;\n      }\n      point$$1 = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point$$1[0] - point0[0];\n      dy = point$$1[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$2 = Array.prototype.slice;\n\nfunction constant$5(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar pi$2 = Math.PI,\n    tau$2 = 2 * pi$2,\n    epsilon$1 = 1e-6,\n    tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar array$2 = Array.prototype;\n\nvar slice$3 = array$2.slice;\n\nfunction ascending$2(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant$6(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop$1() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold$$1 = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold$$1(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = sequence(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending$2);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold$$1 = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), contours) : threshold$$1;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop$1, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold$$1 = constant$6(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (x(d, i, data) + o) >> k,\n          yi = (y(d, i, data) + o) >> k;\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        ++values0[xi + yi * n];\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold$$1(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = sequence(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), density) : y;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold$$1 = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), density) : threshold$$1;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction dsvFormat(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsvFormat(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsvFormat(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv$1 = dsvParse(csvParse);\nvar tsv$1 = dsvParse(tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nfunction center$1(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant$7(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX$1(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY$1(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX$1 : x, y == null ? defaultY$1 : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant$7(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$7(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent$1(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area$1(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n}\n\nfunction constant$8(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nfunction circle() {\n  var center = constant$8([0, 0]),\n      radius = constant$8(90),\n      precision = constant$8(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$8([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$8(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$8(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nfunction polygonContains(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin$1(phi),\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  if (sinPhi === 1) phi = halfPi$2 + epsilon$2;\n  else if (sinPhi === -1) phi = -halfPi$2 - epsilon$2;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent$1() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length$1(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object$1 = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains$1(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate$1(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity$4(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop$2,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$2;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index$1(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform$$1(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform$$1;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos$1(alpha),\n      sinAlpha = sin$1(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform$$1(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform$$1;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees$1;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform$$1 = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform$$1);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate$1(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$5() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$4 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$4.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant$9(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index$2() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$9(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$3() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$9(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nfunction area$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross$1(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains$2(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nfunction defaultSource$1() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar array$3 = Array.prototype;\n\nvar map$2 = array$3.map;\nvar slice$5 = array$3.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction constant$10(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number$2(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$10(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate$$1) {\n  return function(a, b) {\n    var r = reinterpolate$$1(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate$$1) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate$$1(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate$$1(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate$$1) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate$$1(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate$$1) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise$$1,\n      output,\n      input;\n\n  function rescale() {\n    piecewise$$1 = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise$$1(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise$$1(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate$$1) : reinterpolate$$1)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$2.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nfunction tickFormat(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$2.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$10(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$10(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date,\n    t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond$1 = 1000,\n    durationMinute$1 = durationSecond$1 * 60,\n    durationHour$1 = durationMinute$1 * 60,\n    durationDay$1 = durationHour$1 * 24,\n    durationWeek$1 = durationDay$1 * 7,\n    durationMonth = durationDay$1 * 30,\n    durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date$$1) {\n    return (second$$1(date$$1) < date$$1 ? formatMillisecond\n        : minute$$1(date$$1) < date$$1 ? formatSecond\n        : hour$$1(date$$1) < date$$1 ? formatMinute\n        : day$$1(date$$1) < date$$1 ? formatHour\n        : month$$1(date$$1) < date$$1 ? (week(date$$1) < date$$1 ? formatDay : formatWeek)\n        : year$$1(date$$1) < date$$1 ? formatMonth\n        : formatYear)(date$$1);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$2.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nfunction utcTime() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nfunction diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nfunction ramp(scheme) {\n  return rgbBasis(scheme[scheme.length - 1]);\n}\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$10 = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$10);\n\nvar scheme$11 = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$11);\n\nvar scheme$12 = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$12);\n\nvar scheme$13 = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$13);\n\nvar scheme$14 = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$14);\n\nvar scheme$15 = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$15);\n\nvar scheme$16 = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$16);\n\nvar scheme$17 = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$17);\n\nvar scheme$18 = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$18);\n\nvar scheme$19 = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$19);\n\nvar scheme$20 = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$20);\n\nvar scheme$21 = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$21);\n\nvar scheme$22 = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$22);\n\nvar scheme$23 = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$23);\n\nvar scheme$24 = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$24);\n\nvar scheme$25 = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$25);\n\nvar scheme$26 = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$26);\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n\nvar c$1 = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c$1.r = 255 * (x = Math.sin(t)) * x;\n  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c$1 + \"\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction constant$11(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$11(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$11(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$11(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$11(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$11(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$11(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$11(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$11(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area$3() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$11(0),\n      y1 = y$3,\n      defined = constant$11(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$11(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$11(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$11(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$11(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$11(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$11(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$11(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending$1(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity$7(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$11(0),\n      endAngle = constant$11(tau$4),\n      padAngle = constant$11(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$11(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$11(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area$3().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10),\n    kx = Math.sin(tau$4 / 10) * kr,\n    ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c$2 = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c$2 * x0 - s * y0, s * x0 + c$2 * y0);\n    context.lineTo(c$2 * x1 - s * y1, s * x1 + c$2 * y1);\n    context.lineTo(c$2 * x2 - s * y2, s * x2 + c$2 * y2);\n    context.lineTo(c$2 * x0 + s * y0, c$2 * y0 - s * x0);\n    context.lineTo(c$2 * x1 + s * y1, c$2 * y1 - s * x1);\n    context.lineTo(c$2 * x2 + s * y2, c$2 * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant$11(circle$2),\n      size = constant$11(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$11(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$11(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop$3() {}\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis$2(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed$1(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$3,\n  areaEnd: noop$3,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$2(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant$11([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$11(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$11(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$11(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n}\n\nfunction diverging$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n}\n\nfunction ascending$3(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$2(series) {\n  return ascending$3(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$2(series).reverse();\n}\n\nfunction constant$12(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$12(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$12(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nfunction constant$13(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$2() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$13(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$13(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$13(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$13([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = thresholdSturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.lch = lch;\nexports.gray = gray;\nexports.cubehelix = cubehelix;\nexports.contours = contours;\nexports.contourDensity = density;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsvFormat;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area$1;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains$1;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$2;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$2;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleDiverging = diverging;\nexports.schemeCategory10 = category10;\nexports.schemeAccent = Accent;\nexports.schemeDark2 = Dark2;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.interpolateBrBG = BrBG;\nexports.schemeBrBG = scheme;\nexports.interpolatePRGn = PRGn;\nexports.schemePRGn = scheme$1;\nexports.interpolatePiYG = PiYG;\nexports.schemePiYG = scheme$2;\nexports.interpolatePuOr = PuOr;\nexports.schemePuOr = scheme$3;\nexports.interpolateRdBu = RdBu;\nexports.schemeRdBu = scheme$4;\nexports.interpolateRdGy = RdGy;\nexports.schemeRdGy = scheme$5;\nexports.interpolateRdYlBu = RdYlBu;\nexports.schemeRdYlBu = scheme$6;\nexports.interpolateRdYlGn = RdYlGn;\nexports.schemeRdYlGn = scheme$7;\nexports.interpolateSpectral = Spectral;\nexports.schemeSpectral = scheme$8;\nexports.interpolateBuGn = BuGn;\nexports.schemeBuGn = scheme$9;\nexports.interpolateBuPu = BuPu;\nexports.schemeBuPu = scheme$10;\nexports.interpolateGnBu = GnBu;\nexports.schemeGnBu = scheme$11;\nexports.interpolateOrRd = OrRd;\nexports.schemeOrRd = scheme$12;\nexports.interpolatePuBuGn = PuBuGn;\nexports.schemePuBuGn = scheme$13;\nexports.interpolatePuBu = PuBu;\nexports.schemePuBu = scheme$14;\nexports.interpolatePuRd = PuRd;\nexports.schemePuRd = scheme$15;\nexports.interpolateRdPu = RdPu;\nexports.schemeRdPu = scheme$16;\nexports.interpolateYlGnBu = YlGnBu;\nexports.schemeYlGnBu = scheme$17;\nexports.interpolateYlGn = YlGn;\nexports.schemeYlGn = scheme$18;\nexports.interpolateYlOrBr = YlOrBr;\nexports.schemeYlOrBr = scheme$19;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeYlOrRd = scheme$20;\nexports.interpolateBlues = Blues;\nexports.schemeBlues = scheme$21;\nexports.interpolateGreens = Greens;\nexports.schemeGreens = scheme$22;\nexports.interpolateGreys = Greys;\nexports.schemeGreys = scheme$23;\nexports.interpolatePurples = Purples;\nexports.schemePurples = scheme$24;\nexports.interpolateReds = Reds;\nexports.schemeReds = scheme$25;\nexports.interpolateOranges = Oranges;\nexports.schemeOranges = scheme$26;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateSinebow = sinebow;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.create = create;\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$3;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging$1;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$3;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-queue/ Version 3.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nexports.queue = queue;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://github.com/topojson/topojson Version 3.0.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar bbox = function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nvar feature = function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n      : feature$1(topology, o);\n};\n\nfunction feature$1(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nvar mesh = function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n};\n\nfunction meshArcs(topology, object$$1, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object$$1, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object$$1);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nvar bisect = function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n};\n\nvar neighbors = function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n};\n\nvar untransform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar quantize = function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n};\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nvar bounds = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16);\nvar uints = new Uint32Array(buffer);\n\nvar hashPoint = function(point) {\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nvar join = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nvar cut = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\n\nfunction reverse$1(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n// Given a cut topology, combines duplicate arcs.\nvar dedup = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nvar delta = function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n};\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nvar extract = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nvar geometry = function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n};\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nvar topology = function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry$$1) {\n    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\nvar prune = function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      oldArcsLength = oldArcs.length,\n      oldIndex = -1,\n      newIndexByOldIndex = new Array(oldArcsLength),\n      newArcsLength = 0,\n      newArcs,\n      newIndex = -1,\n      key;\n\n  function scanGeometry(input) {\n    switch (input.type) {\n      case \"GeometryCollection\": input.geometries.forEach(scanGeometry); break;\n      case \"LineString\": scanArcs(input.arcs); break;\n      case \"MultiLineString\": input.arcs.forEach(scanArcs); break;\n      case \"Polygon\": input.arcs.forEach(scanArcs); break;\n      case \"MultiPolygon\": input.arcs.forEach(scanMultiArcs); break;\n    }\n  }\n\n  function scanArc(index) {\n    if (index < 0) index = ~index;\n    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;\n  }\n\n  function scanArcs(arcs) {\n    arcs.forEach(scanArc);\n  }\n\n  function scanMultiArcs(arcs) {\n    arcs.forEach(scanArcs);\n  }\n\n  function reindexGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(reindexGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: reindexArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(reindexMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function reindexArc(oldIndex) {\n    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];\n  }\n\n  function reindexArcs(arcs) {\n    return arcs.map(reindexArc);\n  }\n\n  function reindexMultiArcs(arcs) {\n    return arcs.map(reindexArcs);\n  }\n\n  for (key in oldObjects) {\n    scanGeometry(oldObjects[key]);\n  }\n\n  newArcs = new Array(newArcsLength);\n\n  while (++oldIndex < oldArcsLength) {\n    if (newIndexByOldIndex[oldIndex]) {\n      newIndexByOldIndex[oldIndex] = ++newIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = reindexGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n};\n\nvar filter = function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n};\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\nvar filterAttached = function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\nfunction planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nfunction planarRingArea$1(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\nvar filterWeight = function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea$1;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n};\n\nvar filterAttachedWeight = function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n};\n\nfunction compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nvar newHeap = function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n};\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nvar presimplify = function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar quantile = function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile$1(array.sort(descending), p);\n};\n\nfunction quantile$1(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\nvar simplify = function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar quarterPi = pi / 4;\nvar radians = pi / 180;\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nfunction sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nfunction sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n\nexports.bbox = bbox;\nexports.feature = feature;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.neighbors = neighbors;\nexports.quantize = quantize;\nexports.transform = transform;\nexports.untransform = untransform;\nexports.topology = topology;\nexports.filter = filter;\nexports.filterAttached = filterAttached;\nexports.filterAttachedWeight = filterAttachedWeight;\nexports.filterWeight = filterWeight;\nexports.planarRingArea = planarRingArea$1;\nexports.planarTriangleArea = planarTriangleArea;\nexports.presimplify = presimplify;\nexports.quantile = quantile;\nexports.simplify = simplify;\nexports.sphericalRingArea = sphericalRingArea;\nexports.sphericalTriangleArea = sphericalTriangleArea;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3-collection'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['d3-collection', 'd3-selection'], factory) :\n  (global.d3 = global.d3 || {}, global.d3.tip = factory(global.d3,global.d3));\n}(this, (function (d3Collection,d3Selection) { 'use strict';\n\n  /**\n   * d3.tip\n   * Copyright (c) 2013-2017 Justin Palmer\n   *\n   * Tooltips for d3.js SVG visualizations\n   */\n  // Public - constructs a new tooltip\n  //\n  // Returns a tip\n  function index() {\n    var direction   = d3TipDirection,\n        offset      = d3TipOffset,\n        html        = d3TipHTML,\n        rootElement = document.body,\n        node        = initNode(),\n        svg         = null,\n        point       = null,\n        target      = null;\n\n    function tip(vis) {\n      svg = getSVGNode(vis);\n      if (!svg) return\n      point = svg.createSVGPoint();\n      rootElement.appendChild(node);\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n\n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop ||\n        rootElement.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft ||\n        rootElement.scrollLeft;\n\n      nodel.html(content)\n        .style('opacity', 1).style('pointer-events', 'all');\n\n      while (i--) nodel.classed(directions[i], false);\n      coords = directionCallbacks.get(dir).apply(this);\n      nodel.classed(dir, true)\n        .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n        .style('left', (coords.left + poffset[1]) + scrollLeft + 'px');\n\n      return tip\n    };\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl();\n      nodel.style('opacity', 0).style('pointer-events', 'none');\n      return tip\n    };\n\n    // Public: Proxy attr calls to the d3 tip container.\n    // Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    // eslint-disable-next-line no-unused-vars\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      }\n\n      var args =  Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.attr.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Proxy style calls to the d3 tip container.\n    // Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    // eslint-disable-next-line no-unused-vars\n    tip.style = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      }\n\n      var args = Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.style.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the root element anchor of the tooltip\n    //\n    // v - root element of the tooltip\n    //\n    // Returns root node of tip\n    tip.rootElement = function(v) {\n      if (!arguments.length) return rootElement\n      rootElement = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if (node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip\n    };\n\n    function d3TipDirection() { return 'n' }\n    function d3TipOffset() { return [0, 0] }\n    function d3TipHTML() { return ' ' }\n\n    var directionCallbacks = d3Collection.map({\n          n:  directionNorth,\n          s:  directionSouth,\n          e:  directionEast,\n          w:  directionWest,\n          nw: directionNorthWest,\n          ne: directionNorthEast,\n          sw: directionSouthWest,\n          se: directionSouthEast\n        }),\n        directions = directionCallbacks.keys();\n\n    function directionNorth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionSouth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n\n    function directionWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n\n    function directionSouthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n\n    function directionSouthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.se.y,\n        left: bbox.se.x\n      }\n    }\n\n    function initNode() {\n      var div = d3Selection.select(document.createElement('div'));\n      div\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('opacity', 0)\n        .style('pointer-events', 'none')\n        .style('box-sizing', 'border-box');\n\n      return div.node()\n    }\n\n    function getSVGNode(element) {\n      var svgNode = element.node();\n      if (!svgNode) return null\n      if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n      return svgNode.ownerSVGElement\n    }\n\n    function getNodeEl() {\n      if (node == null) {\n        node = initNode();\n        // re-add node to DOM\n        rootElement.appendChild(node);\n      }\n      return d3Selection.select(node)\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n    // nw(northwest), sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox(targetShape) {\n      var targetel   = target || targetShape;\n\n      while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n        targetel = targetel.parentNode;\n      }\n\n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y;\n\n      point.x = x;\n      point.y = y;\n      bbox.nw = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.ne = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.se = point.matrixTransform(matrix);\n      point.x -= width;\n      bbox.sw = point.matrixTransform(matrix);\n      point.y -= height / 2;\n      bbox.w = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.e = point.matrixTransform(matrix);\n      point.x -= width / 2;\n      point.y -= height / 2;\n      bbox.n = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.s = point.matrixTransform(matrix);\n\n      return bbox\n    }\n\n    // Private - replace D3JS 3.X d3.functor() function\n    function functor(v) {\n      return typeof v === 'function' ? v : function() {\n        return v\n      }\n    }\n\n    return tip\n  }\n\n  return index;\n\n})));\n","/*!\n *  dc 3.0.6\n *  http://dc-js.github.io/dc.js/\n *  Copyright 2012-2016 Nick Zhu & the dc.js Developers\n *  https://github.com/dc-js/dc.js/blob/master/AUTHORS\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n(function() { function _dc(d3, crossfilter) {\n'use strict';\n\n/**\n * The entire dc.js library is scoped under the **dc** name space. It does not introduce\n * anything else into the global name space.\n *\n * Most `dc` functions are designed to allow function chaining, meaning they return the current chart\n * instance whenever it is appropriate.  The getter forms of functions do not participate in function\n * chaining because they return values that are not the chart, although some,\n * such as {@link dc.baseMixin#svg .svg} and {@link dc.coordinateGridMixin#xAxis .xAxis},\n * return values that are themselves chainable d3 objects.\n * @namespace dc\n * @version 3.0.6\n * @example\n * // Example chaining\n * chart.width(300)\n *      .height(300)\n *      .filter('sunday');\n */\n/*jshint -W079*/\nvar dc = {\n    version: '3.0.6',\n    constants: {\n        CHART_CLASS: 'dc-chart',\n        DEBUG_GROUP_CLASS: 'debug',\n        STACK_CLASS: 'stack',\n        DESELECTED_CLASS: 'deselected',\n        SELECTED_CLASS: 'selected',\n        NODE_INDEX_NAME: '__index__',\n        GROUP_INDEX_NAME: '__group_index__',\n        DEFAULT_CHART_GROUP: '__default_chart_group__',\n        EVENT_DELAY: 40,\n        NEGLIGIBLE_NUMBER: 1e-10\n    },\n    _renderlet: null\n};\n/*jshint +W079*/\n\n/**\n * The dc.chartRegistry object maintains sets of all instantiated dc.js charts under named groups\n * and the default group.\n *\n * A chart group often corresponds to a crossfilter instance. It specifies\n * the set of charts which should be updated when a filter changes on one of the charts or when the\n * global functions {@link dc.filterAll dc.filterAll}, {@link dc.refocusAll dc.refocusAll},\n * {@link dc.renderAll dc.renderAll}, {@link dc.redrawAll dc.redrawAll}, or chart functions\n * {@link dc.baseMixin#renderGroup baseMixin.renderGroup},\n * {@link dc.baseMixin#redrawGroup baseMixin.redrawGroup} are called.\n *\n * @namespace chartRegistry\n * @memberof dc\n * @type {{has, register, deregister, clear, list}}\n */\ndc.chartRegistry = (function () {\n    // chartGroup:string => charts:array\n    var _chartMap = {};\n\n    function initializeChartGroup (group) {\n        if (!group) {\n            group = dc.constants.DEFAULT_CHART_GROUP;\n        }\n\n        if (!_chartMap[group]) {\n            _chartMap[group] = [];\n        }\n\n        return group;\n    }\n\n    return {\n        /**\n         * Determine if a given chart instance resides in any group in the registry.\n         * @method has\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @returns {Boolean}\n         */\n        has: function (chart) {\n            for (var e in _chartMap) {\n                if (_chartMap[e].indexOf(chart) >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /**\n         * Add given chart instance to the given group, creating the group if necessary.\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n         * @method register\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @param {String} [group] Group name\n         */\n        register: function (chart, group) {\n            group = initializeChartGroup(group);\n            _chartMap[group].push(chart);\n        },\n\n        /**\n         * Remove given chart instance from the given group, creating the group if necessary.\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n         * @method deregister\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @param {String} [group] Group name\n         */\n        deregister: function (chart, group) {\n            group = initializeChartGroup(group);\n            for (var i = 0; i < _chartMap[group].length; i++) {\n                if (_chartMap[group][i].anchorName() === chart.anchorName()) {\n                    _chartMap[group].splice(i, 1);\n                    break;\n                }\n            }\n        },\n\n        /**\n         * Clear given group if one is provided, otherwise clears all groups.\n         * @method clear\n         * @memberof dc.chartRegistry\n         * @param {String} group Group name\n         */\n        clear: function (group) {\n            if (group) {\n                delete _chartMap[group];\n            } else {\n                _chartMap = {};\n            }\n        },\n\n        /**\n         * Get an array of each chart instance in the given group.\n         * If no group is provided, the charts in the default group are returned.\n         * @method list\n         * @memberof dc.chartRegistry\n         * @param {String} [group] Group name\n         * @returns {Array<Object>}\n         */\n        list: function (group) {\n            group = initializeChartGroup(group);\n            return _chartMap[group];\n        }\n    };\n})();\n\n/**\n * Add given chart instance to the given group, creating the group if necessary.\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n * @memberof dc\n * @method registerChart\n * @param {Object} chart dc.js chart instance\n * @param {String} [group] Group name\n */\ndc.registerChart = function (chart, group) {\n    dc.chartRegistry.register(chart, group);\n};\n\n/**\n * Remove given chart instance from the given group, creating the group if necessary.\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n * @memberof dc\n * @method deregisterChart\n * @param {Object} chart dc.js chart instance\n * @param {String} [group] Group name\n */\ndc.deregisterChart = function (chart, group) {\n    dc.chartRegistry.deregister(chart, group);\n};\n\n/**\n * Determine if a given chart instance resides in any group in the registry.\n * @memberof dc\n * @method hasChart\n * @param {Object} chart dc.js chart instance\n * @returns {Boolean}\n */\ndc.hasChart = function (chart) {\n    return dc.chartRegistry.has(chart);\n};\n\n/**\n * Clear given group if one is provided, otherwise clears all groups.\n * @memberof dc\n * @method deregisterAllCharts\n * @param {String} group Group name\n */\ndc.deregisterAllCharts = function (group) {\n    dc.chartRegistry.clear(group);\n};\n\n/**\n * Clear all filters on all charts within the given chart group. If the chart group is not given then\n * only charts that belong to the default chart group will be reset.\n * @memberof dc\n * @method filterAll\n * @param {String} [group]\n */\ndc.filterAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].filterAll();\n    }\n};\n\n/**\n * Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is\n * not given then only charts that belong to the default chart group will be reset.\n * @memberof dc\n * @method refocusAll\n * @param {String} [group]\n */\ndc.refocusAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        if (charts[i].focus) {\n            charts[i].focus();\n        }\n    }\n};\n\n/**\n * Re-render all charts belong to the given chart group. If the chart group is not given then only\n * charts that belong to the default chart group will be re-rendered.\n * @memberof dc\n * @method renderAll\n * @param {String} [group]\n */\ndc.renderAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].render();\n    }\n\n    if (dc._renderlet !== null) {\n        dc._renderlet(group);\n    }\n};\n\n/**\n * Redraw all charts belong to the given chart group. If the chart group is not given then only charts\n * that belong to the default chart group will be re-drawn. Redraw is different from re-render since\n * when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting\n * from scratch.\n * @memberof dc\n * @method redrawAll\n * @param {String} [group]\n */\ndc.redrawAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].redraw();\n    }\n\n    if (dc._renderlet !== null) {\n        dc._renderlet(group);\n    }\n};\n\n/**\n * If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\n * immediately.\n * @memberof dc\n * @member disableTransitions\n * @type {Boolean}\n * @default false\n */\ndc.disableTransitions = false;\n\n/**\n * Start a transition on a selection if transitions are globally enabled\n * ({@link dc.disableTransitions} is false) and the duration is greater than zero; otherwise return\n * the selection. Since most operations are the same on a d3 selection and a d3 transition, this\n * allows a common code path for both cases.\n * @memberof dc\n * @method transition\n * @param {d3.selection} selection - the selection to be transitioned\n * @param {Number|Function} [duration=250] - the duration of the transition in milliseconds, a\n * function returning the duration, or 0 for no transition\n * @param {Number|Function} [delay] - the delay of the transition in milliseconds, or a function\n * returning the delay, or 0 for no delay\n * @param {String} [name] - the name of the transition (if concurrent transitions on the same\n * elements are needed)\n * @returns {d3.transition|d3.selection}\n */\ndc.transition = function (selection, duration, delay, name) {\n    if (dc.disableTransitions || duration <= 0) {\n        return selection;\n    }\n\n    var s = selection.transition(name);\n\n    if (duration >= 0 || duration !== undefined) {\n        s = s.duration(duration);\n    }\n    if (delay >= 0 || delay !== undefined) {\n        s = s.delay(delay);\n    }\n\n    return s;\n};\n\n/* somewhat silly, but to avoid duplicating logic */\ndc.optionalTransition = function (enable, duration, delay, name) {\n    if (enable) {\n        return function (selection) {\n            return dc.transition(selection, duration, delay, name);\n        };\n    } else {\n        return function (selection) {\n            return selection;\n        };\n    }\n};\n\n// See http://stackoverflow.com/a/20773846\ndc.afterTransition = function (transition, callback) {\n    if (transition.empty() || !transition.duration) {\n        callback.call(transition);\n    } else {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .on('end', function () {\n                if (!--n) {\n                    callback.call(transition);\n                }\n            });\n    }\n};\n\n/**\n * @namespace units\n * @memberof dc\n * @type {{}}\n */\ndc.units = {};\n\n/**\n * The default value for {@link dc.coordinateGridMixin#xUnits .xUnits} for the\n * {@link dc.coordinateGridMixin Coordinate Grid Chart} and should\n * be used when the x values are a sequence of integers.\n * It is a function that counts the number of integers in the range supplied in its start and end parameters.\n * @method integers\n * @memberof dc.units\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @example\n * chart.xUnits(dc.units.integers) // already the default\n * @param {Number} start\n * @param {Number} end\n * @returns {Number}\n */\ndc.units.integers = function (start, end) {\n    return Math.abs(end - start);\n};\n\n/**\n * This argument can be passed to the {@link dc.coordinateGridMixin#xUnits .xUnits} function of a\n * coordinate grid chart to specify ordinal units for the x axis. Usually this parameter is used in\n * combination with passing\n * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\n * to {@link dc.coordinateGridMixin#x .x}.\n *\n * As of dc.js 3.0, this is purely a placeholder or magic value which causes the chart to go into ordinal mode; the\n * function is not called.\n * @method ordinal\n * @memberof dc.units\n * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @see {@link dc.coordinateGridMixin#x coordinateGridMixin.x}\n * @example\n * chart.xUnits(dc.units.ordinal)\n *      .x(d3.scaleOrdinal())\n */\ndc.units.ordinal = function () {\n    throw new Error('dc.units.ordinal should not be called - it is a placeholder');\n};\n\n/**\n * @namespace fp\n * @memberof dc.units\n * @type {{}}\n */\ndc.units.fp = {};\n/**\n * This function generates an argument for the {@link dc.coordinateGridMixin Coordinate Grid Chart}\n * {@link dc.coordinateGridMixin#xUnits .xUnits} function specifying that the x values are floating-point\n * numbers with the given precision.\n * The returned function determines how many values at the given precision will fit into the range\n * supplied in its start and end parameters.\n * @method precision\n * @memberof dc.units.fp\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @example\n * // specify values (and ticks) every 0.1 units\n * chart.xUnits(dc.units.fp.precision(0.1)\n * // there are 500 units between 0.5 and 1 if the precision is 0.001\n * var thousandths = dc.units.fp.precision(0.001);\n * thousandths(0.5, 1.0) // returns 500\n * @param {Number} precision\n * @returns {Function} start-end unit function\n */\ndc.units.fp.precision = function (precision) {\n    var _f = function (s, e) {\n        var d = Math.abs((e - s) / _f.resolution);\n        if (dc.utils.isNegligible(d - Math.floor(d))) {\n            return Math.floor(d);\n        } else {\n            return Math.ceil(d);\n        }\n    };\n    _f.resolution = precision;\n    return _f;\n};\n\ndc.round = {};\ndc.round.floor = function (n) {\n    return Math.floor(n);\n};\ndc.round.ceil = function (n) {\n    return Math.ceil(n);\n};\ndc.round.round = function (n) {\n    return Math.round(n);\n};\n\ndc.override = function (obj, functionName, newFunction) {\n    var existingFunction = obj[functionName];\n    obj['_' + functionName] = existingFunction;\n    obj[functionName] = newFunction;\n};\n\ndc.renderlet = function (_) {\n    if (!arguments.length) {\n        return dc._renderlet;\n    }\n    dc._renderlet = _;\n    return dc;\n};\n\ndc.instanceOfChart = function (o) {\n    return o instanceof Object && o.__dcFlag__ && true;\n};\n\ndc.errors = {};\n\ndc.errors.Exception = function (msg) {\n    var _msg = msg || 'Unexpected internal error';\n\n    this.message = _msg;\n\n    this.toString = function () {\n        return _msg;\n    };\n    this.stack = (new Error()).stack;\n};\ndc.errors.Exception.prototype = Object.create(Error.prototype);\ndc.errors.Exception.prototype.constructor = dc.errors.Exception;\n\ndc.errors.InvalidStateException = function () {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.errors.InvalidStateException.prototype = Object.create(dc.errors.Exception.prototype);\ndc.errors.InvalidStateException.prototype.constructor = dc.errors.InvalidStateException;\n\ndc.errors.BadArgumentException = function () {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.errors.BadArgumentException.prototype = Object.create(dc.errors.Exception.prototype);\ndc.errors.BadArgumentException.prototype.constructor = dc.errors.BadArgumentException;\n\n/**\n * The default date format for dc.js\n * @name dateFormat\n * @memberof dc\n * @type {Function}\n * @default d3.timeFormat('%m/%d/%Y')\n */\ndc.dateFormat = d3.timeFormat('%m/%d/%Y');\n\n/**\n * @namespace printers\n * @memberof dc\n * @type {{}}\n */\ndc.printers = {};\n\n/**\n * Converts a list of filters into a readable string.\n * @method filters\n * @memberof dc.printers\n * @param {Array<dc.filters>} filters\n * @returns {String}\n */\ndc.printers.filters = function (filters) {\n    var s = '';\n\n    for (var i = 0; i < filters.length; ++i) {\n        if (i > 0) {\n            s += ', ';\n        }\n        s += dc.printers.filter(filters[i]);\n    }\n\n    return s;\n};\n\n/**\n * Converts a filter into a readable string.\n * @method filter\n * @memberof dc.printers\n * @param {dc.filters|any|Array<any>} filter\n * @returns {String}\n */\ndc.printers.filter = function (filter) {\n    var s = '';\n\n    if (typeof filter !== 'undefined' && filter !== null) {\n        if (filter instanceof Array) {\n            if (filter.length >= 2) {\n                s = '[' + dc.utils.printSingleValue(filter[0]) + ' -> ' + dc.utils.printSingleValue(filter[1]) + ']';\n            } else if (filter.length >= 1) {\n                s = dc.utils.printSingleValue(filter[0]);\n            }\n        } else {\n            s = dc.utils.printSingleValue(filter);\n        }\n    }\n\n    return s;\n};\n\n/**\n * Returns a function that given a string property name, can be used to pluck the property off an object.  A function\n * can be passed as the second argument to also alter the data being returned.\n *\n * This can be a useful shorthand method to create accessor functions.\n * @method pluck\n * @memberof dc\n * @example\n * var xPluck = dc.pluck('x');\n * var objA = {x: 1};\n * xPluck(objA) // 1\n * @example\n * var xPosition = dc.pluck('x', function (x, i) {\n *     // `this` is the original datum,\n *     // `x` is the x property of the datum,\n *     // `i` is the position in the array\n *     return this.radius + x;\n * });\n * dc.selectAll('.circle').data(...).x(xPosition);\n * @param {String} n\n * @param {Function} [f]\n * @returns {Function}\n */\ndc.pluck = function (n, f) {\n    if (!f) {\n        return function (d) { return d[n]; };\n    }\n    return function (d, i) { return f.call(d, d[n], i); };\n};\n\n/**\n * @namespace utils\n * @memberof dc\n * @type {{}}\n */\ndc.utils = {};\n\n/**\n * Print a single value filter.\n * @method printSingleValue\n * @memberof dc.utils\n * @param {any} filter\n * @returns {String}\n */\ndc.utils.printSingleValue = function (filter) {\n    var s = '' + filter;\n\n    if (filter instanceof Date) {\n        s = dc.dateFormat(filter);\n    } else if (typeof(filter) === 'string') {\n        s = filter;\n    } else if (dc.utils.isFloat(filter)) {\n        s = dc.utils.printSingleValue.fformat(filter);\n    } else if (dc.utils.isInteger(filter)) {\n        s = Math.round(filter);\n    }\n\n    return s;\n};\ndc.utils.printSingleValue.fformat = d3.format('.2f');\n\n// convert 'day' to 'timeDay' and similar\ndc.utils.toTimeFunc = function (t) {\n    return 'time' + t.charAt(0).toUpperCase() + t.slice(1);\n};\n\n/**\n * Arbitrary add one value to another.\n *\n * If the value l is of type Date, adds r units to it. t becomes the unit.\n * For example dc.utils.add(dt, 3, 'week') will add 3 (r = 3) weeks (t= 'week') to dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * dc.utils.add(30, 10) will give 40 and dc.utils.add(30, '10') will give 33.\n *\n * They also generate strange results if l is a string.\n * @method add\n * @memberof dc.utils\n * @param {Date|Number} l the value to modify\n * @param {String|Number} r the amount by which to modify the value\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n * @returns {Date|Number}\n */\ndc.utils.add = function (l, r, t) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() + r);\n        }\n        t = t || d3.timeDay;\n        if (typeof t !== 'function') {\n            t = d3[dc.utils.toTimeFunc(t)];\n        }\n        return t.offset(l, r);\n    } else if (typeof r === 'string') {\n        var percentage = (+r / 100);\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l + r;\n    }\n};\n\n/**\n * Arbitrary subtract one value from another.\n *\n * If the value l is of type Date, subtracts r units from it. t becomes the unit.\n * For example dc.utils.subtract(dt, 3, 'week') will subtract 3 (r = 3) weeks (t= 'week') from dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * dc.utils.subtract(30, 10) will give 20 and dc.utils.subtract(30, '10') will give 27.\n *\n * They also generate strange results if l is a string.\n * @method subtract\n * @memberof dc.utils\n * @param {Date|Number} l the value to modify\n * @param {String|Number} r the amount by which to modify the value\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n * @returns {Date|Number}\n */\ndc.utils.subtract = function (l, r, t) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() - r);\n        }\n        t = t || d3.timeDay;\n        if (typeof t !== 'function') {\n            t = d3[dc.utils.toTimeFunc(t)];\n        }\n        return t.offset(l, -r);\n    } else if (typeof r === 'string') {\n        var percentage = (+r / 100);\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l - r;\n    }\n};\n\n/**\n * Is the value a number?\n * @method isNumber\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isNumber = function (n) {\n    return n === +n;\n};\n\n/**\n * Is the value a float?\n * @method isFloat\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isFloat = function (n) {\n    return n === +n && n !== (n | 0);\n};\n\n/**\n * Is the value an integer?\n * @method isInteger\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isInteger = function (n) {\n    return n === +n && n === (n | 0);\n};\n\n/**\n * Is the value very close to zero?\n * @method isNegligible\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isNegligible = function (n) {\n    return !dc.utils.isNumber(n) || (n < dc.constants.NEGLIGIBLE_NUMBER && n > -dc.constants.NEGLIGIBLE_NUMBER);\n};\n\n/**\n * Ensure the value is no greater or less than the min/max values.  If it is return the boundary value.\n * @method clamp\n * @memberof dc.utils\n * @param {any} val\n * @param {any} min\n * @param {any} max\n * @returns {any}\n */\ndc.utils.clamp = function (val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n};\n\n/**\n * Given `x`, return a function that always returns `x`.\n *\n * {@link https://github.com/d3/d3/blob/master/CHANGES.md#internals `d3.functor` was removed in d3 version 4}.\n * This function helps to implement the replacement,\n * `typeof x === \"function\" ? x : dc.utils.constant(x)`\n * @method constant\n * @memberof dc.utils\n * @param {any} x\n * @returns {Function}\n */\ndc.utils.constant = function (x) {\n    return function () {\n        return x;\n    };\n};\n\n/**\n * Using a simple static counter, provide a unique integer id.\n * @method uniqueId\n * @memberof dc.utils\n * @returns {Number}\n */\nvar _idCounter = 0;\ndc.utils.uniqueId = function () {\n    return ++_idCounter;\n};\n\n/**\n * Convert a name to an ID.\n * @method nameToId\n * @memberof dc.utils\n * @param {String} name\n * @returns {String}\n */\ndc.utils.nameToId = function (name) {\n    return name.toLowerCase().replace(/[\\s]/g, '_').replace(/[\\.']/g, '');\n};\n\n/**\n * Append or select an item on a parent element.\n * @method appendOrSelect\n * @memberof dc.utils\n * @param {d3.selection} parent\n * @param {String} selector\n * @param {String} tag\n * @returns {d3.selection}\n */\ndc.utils.appendOrSelect = function (parent, selector, tag) {\n    tag = tag || selector;\n    var element = parent.select(selector);\n    if (element.empty()) {\n        element = parent.append(tag);\n    }\n    return element;\n};\n\n/**\n * Return the number if the value is a number; else 0.\n * @method safeNumber\n * @memberof dc.utils\n * @param {Number|any} n\n * @returns {Number}\n */\ndc.utils.safeNumber = function (n) { return dc.utils.isNumber(+n) ? +n : 0;};\n\n/**\n * Return true if both arrays are equal, if both array are null these are considered equal\n * @method arraysEqual\n * @memberof dc.utils\n * @param {Array|null} a1\n * @param {Array|null} a2\n * @returns {Boolean}\n */\ndc.utils.arraysEqual = function (a1, a2) {\n    if (!a1 && !a2) {\n        return true;\n    }\n\n    if (!a1 || !a2) {\n        return false;\n    }\n\n    return a1.length === a2.length &&\n        // If elements are not integers/strings, we hope that it will match because of toString\n        // Test cases cover dates as well.\n        a1.every(function (elem, i) {\n            return elem.valueOf() === a2[i].valueOf();\n        });\n};\n\n// ******** Sunburst Chart ********\ndc.utils.allChildren = function (node) {\n    var paths = [];\n    paths.push(node.path);\n    console.log('currentNode', node);\n    if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            paths = paths.concat(dc.utils.allChildren(node.children[i]));\n        }\n    }\n    return paths;\n};\n\n// builds a d3 Hierarchy from a collection\n// TODO: turn this monster method something better.\ndc.utils.toHierarchy = function (list, accessor) {\n    var root = {'key': 'root', 'children': []};\n    for (var i = 0; i < list.length; i++) {\n        var data = list[i];\n        var parts = data.key;\n        var value = accessor(data);\n        var currentNode = root;\n        for (var j = 0; j < parts.length; j++) {\n            var currentPath = parts.slice(0, j + 1);\n            var children = currentNode.children;\n            var nodeName = parts[j];\n            var childNode;\n            if (j + 1 < parts.length) {\n                // Not yet at the end of the sequence; move down the tree.\n                childNode = findChild(children, nodeName);\n\n                // If we don't already have a child node for this branch, create it.\n                if (childNode === void 0) {\n                    childNode = {'key': nodeName, 'children': [], 'path': currentPath};\n                    children.push(childNode);\n                }\n                currentNode = childNode;\n            } else {\n                // Reached the end of the sequence; create a leaf node.\n                childNode = {'key': nodeName, 'value': value, 'data': data, 'path': currentPath};\n                children.push(childNode);\n            }\n        }\n    }\n    return root;\n};\n\nfunction findChild (children, nodeName) {\n    for (var k = 0; k < children.length; k++) {\n        if (children[k].key === nodeName) {\n            return children[k];\n        }\n    }\n}\n\ndc.utils.getAncestors = function (node) {\n    var path = [];\n    var current = node;\n    while (current.parent) {\n        path.unshift(current.name);\n        current = current.parent;\n    }\n    return path;\n};\n\ndc.utils.arraysIdentical = function (a, b) {\n    var i = a.length;\n    if (i !== b.length) {\n        return false;\n    }\n    while (i--) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Provides basis logging and deprecation utilities\n * @class logger\n * @memberof dc\n * @returns {dc.logger}\n */\ndc.logger = (function () {\n\n    var _logger = {};\n\n    /**\n     * Enable debug level logging. Set to `false` by default.\n     * @name enableDebugLog\n     * @memberof dc.logger\n     * @instance\n     */\n    _logger.enableDebugLog = false;\n\n    /**\n     * Put a warning message to console\n     * @method warn\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.warn('Invalid use of .tension on CurveLinear');\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.warn = function (msg) {\n        if (console) {\n            if (console.warn) {\n                console.warn(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return _logger;\n    };\n\n    var _alreadyWarned = {};\n\n    /**\n     * Put a warning message to console. It will warn only on unique messages.\n     * @method warnOnce\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.warnOnce('Invalid use of .tension on CurveLinear');\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.warnOnce = function (msg) {\n        if (!_alreadyWarned[msg]) {\n            _alreadyWarned[msg] = true;\n\n            dc.logger.warn(msg);\n        }\n\n        return _logger;\n    };\n\n    /**\n     * Put a debug message to console. It is controlled by `dc.logger.enableDebugLog`\n     * @method debug\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.debug('Total number of slices: ' + numSlices);\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.debug = function (msg) {\n        if (_logger.enableDebugLog && console) {\n            if (console.debug) {\n                console.debug(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return _logger;\n    };\n\n    /**\n     * Use it to deprecate a function. It will return a wrapped version of the function, which will\n     * will issue a warning when invoked. For each function, warning will be issued only once.\n     *\n     * @method deprecate\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * _chart.interpolate = dc.logger.deprecate(function (interpolate) {\n     *    if (!arguments.length) {\n     *        return _interpolate;\n     *    }\n     *    _interpolate = interpolate;\n     *    return _chart;\n     * }, 'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\n     * @param {Function} [fn]\n     * @param {String} [msg]\n     * @returns {Function}\n     */\n    _logger.deprecate = function (fn, msg) {\n        // Allow logging of deprecation\n        var warned = false;\n        function deprecated () {\n            if (!warned) {\n                _logger.warn(msg);\n                warned = true;\n            }\n            return fn.apply(this, arguments);\n        }\n        return deprecated;\n    };\n\n    return _logger;\n})();\n\n/**\n * General configuration\n *\n * @class config\n * @memberof dc\n * @returns {dc.config}\n */\ndc.config = (function () {\n    var _config = {};\n\n    // D3v5 has removed schemeCategory20c, copied here for backward compatibility\n    var _schemeCategory20c = [\n        '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d',\n        '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476',\n        '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n        '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\n    var _defaultColors = _schemeCategory20c;\n\n    /**\n     * Set the default color scheme for ordinal charts. Changing it will impact all ordinal charts.\n     *\n     * By default it is set to a copy of\n     * `d3.schemeCategory20c` for backward compatibility. This color scheme has been\n     * [removed from D3v5](https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50).\n     * In DC 3.1 release it will change to a more appropriate default.\n     *\n     * @example\n     * dc.config.defaultColors(d3.schemeSet1)\n     * @method defaultColors\n     * @memberof dc.config\n     * @instance\n     * @param {Array} [colors]\n     * @returns {Array|dc.config}\n     */\n    _config.defaultColors = function (colors) {\n        if (!arguments.length) {\n            // Issue warning if it uses _schemeCategory20c\n            if (_defaultColors === _schemeCategory20c) {\n                dc.logger.warnOnce('You are using d3.schemeCategory20c, which has been removed in D3v5. ' +\n                    'See the explanation at https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50. ' +\n                    'DC is using it for backward compatibility, however it will be changed in DCv3.1. ' +\n                    'You can change it by calling dc.config.defaultColors(newScheme). ' +\n                    'See https://github.com/d3/d3-scale-chromatic for some alternatives.');\n            }\n            return _defaultColors;\n        }\n        _defaultColors = colors;\n        return _config;\n    };\n\n    return _config;\n})();\n\ndc.events = {\n    current: null\n};\n\n/**\n * This function triggers a throttled event function with a specified delay (in milli-seconds).  Events\n * that are triggered repetitively due to user interaction such brush dragging might flood the library\n * and invoke more renders than can be executed in time. Using this function to wrap your event\n * function allows the library to smooth out the rendering by throttling events and only responding to\n * the most recent event.\n * @name events.trigger\n * @memberof dc\n * @example\n * chart.on('renderlet', function(chart) {\n *     // smooth the rendering through event throttling\n *     dc.events.trigger(function(){\n *         // focus some other chart to the range selected by user on this chart\n *         someOtherChart.focus(chart.filter());\n *     });\n * })\n * @param {Function} closure\n * @param {Number} [delay]\n */\ndc.events.trigger = function (closure, delay) {\n    if (!delay) {\n        closure();\n        return;\n    }\n\n    dc.events.current = closure;\n\n    setTimeout(function () {\n        if (closure === dc.events.current) {\n            closure();\n        }\n    }, delay);\n};\n\n/**\n * The dc.js filters are functions which are passed into crossfilter to chose which records will be\n * accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one\n * dimension will affect all the other dimensions but not that one.  dc always applies a filter\n * function to the dimension; the function combines multiple filters and if any of them accept a\n * record, it is filtered in.\n *\n * These filter constructors are used as appropriate by the various charts to implement brushing.  We\n * mention below which chart uses which filter.  In some cases, many instances of a filter will be added.\n *\n * Each of the dc.js filters is an object with the following properties:\n * * `isFiltered` - a function that returns true if a value is within the filter\n * * `filterType` - a string identifying the filter, here the name of the constructor\n *\n * Currently these filter objects are also arrays, but this is not a requirement. Custom filters\n * can be used as long as they have the properties above.\n * @namespace filters\n * @memberof dc\n * @type {{}}\n */\ndc.filters = {};\n\n/**\n * RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X\n * axis brushing for the {@link dc.coordinateGridMixin coordinate grid charts}.\n *\n * Its `filterType` is 'RangedFilter'\n * @name RangedFilter\n * @memberof dc.filters\n * @param {Number} low\n * @param {Number} high\n * @returns {Array<Number>}\n * @constructor\n */\ndc.filters.RangedFilter = function (low, high) {\n    var range = new Array(low, high);\n    range.isFiltered = function (value) {\n        return value >= this[0] && value < this[1];\n    };\n    range.filterType = 'RangedFilter';\n\n    return range;\n};\n\n/**\n * TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the\n * {@link dc.heatMap heat map chart} to include particular cells as they are clicked.  (Rows and columns are\n * filtered by filtering all the cells in the row or column.)\n *\n * Its `filterType` is 'TwoDimensionalFilter'\n * @name TwoDimensionalFilter\n * @memberof dc.filters\n * @param {Array<Number>} filter\n * @returns {Array<Number>}\n * @constructor\n */\ndc.filters.TwoDimensionalFilter = function (filter) {\n    if (filter === null) { return null; }\n\n    var f = filter;\n    f.isFiltered = function (value) {\n        return value.length && value.length === f.length &&\n               value[0] === f[0] && value[1] === f[1];\n    };\n    f.filterType = 'TwoDimensionalFilter';\n\n    return f;\n};\n\n/**\n * The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular\n * region. It is used by the {@link dc.scatterPlot scatter plot} to implement rectangular brushing.\n *\n * It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that\n * `x1 <= x2` and `y1 <= y2`. It then returns a filter which accepts any points which are in the\n * rectangular range including the lower values but excluding the higher values.\n *\n * If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as\n * two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <\n * x2`.\n *\n * Its `filterType` is 'RangedTwoDimensionalFilter'\n * @name RangedTwoDimensionalFilter\n * @memberof dc.filters\n * @param {Array<Array<Number>>} filter\n * @returns {Array<Array<Number>>}\n * @constructor\n */\ndc.filters.RangedTwoDimensionalFilter = function (filter) {\n    if (filter === null) { return null; }\n\n    var f = filter;\n    var fromBottomLeft;\n\n    if (f[0] instanceof Array) {\n        fromBottomLeft = [\n            [Math.min(filter[0][0], filter[1][0]), Math.min(filter[0][1], filter[1][1])],\n            [Math.max(filter[0][0], filter[1][0]), Math.max(filter[0][1], filter[1][1])]\n        ];\n    } else {\n        fromBottomLeft = [[filter[0], -Infinity], [filter[1], Infinity]];\n    }\n\n    f.isFiltered = function (value) {\n        var x, y;\n\n        if (value instanceof Array) {\n            x = value[0];\n            y = value[1];\n        } else {\n            x = value;\n            y = fromBottomLeft[0][1];\n        }\n\n        return x >= fromBottomLeft[0][0] && x < fromBottomLeft[1][0] &&\n               y >= fromBottomLeft[0][1] && y < fromBottomLeft[1][1];\n    };\n    f.filterType = 'RangedTwoDimensionalFilter';\n\n    return f;\n};\n\n// ******** Sunburst Chart ********\n\n/**\n * HierarchyFilter is a filter which accepts a key path as an array. It matches any node at, or\n * child of, the given path. It is used by the {@link dc.sunburstChart sunburst chart} to include particular cells and all\n * their children as they are clicked.\n *\n * @name HierarchyFilter\n * @memberof dc.filters\n * @param {String} path\n * @returns {Array<String>}\n * @constructor\n */\ndc.filters.HierarchyFilter = function (path) {\n    if (path === null) {\n        return null;\n    }\n\n    var filter = path.slice(0);\n    filter.isFiltered = function (value) {\n        if (!(filter.length && value && value.length && value.length >= filter.length)) {\n            return false;\n        }\n\n        for (var i = 0; i < filter.length; i++) {\n            if (value[i] !== filter[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n    return filter;\n};\n\n/**\n * `dc.baseMixin` is an abstract functional object representing a basic `dc` chart object\n * for all chart and widget implementations. Methods from the {@link #dc.baseMixin dc.baseMixin} are inherited\n * and available on all chart implementations in the `dc` library.\n * @name baseMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.baseMixin}\n */\ndc.baseMixin = function (_chart) {\n    _chart.__dcFlag__ = dc.utils.uniqueId();\n\n    var _dimension;\n    var _group;\n\n    var _anchor;\n    var _root;\n    var _svg;\n    var _isChild;\n\n    var _minWidth = 200;\n    var _defaultWidthCalc = function (element) {\n        var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n        return (width && width > _minWidth) ? width : _minWidth;\n    };\n    var _widthCalc = _defaultWidthCalc;\n\n    var _minHeight = 200;\n    var _defaultHeightCalc = function (element) {\n        var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n        return (height && height > _minHeight) ? height : _minHeight;\n    };\n    var _heightCalc = _defaultHeightCalc;\n    var _width, _height;\n    var _useViewBoxResizing = false;\n\n    var _keyAccessor = dc.pluck('key');\n    var _valueAccessor = dc.pluck('value');\n    var _label = dc.pluck('key');\n\n    var _ordering = dc.pluck('key');\n    var _orderSort;\n\n    var _renderLabel = false;\n\n    var _title = function (d) {\n        return _chart.keyAccessor()(d) + ': ' + _chart.valueAccessor()(d);\n    };\n    var _renderTitle = true;\n    var _controlsUseVisibility = false;\n\n    var _transitionDuration = 750;\n\n    var _transitionDelay = 0;\n\n    var _filterPrinter = dc.printers.filters;\n\n    var _mandatoryAttributes = ['dimension', 'group'];\n\n    var _chartGroup = dc.constants.DEFAULT_CHART_GROUP;\n\n    var _listeners = d3.dispatch(\n        'preRender',\n        'postRender',\n        'preRedraw',\n        'postRedraw',\n        'filtered',\n        'zoomed',\n        'renderlet',\n        'pretransition');\n\n    var _legend;\n    var _commitHandler;\n\n    var _filters = [];\n    var _filterHandler = function (dimension, filters) {\n        if (filters.length === 0) {\n            dimension.filter(null);\n        } else if (filters.length === 1 && !filters[0].isFiltered) {\n            // single value and not a function-based filter\n            dimension.filterExact(filters[0]);\n        } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n            // single range-based filter\n            dimension.filterRange(filters[0]);\n        } else {\n            dimension.filterFunction(function (d) {\n                for (var i = 0; i < filters.length; i++) {\n                    var filter = filters[i];\n                    if (filter.isFiltered && filter.isFiltered(d)) {\n                        return true;\n                    } else if (filter <= d && filter >= d) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return filters;\n    };\n\n    var _data = function (group) {\n        return group.all();\n    };\n\n    /**\n     * Set or get the height attribute of a chart. The height is applied to the SVGElement generated by\n     * the chart when rendered (or re-rendered). If a value is given, then it will be used to calculate\n     * the new height and the chart returned for method chaining.  The value can either be a numeric, a\n     * function, or falsy. If no value is specified then the value of the current height attribute will\n     * be returned.\n     *\n     * By default, without an explicit height being given, the chart will select the width of its\n     * anchor element. If that isn't possible it defaults to 200 (provided by the\n     * {@link dc.baseMixin#minHeight minHeight} property). Setting the value falsy will return\n     * the chart to the default behavior.\n     * @method height\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#minHeight minHeight}\n     * @example\n     * // Default height\n     * chart.height(function (element) {\n     *     var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n     *     return (height && height > chart.minHeight()) ? height : chart.minHeight();\n     * });\n     *\n     * chart.height(250); // Set the chart's height to 250px;\n     * chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function\n     * chart.height(null); // reset the height to the default auto calculation\n     * @param {Number|Function} [height]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.height = function (height) {\n        if (!arguments.length) {\n            if (!dc.utils.isNumber(_height)) {\n                // only calculate once\n                _height = _heightCalc(_root.node());\n            }\n            return _height;\n        }\n        _heightCalc = height ? (typeof height === 'function' ? height : dc.utils.constant(height)) : _defaultHeightCalc;\n        _height = undefined;\n        return _chart;\n    };\n\n    /**\n     * Set or get the width attribute of a chart.\n     * @method width\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#height height}\n     * @see {@link dc.baseMixin#minWidth minWidth}\n     * @example\n     * // Default width\n     * chart.width(function (element) {\n     *     var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n     *     return (width && width > chart.minWidth()) ? width : chart.minWidth();\n     * });\n     * @param {Number|Function} [width]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.width = function (width) {\n        if (!arguments.length) {\n            if (!dc.utils.isNumber(_width)) {\n                // only calculate once\n                _width = _widthCalc(_root.node());\n            }\n            return _width;\n        }\n        _widthCalc = width ? (typeof width === 'function' ? width : dc.utils.constant(width)) : _defaultWidthCalc;\n        _width = undefined;\n        return _chart;\n    };\n\n    /**\n     * Set or get the minimum width attribute of a chart. This only has effect when used with the default\n     * {@link dc.baseMixin#width width} function.\n     * @method minWidth\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#width width}\n     * @param {Number} [minWidth=200]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.minWidth = function (minWidth) {\n        if (!arguments.length) {\n            return _minWidth;\n        }\n        _minWidth = minWidth;\n        return _chart;\n    };\n\n    /**\n     * Set or get the minimum height attribute of a chart. This only has effect when used with the default\n     * {@link dc.baseMixin#height height} function.\n     * @method minHeight\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#height height}\n     * @param {Number} [minHeight=200]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.minHeight = function (minHeight) {\n        if (!arguments.length) {\n            return _minHeight;\n        }\n        _minHeight = minHeight;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off using the SVG\n     * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox `viewBox` attribute}.\n     * When enabled, `viewBox` will be set on the svg root element instead of `width` and `height`.\n     * Requires that the chart aspect ratio be defined using chart.width(w) and chart.height(h).\n     *\n     * This will maintain the aspect ratio while enabling the chart to resize responsively to the\n     * space given to the chart using CSS. For example, the chart can use `width: 100%; height:\n     * 100%` or absolute positioning to resize to its parent div.\n     *\n     * Since the text will be sized as if the chart is drawn according to the width and height, and\n     * will be resized if the chart is any other size, you need to set the chart width and height so\n     * that the text looks good. In practice, 600x400 seems to work pretty well for most charts.\n     *\n     * You can see examples of this resizing strategy in the [Chart Resizing\n     * Examples](http://dc-js.github.io/dc.js/resizing/); just add `?resize=viewbox` to any of the\n     * one-chart examples to enable `useViewBoxResizing`.\n     * @method useViewBoxResizing\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [useViewBoxResizing=false]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.useViewBoxResizing = function (useViewBoxResizing) {\n        if (!arguments.length) {\n            return _useViewBoxResizing;\n        }\n        _useViewBoxResizing = useViewBoxResizing;\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Set or get the dimension attribute of a chart. In `dc`, a dimension can be any valid\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter dimension}\n     *\n     * If a value is given, then it will be used as the new dimension. If no value is specified then\n     * the current dimension will be returned.\n     * @method dimension\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter.dimension}\n     * @example\n     * var index = crossfilter([]);\n     * var dimension = index.dimension(dc.pluck('key'));\n     * chart.dimension(dimension);\n     * @param {crossfilter.dimension} [dimension]\n     * @returns {crossfilter.dimension|dc.baseMixin}\n     */\n    _chart.dimension = function (dimension) {\n        if (!arguments.length) {\n            return _dimension;\n        }\n        _dimension = dimension;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * Set the data callback or retrieve the chart's data set. The data callback is passed the chart's\n     * group and by default will return\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all}.\n     * This behavior may be modified to, for instance, return only the top 5 groups.\n     * @method data\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // Default data function\n     * chart.data(function (group) { return group.all(); });\n     *\n     * chart.data(function (group) { return group.top(5); });\n     * @param {Function} [callback]\n     * @returns {*|dc.baseMixin}\n     */\n    _chart.data = function (callback) {\n        if (!arguments.length) {\n            return _data.call(_chart, _group);\n        }\n        _data = typeof callback === 'function' ? callback : dc.utils.constant(callback);\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Set or get the group attribute of a chart. In `dc` a group is a\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter group}.\n     * Usually the group should be created from the particular dimension associated with the same chart. If a value is\n     * given, then it will be used as the new group.\n     *\n     * If no value specified then the current group will be returned.\n     * If `name` is specified then it will be used to generate legend label.\n     * @method group\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n     * @example\n     * var index = crossfilter([]);\n     * var dimension = index.dimension(dc.pluck('key'));\n     * chart.dimension(dimension);\n     * chart.group(dimension.group(crossfilter.reduceSum()));\n     * @param {crossfilter.group} [group]\n     * @param {String} [name]\n     * @returns {crossfilter.group|dc.baseMixin}\n     */\n    _chart.group = function (group, name) {\n        if (!arguments.length) {\n            return _group;\n        }\n        _group = group;\n        _chart._groupName = name;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * Get or set an accessor to order ordinal dimensions.  The chart uses\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\n     * to sort elements; this accessor returns the value to order on.\n     * @method ordering\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\n     * @example\n     * // Default ordering accessor\n     * _chart.ordering(dc.pluck('key'));\n     * @param {Function} [orderFunction]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.ordering = function (orderFunction) {\n        if (!arguments.length) {\n            return _ordering;\n        }\n        _ordering = orderFunction;\n        _orderSort = crossfilter.quicksort.by(_ordering);\n        _chart.expireCache();\n        return _chart;\n    };\n\n    _chart._computeOrderedGroups = function (data) {\n        var dataCopy = data.slice(0);\n\n        if (dataCopy.length <= 1) {\n            return dataCopy;\n        }\n\n        if (!_orderSort) {\n            _orderSort = crossfilter.quicksort.by(_ordering);\n        }\n\n        return _orderSort(dataCopy, 0, dataCopy.length);\n    };\n\n    /**\n     * Clear all filters associated with this chart. The same effect can be achieved by calling\n     * {@link dc.baseMixin#filter chart.filter(null)}.\n     * @method filterAll\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.filterAll = function () {\n        return _chart.filter(null);\n    };\n\n    /**\n     * Execute d3 single selection in the chart's scope using the given selector and return the d3\n     * selection.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     * @method select\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3.select}\n     * @example\n     * // Has the same effect as d3.select('#chart-id').select(selector)\n     * chart.select(selector)\n     * @returns {d3.selection}\n     */\n    _chart.select = function (s) {\n        return _root.select(s);\n    };\n\n    /**\n     * Execute in scope d3 selectAll using the given selector and return d3 selection result.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     * @method selectAll\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#selectAll d3.selectAll}\n     * @example\n     * // Has the same effect as d3.select('#chart-id').selectAll(selector)\n     * chart.selectAll(selector)\n     * @returns {d3.selection}\n     */\n    _chart.selectAll = function (s) {\n        return _root ? _root.selectAll(s) : null;\n    };\n\n    /**\n     * Set the root SVGElement to either be an existing chart's root; or any valid [d3 single\n     * selector](https://github.com/d3/d3-selection/blob/master/README.md#selecting-elements) specifying a dom\n     * block element such as a div; or a dom element or d3 selection. Optionally registers the chart\n     * within the chartGroup. This class is called internally on chart initialization, but be called\n     * again to relocate the chart. However, it will orphan any previously created SVGElements.\n     * @method anchor\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {anchorChart|anchorSelector|anchorNode} [parent]\n     * @param {String} [chartGroup]\n     * @returns {String|node|d3.selection|dc.baseMixin}\n     */\n    _chart.anchor = function (parent, chartGroup) {\n        if (!arguments.length) {\n            return _anchor;\n        }\n        if (dc.instanceOfChart(parent)) {\n            _anchor = parent.anchor();\n            _root = parent.root();\n            _isChild = true;\n        } else if (parent) {\n            if (parent.select && parent.classed) { // detect d3 selection\n                _anchor = parent.node();\n            } else {\n                _anchor = parent;\n            }\n            _root = d3.select(_anchor);\n            _root.classed(dc.constants.CHART_CLASS, true);\n            dc.registerChart(_chart, chartGroup);\n            _isChild = false;\n        } else {\n            throw new dc.errors.BadArgumentException('parent must be defined');\n        }\n        _chartGroup = chartGroup;\n        return _chart;\n    };\n\n    /**\n     * Returns the DOM id for the chart's anchored location.\n     * @method anchorName\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {String}\n     */\n    _chart.anchorName = function () {\n        var a = _chart.anchor();\n        if (a && a.id) {\n            return a.id;\n        }\n        if (a && a.replace) {\n            return a.replace('#', '');\n        }\n        return 'dc-chart' + _chart.chartID();\n    };\n\n    /**\n     * Returns the root element where a chart resides. Usually it will be the parent div element where\n     * the SVGElement was created. You can also pass in a new root element however this is usually handled by\n     * dc internally. Resetting the root element on a chart outside of dc internals may have\n     * unexpected consequences.\n     * @method root\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement HTMLElement}\n     * @param {HTMLElement} [rootElement]\n     * @returns {HTMLElement|dc.baseMixin}\n     */\n    _chart.root = function (rootElement) {\n        if (!arguments.length) {\n            return _root;\n        }\n        _root = rootElement;\n        return _chart;\n    };\n\n    /**\n     * Returns the top SVGElement for this specific chart. You can also pass in a new SVGElement,\n     * however this is usually handled by dc internally. Resetting the SVGElement on a chart outside\n     * of dc internals may have unexpected consequences.\n     * @method svg\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\n     * @param {SVGElement|d3.selection} [svgElement]\n     * @returns {SVGElement|d3.selection|dc.baseMixin}\n     */\n    _chart.svg = function (svgElement) {\n        if (!arguments.length) {\n            return _svg;\n        }\n        _svg = svgElement;\n        return _chart;\n    };\n\n    /**\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\n     * @method resetSvg\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\n     * @returns {SVGElement}\n     */\n    _chart.resetSvg = function () {\n        _chart.select('svg').remove();\n        return generateSvg();\n    };\n\n    function sizeSvg () {\n        if (_svg) {\n            if (!_useViewBoxResizing) {\n                _svg\n                    .attr('width', _chart.width())\n                    .attr('height', _chart.height());\n            } else if (!_svg.attr('viewBox')) {\n                _svg\n                    .attr('viewBox', '0 0 ' + _chart.width() + ' ' + _chart.height());\n            }\n        }\n    }\n\n    function generateSvg () {\n        _svg = _chart.root().append('svg');\n        sizeSvg();\n        return _svg;\n    }\n\n    /**\n     * Set or get the filter printer function. The filter printer function is used to generate human\n     * friendly text for filter value(s) associated with the chart instance. The text will get shown\n     * in the `.filter element; see {@link dc.baseMixin#turnOnControls turnOnControls}.\n     *\n     * By default dc charts use a default filter printer {@link dc.printers.filters dc.printers.filters}\n     * that provides simple printing support for both single value and ranged filters.\n     * @method filterPrinter\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // for a chart with an ordinal brush, print the filters in upper case\n     * chart.filterPrinter(function(filters) {\n     *   return filters.map(function(f) { return f.toUpperCase(); }).join(', ');\n     * });\n     * // for a chart with a range brush, print the filter as start and extent\n     * chart.filterPrinter(function(filters) {\n     *   return 'start ' + dc.utils.printSingleValue(filters[0][0]) +\n     *     ' extent ' + dc.utils.printSingleValue(filters[0][1] - filters[0][0]);\n     * });\n     * @param {Function} [filterPrinterFunction=dc.printers.filters]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.filterPrinter = function (filterPrinterFunction) {\n        if (!arguments.length) {\n            return _filterPrinter;\n        }\n        _filterPrinter = filterPrinterFunction;\n        return _chart;\n    };\n\n    /**\n     * If set, use the `visibility` attribute instead of the `display` attribute for showing/hiding\n     * chart reset and filter controls, for less disruption to the layout.\n     * @method controlsUseVisibility\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [controlsUseVisibility=false]\n     * @returns {Boolean|dc.baseMixin}\n     **/\n    _chart.controlsUseVisibility = function (useVisibility) {\n        if (!arguments.length) {\n            return _controlsUseVisibility;\n        }\n        _controlsUseVisibility = useVisibility;\n        return _chart;\n    };\n\n    /**\n     * Turn on optional control elements within the root element. dc currently supports the\n     * following html control elements.\n     * * root.selectAll('.reset') - elements are turned on if the chart has an active filter. This type\n     * of control element is usually used to store a reset link to allow user to reset filter on a\n     * certain chart. This element will be turned off automatically if the filter is cleared.\n     * * root.selectAll('.filter') elements are turned on if the chart has an active filter. The text\n     * content of this element is then replaced with the current filter value using the filter printer\n     * function. This type of element will be turned off automatically if the filter is cleared.\n     * @method turnOnControls\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.turnOnControls = function () {\n        if (_root) {\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\n            _chart.selectAll('.reset').style(attribute, null);\n            _chart.selectAll('.filter').text(_filterPrinter(_chart.filters())).style(attribute, null);\n        }\n        return _chart;\n    };\n\n    /**\n     * Turn off optional control elements within the root element.\n     * @method turnOffControls\n     * @memberof dc.baseMixin\n     * @see {@link dc.baseMixin#turnOnControls turnOnControls}\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.turnOffControls = function () {\n        if (_root) {\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\n            var value = _chart.controlsUseVisibility() ? 'hidden' : 'none';\n            _chart.selectAll('.reset').style(attribute, value);\n            _chart.selectAll('.filter').style(attribute, value).text(_chart.filter());\n        }\n        return _chart;\n    };\n\n    /**\n     * Set or get the animation transition duration (in milliseconds) for this chart instance.\n     * @method transitionDuration\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Number} [duration=750]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.transitionDuration = function (duration) {\n        if (!arguments.length) {\n            return _transitionDuration;\n        }\n        _transitionDuration = duration;\n        return _chart;\n    };\n\n    /**\n     * Set or get the animation transition delay (in milliseconds) for this chart instance.\n     * @method transitionDelay\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Number} [delay=0]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.transitionDelay = function (delay) {\n        if (!arguments.length) {\n            return _transitionDelay;\n        }\n        _transitionDelay = delay;\n        return _chart;\n    };\n\n    _chart._mandatoryAttributes = function (_) {\n        if (!arguments.length) {\n            return _mandatoryAttributes;\n        }\n        _mandatoryAttributes = _;\n        return _chart;\n    };\n\n    function checkForMandatoryAttributes (a) {\n        if (!_chart[a] || !_chart[a]()) {\n            throw new dc.errors.InvalidStateException('Mandatory attribute chart.' + a +\n                ' is missing on chart[#' + _chart.anchorName() + ']');\n        }\n    }\n\n    /**\n     * Invoking this method will force the chart to re-render everything from scratch. Generally it\n     * should only be used to render the chart for the first time on the page or if you want to make\n     * sure everything is redrawn from scratch instead of relying on the default incremental redrawing\n     * behaviour.\n     * @method render\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.render = function () {\n        _height = _width = undefined; // force recalculate\n        _listeners.call('preRender', _chart, _chart);\n\n        if (_mandatoryAttributes) {\n            _mandatoryAttributes.forEach(checkForMandatoryAttributes);\n        }\n\n        var result = _chart._doRender();\n\n        if (_legend) {\n            _legend.render();\n        }\n\n        _chart._activateRenderlets('postRender');\n\n        return result;\n    };\n\n    _chart._activateRenderlets = function (event) {\n        _listeners.call('pretransition', _chart, _chart);\n        if (_chart.transitionDuration() > 0 && _svg) {\n            _svg.transition().duration(_chart.transitionDuration()).delay(_chart.transitionDelay())\n                .on('end', function () {\n                    _listeners.call('renderlet', _chart, _chart);\n                    if (event) {\n                        _listeners.call(event, _chart, _chart);\n                    }\n                });\n        } else {\n            _listeners.call('renderlet', _chart, _chart);\n            if (event) {\n                _listeners.call(event, _chart, _chart);\n            }\n        }\n    };\n\n    /**\n     * Calling redraw will cause the chart to re-render data changes incrementally. If there is no\n     * change in the underlying data dimension then calling this method will have no effect on the\n     * chart. Most chart interaction in dc will automatically trigger this method through internal\n     * events (in particular {@link dc.redrawAll dc.redrawAll}); therefore, you only need to\n     * manually invoke this function if data is manipulated outside of dc's control (for example if\n     * data is loaded in the background using\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}).\n     * @method redraw\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.redraw = function () {\n        sizeSvg();\n        _listeners.call('preRedraw', _chart, _chart);\n\n        var result = _chart._doRedraw();\n\n        if (_legend) {\n            _legend.render();\n        }\n\n        _chart._activateRenderlets('postRedraw');\n\n        return result;\n    };\n\n    /**\n     * Gets/sets the commit handler. If the chart has a commit handler, the handler will be called when\n     * the chart's filters have changed, in order to send the filter data asynchronously to a server.\n     *\n     * Unlike other functions in dc.js, the commit handler is asynchronous. It takes two arguments:\n     * a flag indicating whether this is a render (true) or a redraw (false), and a callback to be\n     * triggered once the commit is filtered. The callback has the standard node.js continuation signature\n     * with error first and result second.\n     * @method commitHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.commitHandler = function (commitHandler) {\n        if (!arguments.length) {\n            return _commitHandler;\n        }\n        _commitHandler = commitHandler;\n        return _chart;\n    };\n\n    /**\n     * Redraws all charts in the same group as this chart, typically in reaction to a filter\n     * change. If the chart has a {@link dc.baseMixin.commitFilter commitHandler}, it will\n     * be executed and waited for.\n     * @method redrawGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.redrawGroup = function () {\n        if (_commitHandler) {\n            _commitHandler(false, function (error, result) {\n                if (error) {\n                    console.log(error);\n                } else {\n                    dc.redrawAll(_chart.chartGroup());\n                }\n            });\n        } else {\n            dc.redrawAll(_chart.chartGroup());\n        }\n        return _chart;\n    };\n\n    /**\n     * Renders all charts in the same group as this chart. If the chart has a\n     * {@link dc.baseMixin.commitFilter commitHandler}, it will be executed and waited for\n     * @method renderGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.renderGroup = function () {\n        if (_commitHandler) {\n            _commitHandler(false, function (error, result) {\n                if (error) {\n                    console.log(error);\n                } else {\n                    dc.renderAll(_chart.chartGroup());\n                }\n            });\n        } else {\n            dc.renderAll(_chart.chartGroup());\n        }\n        return _chart;\n    };\n\n    _chart._invokeFilteredListener = function (f) {\n        if (f !== undefined) {\n            _listeners.call('filtered', _chart, _chart, f);\n        }\n    };\n\n    _chart._invokeZoomedListener = function () {\n        _listeners.call('zoomed', _chart, _chart);\n    };\n\n    var _hasFilterHandler = function (filters, filter) {\n        if (filter === null || typeof(filter) === 'undefined') {\n            return filters.length > 0;\n        }\n        return filters.some(function (f) {\n            return filter <= f && filter >= f;\n        });\n    };\n\n    /**\n     * Set or get the has-filter handler. The has-filter handler is a function that checks to see if\n     * the chart's current filters (first argument) include a specific filter (second argument).  Using a custom has-filter handler allows\n     * you to change the way filters are checked for and replaced.\n     * @method hasFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default has-filter handler\n     * chart.hasFilterHandler(function (filters, filter) {\n     *     if (filter === null || typeof(filter) === 'undefined') {\n     *         return filters.length > 0;\n     *     }\n     *     return filters.some(function (f) {\n     *         return filter <= f && filter >= f;\n     *     });\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.hasFilterHandler(function(filters, filter) {\n     *     return false;\n     * });\n     * @param {Function} [hasFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.hasFilterHandler = function (hasFilterHandler) {\n        if (!arguments.length) {\n            return _hasFilterHandler;\n        }\n        _hasFilterHandler = hasFilterHandler;\n        return _chart;\n    };\n\n    /**\n     * Check whether any active filter or a specific filter is associated with particular chart instance.\n     * This function is **not chainable**.\n     * @method hasFilter\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#hasFilterHandler hasFilterHandler}\n     * @param {*} [filter]\n     * @returns {Boolean}\n     */\n    _chart.hasFilter = function (filter) {\n        return _hasFilterHandler(_filters, filter);\n    };\n\n    var _removeFilterHandler = function (filters, filter) {\n        for (var i = 0; i < filters.length; i++) {\n            if (filters[i] <= filter && filters[i] >= filter) {\n                filters.splice(i, 1);\n                break;\n            }\n        }\n        return filters;\n    };\n\n    /**\n     * Set or get the remove filter handler. The remove filter handler is a function that removes a\n     * filter from the chart's current filters. Using a custom remove filter handler allows you to\n     * change how filters are removed or perform additional work when removing a filter, e.g. when\n     * using a filter server other than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method removeFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default remove filter handler\n     * chart.removeFilterHandler(function (filters, filter) {\n     *     for (var i = 0; i < filters.length; i++) {\n     *         if (filters[i] <= filter && filters[i] >= filter) {\n     *             filters.splice(i, 1);\n     *             break;\n     *         }\n     *     }\n     *     return filters;\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.removeFilterHandler(function(filters, filter) {\n     *     return filters;\n     * });\n     * @param {Function} [removeFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.removeFilterHandler = function (removeFilterHandler) {\n        if (!arguments.length) {\n            return _removeFilterHandler;\n        }\n        _removeFilterHandler = removeFilterHandler;\n        return _chart;\n    };\n\n    var _addFilterHandler = function (filters, filter) {\n        filters.push(filter);\n        return filters;\n    };\n\n    /**\n     * Set or get the add filter handler. The add filter handler is a function that adds a filter to\n     * the chart's filter list. Using a custom add filter handler allows you to change the way filters\n     * are added or perform additional work when adding a filter, e.g. when using a filter server other\n     * than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method addFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default add filter handler\n     * chart.addFilterHandler(function (filters, filter) {\n     *     filters.push(filter);\n     *     return filters;\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.addFilterHandler(function(filters, filter) {\n     *     return filters;\n     * });\n     * @param {Function} [addFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.addFilterHandler = function (addFilterHandler) {\n        if (!arguments.length) {\n            return _addFilterHandler;\n        }\n        _addFilterHandler = addFilterHandler;\n        return _chart;\n    };\n\n    var _resetFilterHandler = function (filters) {\n        return [];\n    };\n\n    /**\n     * Set or get the reset filter handler. The reset filter handler is a function that resets the\n     * chart's filter list by returning a new list. Using a custom reset filter handler allows you to\n     * change the way filters are reset, or perform additional work when resetting the filters,\n     * e.g. when using a filter server other than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method resetFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default remove filter handler\n     * function (filters) {\n     *     return [];\n     * }\n     *\n     * // custom filter handler (no-op)\n     * chart.resetFilterHandler(function(filters) {\n     *     return filters;\n     * });\n     * @param {Function} [resetFilterHandler]\n     * @returns {dc.baseMixin}\n     */\n    _chart.resetFilterHandler = function (resetFilterHandler) {\n        if (!arguments.length) {\n            return _resetFilterHandler;\n        }\n        _resetFilterHandler = resetFilterHandler;\n        return _chart;\n    };\n\n    function applyFilters (filters) {\n        if (_chart.dimension() && _chart.dimension().filter) {\n            var fs = _filterHandler(_chart.dimension(), filters);\n            if (fs) {\n                filters = fs;\n            }\n        }\n        return filters;\n    }\n\n    /**\n     * Replace the chart filter. This is equivalent to calling `chart.filter(null).filter(filter)`\n     * but more efficient because the filter is only applied once.\n     *\n     * @method replaceFilter\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {*} [filter]\n     * @returns {dc.baseMixin}\n     **/\n    _chart.replaceFilter = function (filter) {\n        _filters = _resetFilterHandler(_filters);\n        _chart.filter(filter);\n        return _chart;\n    };\n\n    /**\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\n     * is given.\n     *\n     * The filter parameter can take one of these forms:\n     * * A single value: the value will be toggled (added if it is not present in the current\n     * filters, removed if it is present)\n     * * An array containing a single array of values (`[[value,value,value]]`): each value is\n     * toggled\n     * * When appropriate for the chart, a {@link dc.filters dc filter object} such as\n     *   * {@link dc.filters.RangedFilter `dc.filters.RangedFilter`} for the\n     * {@link dc.coordinateGridMixin dc.coordinateGridMixin} charts\n     *   * {@link dc.filters.TwoDimensionalFilter `dc.filters.TwoDimensionalFilter`} for the\n     * {@link dc.heatMap heat map}\n     *   * {@link dc.filters.RangedTwoDimensionalFilter `dc.filters.RangedTwoDimensionalFilter`}\n     * for the {@link dc.scatterPlot scatter plot}\n     * * `null`: the filter will be reset using the\n     * {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\n     *\n     * Note that this is always a toggle (even when it doesn't make sense for the filter type). If\n     * you wish to replace the current filter, either call `chart.filter(null)` first - or it's more\n     * efficient to call {@link dc.baseMixin#replaceFilter `chart.replaceFilter(filter)`} instead.\n     *\n     * Each toggle is executed by checking if the value is already present using the\n     * {@link dc.baseMixin#hasFilterHandler hasFilterHandler}; if it is not present, it is added\n     * using the {@link dc.baseMixin#addFilterHandler addFilterHandler}; if it is already present,\n     * it is removed using the {@link dc.baseMixin#removeFilterHandler removeFilterHandler}.\n     *\n     * Once the filters array has been updated, the filters are applied to the\n     * crossfilter dimension, using the {@link dc.baseMixin#filterHandler filterHandler}.\n     *\n     * Once you have set the filters, call {@link dc.baseMixin#redrawGroup `chart.redrawGroup()`}\n     * (or {@link dc.redrawAll `dc.redrawAll()`}) to redraw the chart's group.\n     * @method filter\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#addFilterHandler addFilterHandler}\n     * @see {@link dc.baseMixin#removeFilterHandler removeFilterHandler}\n     * @see {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\n     * @see {@link dc.baseMixin#filterHandler filterHandler}\n     * @example\n     * // filter by a single string\n     * chart.filter('Sunday');\n     * // filter by a single age\n     * chart.filter(18);\n     * // filter by a set of states\n     * chart.filter([['MA', 'TX', 'ND', 'WA']]);\n     * // filter by range -- note the use of dc.filters.RangedFilter, which is different\n     * // from the syntax for filtering a crossfilter dimension directly, dimension.filter([15,20])\n     * chart.filter(dc.filters.RangedFilter(15,20));\n     * @param {*} [filter]\n     * @returns {dc.baseMixin}\n     */\n    _chart.filter = function (filter) {\n        if (!arguments.length) {\n            return _filters.length > 0 ? _filters[0] : null;\n        }\n        var filters = _filters;\n        if (filter instanceof Array && filter[0] instanceof Array && !filter.isFiltered) {\n            // toggle each filter\n            filter[0].forEach(function (f) {\n                if (_hasFilterHandler(filters, f)) {\n                    filters = _removeFilterHandler(filters, f);\n                } else {\n                    filters = _addFilterHandler(filters, f);\n                }\n            });\n        } else if (filter === null) {\n            filters = _resetFilterHandler(filters);\n        } else {\n            if (_hasFilterHandler(filters, filter)) {\n                filters = _removeFilterHandler(filters, filter);\n            } else {\n                filters = _addFilterHandler(filters, filter);\n            }\n        }\n        _filters = applyFilters(filters);\n        _chart._invokeFilteredListener(filter);\n\n        if (_root !== null && _chart.hasFilter()) {\n            _chart.turnOnControls();\n        } else {\n            _chart.turnOffControls();\n        }\n\n        return _chart;\n    };\n\n    /**\n     * Returns all current filters. This method does not perform defensive cloning of the internal\n     * filter array before returning, therefore any modification of the returned array will effect the\n     * chart's internal filter storage.\n     * @method filters\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {Array<*>}\n     */\n    _chart.filters = function () {\n        return _filters;\n    };\n\n    _chart.highlightSelected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, true);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    _chart.fadeDeselected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, true);\n    };\n\n    _chart.resetHighlight = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    /**\n     * This function is passed to d3 as the onClick handler for each chart. The default behavior is to\n     * filter on the clicked datum (passed to the callback) and redraw the chart group.\n     * @method onClick\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {*} datum\n     */\n    _chart.onClick = function (datum) {\n        var filter = _chart.keyAccessor()(datum);\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    /**\n     * Set or get the filter handler. The filter handler is a function that performs the filter action\n     * on a specific dimension. Using a custom filter handler allows you to perform additional logic\n     * before or after filtering.\n     * @method filterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter crossfilter.dimension.filter}\n     * @example\n     * // the default filter handler handles all possible cases for the charts in dc.js\n     * // you can replace it with something more specialized for your own chart\n     * chart.filterHandler(function (dimension, filters) {\n     *     if (filters.length === 0) {\n     *         // the empty case (no filtering)\n     *         dimension.filter(null);\n     *     } else if (filters.length === 1 && !filters[0].isFiltered) {\n     *         // single value and not a function-based filter\n     *         dimension.filterExact(filters[0]);\n     *     } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n     *         // single range-based filter\n     *         dimension.filterRange(filters[0]);\n     *     } else {\n     *         // an array of values, or an array of filter objects\n     *         dimension.filterFunction(function (d) {\n     *             for (var i = 0; i < filters.length; i++) {\n     *                 var filter = filters[i];\n     *                 if (filter.isFiltered && filter.isFiltered(d)) {\n     *                     return true;\n     *                 } else if (filter <= d && filter >= d) {\n     *                     return true;\n     *                 }\n     *             }\n     *             return false;\n     *         });\n     *     }\n     *     return filters;\n     * });\n     *\n     * // custom filter handler\n     * chart.filterHandler(function(dimension, filter){\n     *     var newFilter = filter + 10;\n     *     dimension.filter(newFilter);\n     *     return newFilter; // set the actual filter value to the new value\n     * });\n     * @param {Function} [filterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.filterHandler = function (filterHandler) {\n        if (!arguments.length) {\n            return _filterHandler;\n        }\n        _filterHandler = filterHandler;\n        return _chart;\n    };\n\n    // abstract function stub\n    _chart._doRender = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        // do nothing in base, should be overridden by sub-function\n        return [];\n    };\n\n    _chart.legendHighlight = function () {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendReset = function () {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendToggle = function () {\n        // do nothing in base, should be overriden by sub-function\n    };\n\n    _chart.isLegendableHidden = function () {\n        // do nothing in base, should be overridden by sub-function\n        return false;\n    };\n\n    /**\n     * Set or get the key accessor function. The key accessor function is used to retrieve the key\n     * value from the crossfilter group. Key values are used differently in different charts, for\n     * example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.\n     * @method keyAccessor\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default key accessor\n     * chart.keyAccessor(function(d) { return d.key; });\n     * // custom key accessor for a multi-value crossfilter reduction\n     * chart.keyAccessor(function(p) { return p.value.absGain; });\n     * @param {Function} [keyAccessor]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.keyAccessor = function (keyAccessor) {\n        if (!arguments.length) {\n            return _keyAccessor;\n        }\n        _keyAccessor = keyAccessor;\n        return _chart;\n    };\n\n    /**\n     * Set or get the value accessor function. The value accessor function is used to retrieve the\n     * value from the crossfilter group. Group values are used differently in different charts, for\n     * example values correspond to slice sizes in a pie chart and y axis positions in a grid\n     * coordinate chart.\n     * @method valueAccessor\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default value accessor\n     * chart.valueAccessor(function(d) { return d.value; });\n     * // custom value accessor for a multi-value crossfilter reduction\n     * chart.valueAccessor(function(p) { return p.value.percentageGain; });\n     * @param {Function} [valueAccessor]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.valueAccessor = function (valueAccessor) {\n        if (!arguments.length) {\n            return _valueAccessor;\n        }\n        _valueAccessor = valueAccessor;\n        return _chart;\n    };\n\n    /**\n     * Set or get the label function. The chart class will use this function to render labels for each\n     * child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every\n     * chart supports the label function, for example line chart does not use this function\n     * at all. By default, enables labels; pass false for the second parameter if this is not desired.\n     * @method label\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default label function just return the key\n     * chart.label(function(d) { return d.key; });\n     * // label function has access to the standard d3 data binding and can get quite complicated\n     * chart.label(function(d) { return d.data.key + '(' + Math.floor(d.data.value / all.value() * 100) + '%)'; });\n     * @param {Function} [labelFunction]\n     * @param {Boolean} [enableLabels=true]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.label = function (labelFunction, enableLabels) {\n        if (!arguments.length) {\n            return _label;\n        }\n        _label = labelFunction;\n        if ((enableLabels === undefined) || enableLabels) {\n            _renderLabel = true;\n        }\n        return _chart;\n    };\n\n    /**\n     * Turn on/off label rendering\n     * @method renderLabel\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [renderLabel=false]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.renderLabel = function (renderLabel) {\n        if (!arguments.length) {\n            return _renderLabel;\n        }\n        _renderLabel = renderLabel;\n        return _chart;\n    };\n\n    /**\n     * Set or get the title function. The chart class will use this function to render the SVGElement title\n     * (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice\n     * in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;\n     * however in grid coordinate charts you need to turn off the brush in order to see titles, because\n     * otherwise the brush layer will block tooltip triggering.\n     * @method title\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default title function shows \"key: value\"\n     * chart.title(function(d) { return d.key + ': ' + d.value; });\n     * // title function has access to the standard d3 data binding and can get quite complicated\n     * chart.title(function(p) {\n     *    return p.key.getFullYear()\n     *        + '\\n'\n     *        + 'Index Gain: ' + numberFormat(p.value.absGain) + '\\n'\n     *        + 'Index Gain in Percentage: ' + numberFormat(p.value.percentageGain) + '%\\n'\n     *        + 'Fluctuation / Index Ratio: ' + numberFormat(p.value.fluctuationPercentage) + '%';\n     * });\n     * @param {Function} [titleFunction]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.title = function (titleFunction) {\n        if (!arguments.length) {\n            return _title;\n        }\n        _title = titleFunction;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off title rendering, or return the state of the render title flag if no arguments are\n     * given.\n     * @method renderTitle\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [renderTitle=true]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.renderTitle = function (renderTitle) {\n        if (!arguments.length) {\n            return _renderTitle;\n        }\n        _renderTitle = renderTitle;\n        return _chart;\n    };\n\n    /**\n     * A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added\n     * to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked\n     * right after the chart finishes its transitions, giving you a way to modify the SVGElements.\n     * Renderlet functions take the chart instance as the only input parameter and you can\n     * use the dc API or use raw d3 to achieve pretty much any effect.\n     *\n     * Use {@link dc.baseMixin#on on} with a 'renderlet' prefix.\n     * Generates a random key for the renderlet, which makes it hard to remove.\n     * @method renderlet\n     * @memberof dc.baseMixin\n     * @instance\n     * @deprecated\n     * @example\n     * // do this instead of .renderlet(function(chart) { ... })\n     * chart.on(\"renderlet\", function(chart){\n     *     // mix of dc API and d3 manipulation\n     *     chart.select('g.y').style('display', 'none');\n     *     // its a closure so you can also access other chart variable available in the closure scope\n     *     moveChart.filter(chart.filter());\n     * });\n     * @param {Function} renderletFunction\n     * @returns {dc.baseMixin}\n     */\n    _chart.renderlet = dc.logger.deprecate(function (renderletFunction) {\n        _chart.on('renderlet.' + dc.utils.uniqueId(), renderletFunction);\n        return _chart;\n    }, 'chart.renderlet has been deprecated.  Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)');\n\n    /**\n     * Get or set the chart group to which this chart belongs. Chart groups are rendered or redrawn\n     * together since it is expected they share the same underlying crossfilter data set.\n     * @method chartGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {String} [chartGroup]\n     * @returns {String|dc.baseMixin}\n     */\n    _chart.chartGroup = function (chartGroup) {\n        if (!arguments.length) {\n            return _chartGroup;\n        }\n        if (!_isChild) {\n            dc.deregisterChart(_chart, _chartGroup);\n        }\n        _chartGroup = chartGroup;\n        if (!_isChild) {\n            dc.registerChart(_chart, _chartGroup);\n        }\n        return _chart;\n    };\n\n    /**\n     * Expire the internal chart cache. dc charts cache some data internally on a per chart basis to\n     * speed up rendering and avoid unnecessary calculation; however it might be useful to clear the\n     * cache if you have changed state which will affect rendering.  For example, if you invoke\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}\n     * function or reset group or dimension after rendering, it is a good idea to\n     * clear the cache to make sure charts are rendered properly.\n     * @method expireCache\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.expireCache = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    /**\n     * Attach a dc.legend widget to this chart. The legend widget will automatically draw legend labels\n     * based on the color setting and names associated with each group.\n     * @method legend\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n     * @param {dc.legend} [legend]\n     * @returns {dc.legend|dc.baseMixin}\n     */\n    _chart.legend = function (legend) {\n        if (!arguments.length) {\n            return _legend;\n        }\n        _legend = legend;\n        _legend.parent(_chart);\n        return _chart;\n    };\n\n    /**\n     * Returns the internal numeric ID of the chart.\n     * @method chartID\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {String}\n     */\n    _chart.chartID = function () {\n        return _chart.__dcFlag__;\n    };\n\n    /**\n     * Set chart options using a configuration object. Each key in the object will cause the method of\n     * the same name to be called with the value to set that attribute for the chart.\n     * @method options\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * chart.options({dimension: myDimension, group: myGroup});\n     * @param {{}} opts\n     * @returns {dc.baseMixin}\n     */\n    _chart.options = function (opts) {\n        var applyOptions = [\n            'anchor',\n            'group',\n            'xAxisLabel',\n            'yAxisLabel',\n            'stack',\n            'title',\n            'point',\n            'getColor',\n            'overlayGeoJson'\n        ];\n\n        for (var o in opts) {\n            if (typeof(_chart[o]) === 'function') {\n                if (opts[o] instanceof Array && applyOptions.indexOf(o) !== -1) {\n                    _chart[o].apply(_chart, opts[o]);\n                } else {\n                    _chart[o].call(_chart, opts[o]);\n                }\n            } else {\n                dc.logger.debug('Not a valid option setter name: ' + o);\n            }\n        }\n        return _chart;\n    };\n\n    /**\n     * All dc chart instance supports the following listeners.\n     * Supports the following events:\n     * * `renderlet` - This listener function will be invoked after transitions after redraw and render. Replaces the\n     * deprecated {@link dc.baseMixin#renderlet renderlet} method.\n     * * `pretransition` - Like `.on('renderlet', ...)` but the event is fired before transitions start.\n     * * `preRender` - This listener function will be invoked before chart rendering.\n     * * `postRender` - This listener function will be invoked after chart finish rendering including\n     * all renderlets' logic.\n     * * `preRedraw` - This listener function will be invoked before chart redrawing.\n     * * `postRedraw` - This listener function will be invoked after chart finish redrawing\n     * including all renderlets' logic.\n     * * `filtered` - This listener function will be invoked after a filter is applied, added or removed.\n     * * `zoomed` - This listener function will be invoked after a zoom is triggered.\n     * @method on\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on d3.dispatch.on}\n     * @example\n     * .on('renderlet', function(chart, filter){...})\n     * .on('pretransition', function(chart, filter){...})\n     * .on('preRender', function(chart){...})\n     * .on('postRender', function(chart){...})\n     * .on('preRedraw', function(chart){...})\n     * .on('postRedraw', function(chart){...})\n     * .on('filtered', function(chart, filter){...})\n     * .on('zoomed', function(chart, filter){...})\n     * @param {String} event\n     * @param {Function} listener\n     * @returns {dc.baseMixin}\n     */\n    _chart.on = function (event, listener) {\n        _listeners.on(event, listener);\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n * Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid\n * Charts.\n * @name marginMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.marginMixin}\n */\ndc.marginMixin = function (_chart) {\n    var _margin = {top: 10, right: 50, bottom: 30, left: 30};\n\n    /**\n     * Get or set the margins for a particular coordinate grid chart instance. The margins is stored as\n     * an associative Javascript array.\n     * @method margins\n     * @memberof dc.marginMixin\n     * @instance\n     * @example\n     * var leftMargin = chart.margins().left; // 30 by default\n     * chart.margins().left = 50;\n     * leftMargin = chart.margins().left; // now 50\n     * @param {{top: Number, right: Number, left: Number, bottom: Number}} [margins={top: 10, right: 50, bottom: 30, left: 30}]\n     * @returns {{top: Number, right: Number, left: Number, bottom: Number}|dc.marginMixin}\n     */\n    _chart.margins = function (margins) {\n        if (!arguments.length) {\n            return _margin;\n        }\n        _margin = margins;\n        return _chart;\n    };\n\n    _chart.effectiveWidth = function () {\n        return _chart.width() - _chart.margins().left - _chart.margins().right;\n    };\n\n    _chart.effectiveHeight = function () {\n        return _chart.height() - _chart.margins().top - _chart.margins().bottom;\n    };\n\n    return _chart;\n};\n\n/**\n * The Color Mixin is an abstract chart functional class providing universal coloring support\n * as a mix-in for any concrete chart implementation.\n * @name colorMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.colorMixin}\n */\ndc.colorMixin = function (_chart) {\n    var _colors = d3.scaleOrdinal(dc.config.defaultColors());\n    var _defaultAccessor = true;\n\n    var _colorAccessor = function (d) { return _chart.keyAccessor()(d); };\n\n    /**\n     * Retrieve current color scale or set a new color scale. This methods accepts any function that\n     * operates like a d3 scale.\n     * @method colors\n     * @memberof dc.colorMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @example\n     * // alternate categorical scale\n     * chart.colors(d3.scale.category20b());\n     * // ordinal scale\n     * chart.colors(d3.scaleOrdinal().range(['red','green','blue']));\n     * // convenience method, the same as above\n     * chart.ordinalColors(['red','green','blue']);\n     * // set a linear scale\n     * chart.linearColors([\"#4575b4\", \"#ffffbf\", \"#a50026\"]);\n     * @param {d3.scale} [colorScale=d3.scaleOrdinal(d3.schemeCategory20c)]\n     * @returns {d3.scale|dc.colorMixin}\n     */\n    _chart.colors = function (colorScale) {\n        if (!arguments.length) {\n            return _colors;\n        }\n        if (colorScale instanceof Array) {\n            _colors = d3.scaleQuantize().range(colorScale); // deprecated legacy support, note: this fails for ordinal domains\n        } else {\n            _colors = typeof colorScale === 'function' ? colorScale : dc.utils.constant(colorScale);\n        }\n        return _chart;\n    };\n\n    /**\n     * Convenience method to set the color scale to\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal} with\n     * range `r`.\n     * @method ordinalColors\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<String>} r\n     * @returns {dc.colorMixin}\n     */\n    _chart.ordinalColors = function (r) {\n        return _chart.colors(d3.scaleOrdinal().range(r));\n    };\n\n    /**\n     * Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.\n     * @method linearColors\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<Number>} r\n     * @returns {dc.colorMixin}\n     */\n    _chart.linearColors = function (r) {\n        return _chart.colors(d3.scaleLinear()\n                             .range(r)\n                             .interpolate(d3.interpolateHcl));\n    };\n\n    /**\n     * Set or the get color accessor function. This function will be used to map a data point in a\n     * crossfilter group to a color value on the color scale. The default function uses the key\n     * accessor.\n     * @method colorAccessor\n     * @memberof dc.colorMixin\n     * @instance\n     * @example\n     * // default index based color accessor\n     * .colorAccessor(function (d, i){return i;})\n     * // color accessor for a multi-value crossfilter reduction\n     * .colorAccessor(function (d){return d.value.absGain;})\n     * @param {Function} [colorAccessor]\n     * @returns {Function|dc.colorMixin}\n     */\n    _chart.colorAccessor = function (colorAccessor) {\n        if (!arguments.length) {\n            return _colorAccessor;\n        }\n        _colorAccessor = colorAccessor;\n        _defaultAccessor = false;\n        return _chart;\n    };\n\n    // what is this?\n    _chart.defaultColorAccessor = function () {\n        return _defaultAccessor;\n    };\n\n    /**\n     * Set or get the current domain for the color mapping function. The domain must be supplied as an\n     * array.\n     *\n     * Note: previously this method accepted a callback function. Instead you may use a custom scale\n     * set by {@link dc.colorMixin#colors .colors}.\n     * @method colorDomain\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<String>} [domain]\n     * @returns {Array<String>|dc.colorMixin}\n     */\n    _chart.colorDomain = function (domain) {\n        if (!arguments.length) {\n            return _colors.domain();\n        }\n        _colors.domain(domain);\n        return _chart;\n    };\n\n    /**\n     * Set the domain by determining the min and max values as retrieved by\n     * {@link dc.colorMixin#colorAccessor .colorAccessor} over the chart's dataset.\n     * @method calculateColorDomain\n     * @memberof dc.colorMixin\n     * @instance\n     * @returns {dc.colorMixin}\n     */\n    _chart.calculateColorDomain = function () {\n        var newDomain = [d3.min(_chart.data(), _chart.colorAccessor()),\n                         d3.max(_chart.data(), _chart.colorAccessor())];\n        _colors.domain(newDomain);\n        return _chart;\n    };\n\n    /**\n     * Get the color for the datum d and counter i. This is used internally by charts to retrieve a color.\n     * @method getColor\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {*} d\n     * @param {Number} [i]\n     * @returns {String}\n     */\n    _chart.getColor = function (d, i) {\n        return _colors(_colorAccessor.call(this, d, i));\n    };\n\n    /**\n     * **Deprecated.** Get/set the color calculator. This actually replaces the\n     * {@link dc.colorMixin#getColor getColor} method!\n     *\n     * This is not recommended, since using a {@link dc.colorMixin#colorAccessor colorAccessor} and\n     * color scale ({@link dc.colorMixin#colors .colors}) is more powerful and idiomatic d3.\n     * @method colorCalculator\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {*} [colorCalculator]\n     * @returns {Function|dc.colorMixin}\n     */\n    _chart.colorCalculator = dc.logger.deprecate(function (colorCalculator) {\n        if (!arguments.length) {\n            return _chart.getColor;\n        }\n        _chart.getColor = colorCalculator;\n        return _chart;\n    }, 'colorMixin.colorCalculator has been deprecated. Please colorMixin.colors and colorMixin.colorAccessor instead');\n\n    return _chart;\n};\n\n/**\n * Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based\n * concrete chart types, e.g. bar chart, line chart, and bubble chart.\n * @name coordinateGridMixin\n * @memberof dc\n * @mixin\n * @mixes dc.colorMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @param {Object} _chart\n * @returns {dc.coordinateGridMixin}\n */\ndc.coordinateGridMixin = function (_chart) {\n    var GRID_LINE_CLASS = 'grid-line';\n    var HORIZONTAL_CLASS = 'horizontal';\n    var VERTICAL_CLASS = 'vertical';\n    var Y_AXIS_LABEL_CLASS = 'y-axis-label';\n    var X_AXIS_LABEL_CLASS = 'x-axis-label';\n    var CUSTOM_BRUSH_HANDLE_CLASS = 'custom-brush-handle';\n    var DEFAULT_AXIS_LABEL_PADDING = 12;\n\n    _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin(_chart)));\n\n    _chart.colors(d3.scaleOrdinal(d3.schemeCategory10));\n    _chart._mandatoryAttributes().push('x');\n    var _parent;\n    var _g;\n    var _chartBodyG;\n\n    var _x;\n    var _origX; // Will hold orginial scale in case of zoom\n    var _xOriginalDomain;\n    var _xAxis = d3.axisBottom();\n    var _xUnits = dc.units.integers;\n    var _xAxisPadding = 0;\n    var _xAxisPaddingUnit = d3.timeDay;\n    var _xElasticity = false;\n    var _xAxisLabel;\n    var _xAxisLabelPadding = 0;\n    var _lastXDomain;\n\n    var _y;\n    var _yAxis = null;\n    var _yAxisPadding = 0;\n    var _yElasticity = false;\n    var _yAxisLabel;\n    var _yAxisLabelPadding = 0;\n\n    var _brush = d3.brushX();\n    var _gBrush;\n    var _brushOn = true;\n    var _parentBrushOn = false;\n    var _round;\n\n    var _renderHorizontalGridLine = false;\n    var _renderVerticalGridLine = false;\n\n    var _resizing = false;\n    var _unitCount;\n\n    var _zoomScale = [1, Infinity];\n    var _zoomOutRestrict = true;\n\n    var _zoom = d3.zoom().on('zoom', onZoom);\n    var _nullZoom = d3.zoom().on('zoom', null);\n    var _hasBeenMouseZoomable = false;\n\n    var _rangeChart;\n    var _focusChart;\n\n    var _mouseZoomable = false;\n    var _clipPadding = 0;\n\n    var _outerRangeBandPadding = 0.5;\n    var _rangeBandPadding = 0;\n\n    var _useRightYAxis = false;\n\n    /**\n     * When changing the domain of the x or y scale, it is necessary to tell the chart to recalculate\n     * and redraw the axes. (`.rescale()` is called automatically when the x or y scale is replaced\n     * with {@link dc.coordinateGridMixin+x .x()} or {@link dc.coordinateGridMixin#y .y()}, and has\n     * no effect on elastic scales.)\n     * @method rescale\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {dc.coordinateGridMixin}\n     */\n    _chart.rescale = function () {\n        _unitCount = undefined;\n        _resizing = true;\n        return _chart;\n    };\n\n    _chart.resizing = function () {\n        return _resizing;\n    };\n\n    /**\n     * Get or set the range selection chart associated with this instance. Setting the range selection\n     * chart using this function will automatically update its selection brush when the current chart\n     * zooms in. In return the given range chart will also automatically attach this chart as its focus\n     * chart hence zoom in when range brush updates.\n     *\n     * Usually the range and focus charts will share a dimension. The range chart will set the zoom\n     * boundaries for the focus chart, so its dimension values must be compatible with the domain of\n     * the focus chart.\n     *\n     * See the [Nasdaq 100 Index](http://dc-js.github.com/dc.js/) example for this effect in action.\n     * @method rangeChart\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {dc.coordinateGridMixin} [rangeChart]\n     * @returns {dc.coordinateGridMixin}\n     */\n    _chart.rangeChart = function (rangeChart) {\n        if (!arguments.length) {\n            return _rangeChart;\n        }\n        _rangeChart = rangeChart;\n        _rangeChart.focusChart(_chart);\n        return _chart;\n    };\n\n    /**\n     * Get or set the scale extent for mouse zooms.\n     * @method zoomScale\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Array<Number|Date>} [extent=[1, Infinity]]\n     * @returns {Array<Number|Date>|dc.coordinateGridMixin}\n     */\n    _chart.zoomScale = function (extent) {\n        if (!arguments.length) {\n            return _zoomScale;\n        }\n        _zoomScale = extent;\n        return _chart;\n    };\n\n    /**\n     * Get or set the zoom restriction for the chart. If true limits the zoom to origional domain of the chart.\n     * @method zoomOutRestrict\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [zoomOutRestrict=true]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.zoomOutRestrict = function (zoomOutRestrict) {\n        if (!arguments.length) {\n            return _zoomOutRestrict;\n        }\n        _zoomOutRestrict = zoomOutRestrict;\n        return _chart;\n    };\n\n    _chart._generateG = function (parent) {\n        if (parent === undefined) {\n            _parent = _chart.svg();\n        } else {\n            _parent = parent;\n        }\n\n        var href = window.location.href.split('#')[0];\n\n        _g = _parent.append('g');\n\n        _chartBodyG = _g.append('g').attr('class', 'chart-body')\n            .attr('transform', 'translate(' + _chart.margins().left + ', ' + _chart.margins().top + ')')\n            .attr('clip-path', 'url(' + href + '#' + getClipPathId() + ')');\n\n        return _g;\n    };\n\n    /**\n     * Get or set the root g element. This method is usually used to retrieve the g element in order to\n     * overlay custom svg drawing programatically. **Caution**: The root g element is usually generated\n     * by dc.js internals, and resetting it might produce unpredictable result.\n     * @method g\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {SVGElement} [gElement]\n     * @returns {SVGElement|dc.coordinateGridMixin}\n     */\n    _chart.g = function (gElement) {\n        if (!arguments.length) {\n            return _g;\n        }\n        _g = gElement;\n        return _chart;\n    };\n\n    /**\n     * Set or get mouse zoom capability flag (default: false). When turned on the chart will be\n     * zoomable using the mouse wheel. If the range selector chart is attached zooming will also update\n     * the range selection brush on the associated range selector chart.\n     * @method mouseZoomable\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [mouseZoomable=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.mouseZoomable = function (mouseZoomable) {\n        if (!arguments.length) {\n            return _mouseZoomable;\n        }\n        _mouseZoomable = mouseZoomable;\n        return _chart;\n    };\n\n    /**\n     * Retrieve the svg group for the chart body.\n     * @method chartBodyG\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {SVGElement} [chartBodyG]\n     * @returns {SVGElement}\n     */\n    _chart.chartBodyG = function (chartBodyG) {\n        if (!arguments.length) {\n            return _chartBodyG;\n        }\n        _chartBodyG = chartBodyG;\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Get or set the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale} or\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales ordinal scale}\n     * @method x\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @example\n     * // set x to a linear scale\n     * chart.x(d3.scaleLinear().domain([-2500, 2500]))\n     * // set x to a time scale to generate histogram\n     * chart.x(d3.scaleTime().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\n     * @param {d3.scale} [xScale]\n     * @returns {d3.scale|dc.coordinateGridMixin}\n     */\n    _chart.x = function (xScale) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = xScale;\n        _xOriginalDomain = _x.domain();\n        _chart.rescale();\n        return _chart;\n    };\n\n    _chart.xOriginalDomain = function () {\n        return _xOriginalDomain;\n    };\n\n    /**\n     * Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate\n     * the number of data projections on the x axis such as the number of bars for a bar chart or the\n     * number of dots for a line chart.\n     *\n     * This function is expected to return a Javascript array of all data points on the x axis, or\n     * the number of points on the axis. d3 time range functions [d3.timeDays, d3.timeMonths, and\n     * d3.timeYears](https://github.com/d3/d3-time/blob/master/README.md#intervals) are all valid\n     * xUnits functions.\n     *\n     * dc.js also provides a few units function, see the {@link dc.units Units Namespace} for\n     * a list of built-in units functions.\n     *\n     * Note that as of dc.js 3.0, `dc.units.ordinal` is not a real function, because it is not\n     * possible to define this function compliant with the d3 range functions. It was already a\n     * magic value which caused charts to behave differently, and now it is completely so.\n     * @method xUnits\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * // set x units to count days\n     * chart.xUnits(d3.timeDays);\n     * // set x units to count months\n     * chart.xUnits(d3.timeMonths);\n     *\n     * // A custom xUnits function can be used as long as it follows the following interface:\n     * // units in integer\n     * function(start, end) {\n     *      // simply calculates how many integers in the domain\n     *      return Math.abs(end - start);\n     * }\n     *\n     * // fixed units\n     * function(start, end) {\n     *      // be aware using fixed units will disable the focus/zoom ability on the chart\n     *      return 1000;\n     * }\n     * @param {Function} [xUnits=dc.units.integers]\n     * @returns {Function|dc.coordinateGridMixin}\n     */\n    _chart.xUnits = function (xUnits) {\n        if (!arguments.length) {\n            return _xUnits;\n        }\n        _xUnits = xUnits;\n        return _chart;\n    };\n\n    /**\n     * Set or get the x axis used by a particular coordinate grid chart instance. This function is most\n     * useful when x axis customization is required. The x axis in dc.js is an instance of a\n     * {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3 bottom axis object};\n     * therefore it supports any valid d3 axisBottom manipulation.\n     *\n     * **Caution**: The x axis is usually generated internally by dc; resetting it may cause\n     * unexpected results. Note also that when used as a getter, this function is not chainable:\n     * it returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.xAxis()` will fail}.\n     * @method xAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3.axisBottom}\n     * @example\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function(v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axis} [xAxis=d3.axisBottom()]\n     * @returns {d3.axis|dc.coordinateGridMixin}\n     */\n    _chart.xAxis = function (xAxis) {\n        if (!arguments.length) {\n            return _xAxis;\n        }\n        _xAxis = xAxis;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will\n     * attempt to recalculate the x axis range whenever a redraw event is triggered.\n     * @method elasticX\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [elasticX=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.elasticX = function (elasticX) {\n        if (!arguments.length) {\n            return _xElasticity;\n        }\n        _xElasticity = elasticX;\n        return _chart;\n    };\n\n    /**\n     * Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x\n     * axis if elasticX is turned on; otherwise it is ignored.\n     *\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n     * number or date x axes.  When padding a date axis, an integer represents number of units being padded\n     * and a percentage string will be treated the same as an integer. The unit will be determined by the\n     * xAxisPaddingUnit variable.\n     * @method xAxisPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number|String} [padding=0]\n     * @returns {Number|String|dc.coordinateGridMixin}\n     */\n    _chart.xAxisPadding = function (padding) {\n        if (!arguments.length) {\n            return _xAxisPadding;\n        }\n        _xAxisPadding = padding;\n        return _chart;\n    };\n\n    /**\n     * Set or get x axis padding unit for the elastic x axis. The padding unit will determine which unit to\n     * use when applying xAxis padding if elasticX is turned on and if x-axis uses a time dimension;\n     * otherwise it is ignored.\n     *\n     * The padding unit should be a\n     * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n     * For backward compatibility with dc.js 2.0, it can also be the name of a d3 time interval\n     * ('day', 'hour', etc). Available arguments are the\n     * [d3 time intervals](https://github.com/d3/d3-time/blob/master/README.md#intervals d3.timeInterval).\n     * @method xAxisPaddingUnit\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [unit=d3.timeDay]\n     * @returns {String|dc.coordinateGridMixin}\n     */\n    _chart.xAxisPaddingUnit = function (unit) {\n        if (!arguments.length) {\n            return _xAxisPaddingUnit;\n        }\n        _xAxisPaddingUnit = unit;\n        return _chart;\n    };\n\n    /**\n     * Returns the number of units displayed on the x axis. If the x axis is ordinal (`xUnits` is\n     * `dc.units.ordinal`), this is the number of items in the domain of the x scale. Otherwise, the\n     * x unit count is calculated using the {@link dc.coordinateGridMixin#xUnits xUnits} function.\n     * @method xUnitCount\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {Number}\n     */\n    _chart.xUnitCount = function () {\n        if (_unitCount === undefined) {\n            if (_chart.isOrdinal()) {\n                // In this case it number of items in domain\n                _unitCount = _chart.x().domain().length;\n            } else {\n                _unitCount = _chart.xUnits()(_chart.x().domain()[0], _chart.x().domain()[1]);\n\n                // Sometimes xUnits() may return an array while sometimes directly the count\n                if (_unitCount instanceof Array) {\n                    _unitCount = _unitCount.length;\n                }\n            }\n        }\n\n        return _unitCount;\n    };\n\n    /**\n     * Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When\n     * used with a chart in a composite chart, allows both left and right Y axes to be shown on a\n     * chart.\n     * @method useRightYAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [useRightYAxis=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.useRightYAxis = function (useRightYAxis) {\n        if (!arguments.length) {\n            return _useRightYAxis;\n        }\n\n        // We need to warn if value is changing after _yAxis was created\n        if (_useRightYAxis !== useRightYAxis && _yAxis) {\n            dc.logger.warn('Value of useRightYAxis has been altered, after yAxis was created. ' +\n                'You might get unexpected yAxis behavior. ' +\n                'Make calls to useRightYAxis sooner in your chart creation process.');\n        }\n\n        _useRightYAxis = useRightYAxis;\n        return _chart;\n    };\n\n    /**\n     * Returns true if the chart is using ordinal xUnits ({@link dc.units.ordinal dc.units.ordinal}, or false\n     * otherwise. Most charts behave differently with ordinal data and use the result of this method to\n     * trigger the appropriate logic.\n     * @method isOrdinal\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {Boolean}\n     */\n    _chart.isOrdinal = function () {\n        return _chart.xUnits() === dc.units.ordinal;\n    };\n\n    _chart._useOuterPadding = function () {\n        return true;\n    };\n\n    _chart._ordinalXDomain = function () {\n        var groups = _chart._computeOrderedGroups(_chart.data());\n        return groups.map(_chart.keyAccessor());\n    };\n\n    function prepareXAxis (g, render) {\n        if (!_chart.isOrdinal()) {\n            if (_chart.elasticX()) {\n                _x.domain([_chart.xAxisMin(), _chart.xAxisMax()]);\n            }\n        } else { // _chart.isOrdinal()\n            // D3v4 - Ordinal charts would need scaleBand\n            // bandwidth is a method in scaleBand\n            // (https://github.com/d3/d3-scale/blob/master/README.md#scaleBand)\n            if (!_x.bandwidth) {\n                // If _x is not a scaleBand create a new scale and\n                // copy the original domain to the new scale\n                dc.logger.warn('For compatibility with d3v4+, dc.js d3.0 ordinal bar/line/bubble charts need ' +\n                               'd3.scaleBand() for the x scale, instead of d3.scaleOrdinal(). ' +\n                               'Replacing .x() with a d3.scaleBand with the same domain - ' +\n                               'make the same change in your code to avoid this warning!');\n                _x = d3.scaleBand().domain(_x.domain());\n            }\n\n            if (_chart.elasticX() || _x.domain().length === 0) {\n                _x.domain(_chart._ordinalXDomain());\n            }\n        }\n\n        // has the domain changed?\n        var xdom = _x.domain();\n        if (render || !dc.utils.arraysEqual(_lastXDomain, xdom)) {\n            _chart.rescale();\n        }\n        _lastXDomain = xdom;\n\n        // please can't we always use rangeBands for bar charts?\n        if (_chart.isOrdinal()) {\n            _x.range([0, _chart.xAxisLength()])\n                .paddingInner(_rangeBandPadding)\n                .paddingOuter(_chart._useOuterPadding() ? _outerRangeBandPadding : 0);\n        } else {\n            _x.range([0, _chart.xAxisLength()]);\n        }\n\n        _xAxis = _xAxis.scale(_chart.x());\n\n        renderVerticalGridLines(g);\n    }\n\n    _chart.renderXAxis = function (g) {\n        var axisXG = g.select('g.x');\n\n        if (axisXG.empty()) {\n            axisXG = g.append('g')\n                .attr('class', 'axis x')\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')');\n        }\n\n        var axisXLab = g.select('text.' + X_AXIS_LABEL_CLASS);\n        if (axisXLab.empty() && _chart.xAxisLabel()) {\n            axisXLab = g.append('text')\n                .attr('class', X_AXIS_LABEL_CLASS)\n                .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\n                      (_chart.height() - _xAxisLabelPadding) + ')')\n                .attr('text-anchor', 'middle');\n        }\n        if (_chart.xAxisLabel() && axisXLab.text() !== _chart.xAxisLabel()) {\n            axisXLab.text(_chart.xAxisLabel());\n        }\n\n        dc.transition(axisXG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')')\n            .call(_xAxis);\n        dc.transition(axisXLab, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\n                  (_chart.height() - _xAxisLabelPadding) + ')');\n    };\n\n    function renderVerticalGridLines (g) {\n        var gridLineG = g.select('g.' + VERTICAL_CLASS);\n\n        if (_renderVerticalGridLine) {\n            if (gridLineG.empty()) {\n                gridLineG = g.insert('g', ':first-child')\n                    .attr('class', GRID_LINE_CLASS + ' ' + VERTICAL_CLASS)\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n            }\n\n            var ticks = _xAxis.tickValues() ? _xAxis.tickValues() :\n                (typeof _x.ticks === 'function' ? _x.ticks.apply(_x, _xAxis.tickArguments()) : _x.domain());\n\n            var lines = gridLineG.selectAll('line')\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append('line')\n                .attr('x1', function (d) {\n                    return _x(d);\n                })\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\n                .attr('x2', function (d) {\n                    return _x(d);\n                })\n                .attr('y2', 0)\n                .attr('opacity', 0);\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', 1);\n\n            // update\n            var linesGEnterUpdate = linesGEnter.merge(lines);\n            dc.transition(linesGEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('x1', function (d) {\n                    return _x(d);\n                })\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\n                .attr('x2', function (d) {\n                    return _x(d);\n                })\n                .attr('y2', 0);\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    }\n\n    _chart._xAxisY = function () {\n        return (_chart.height() - _chart.margins().bottom);\n    };\n\n    _chart.xAxisLength = function () {\n        return _chart.effectiveWidth();\n    };\n\n    /**\n     * Set or get the x axis label. If setting the label, you may optionally include additional padding to\n     * the margin to make room for the label. By default the padded is set to 12 to accomodate the text height.\n     * @method xAxisLabel\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [labelText]\n     * @param {Number} [padding=12]\n     * @returns {String}\n     */\n    _chart.xAxisLabel = function (labelText, padding) {\n        if (!arguments.length) {\n            return _xAxisLabel;\n        }\n        _xAxisLabel = labelText;\n        _chart.margins().bottom -= _xAxisLabelPadding;\n        _xAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        _chart.margins().bottom += _xAxisLabelPadding;\n        return _chart;\n    };\n\n    function createYAxis () {\n        return _useRightYAxis ? d3.axisRight() : d3.axisLeft();\n    }\n\n    _chart._prepareYAxis = function (g) {\n        if (_y === undefined || _chart.elasticY()) {\n            if (_y === undefined) {\n                _y = d3.scaleLinear();\n            }\n            var min = _chart.yAxisMin() || 0,\n                max = _chart.yAxisMax() || 0;\n            _y.domain([min, max]).rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _y.range([_chart.yAxisHeight(), 0]);\n\n        if (!_yAxis) {\n            _yAxis = createYAxis();\n        }\n\n        _yAxis.scale(_y);\n\n        _chart._renderHorizontalGridLinesForAxis(g, _y, _yAxis);\n    };\n\n    _chart.renderYAxisLabel = function (axisClass, text, rotation, labelXPosition) {\n        labelXPosition = labelXPosition || _yAxisLabelPadding;\n\n        var axisYLab = _chart.g().select('text.' + Y_AXIS_LABEL_CLASS + '.' + axisClass + '-label');\n        var labelYPosition = (_chart.margins().top + _chart.yAxisHeight() / 2);\n        if (axisYLab.empty() && text) {\n            axisYLab = _chart.g().append('text')\n                .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')')\n                .attr('class', Y_AXIS_LABEL_CLASS + ' ' + axisClass + '-label')\n                .attr('text-anchor', 'middle')\n                .text(text);\n        }\n        if (text && axisYLab.text() !== text) {\n            axisYLab.text(text);\n        }\n        dc.transition(axisYLab, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')');\n    };\n\n    _chart.renderYAxisAt = function (axisClass, axis, position) {\n        var axisYG = _chart.g().select('g.' + axisClass);\n        if (axisYG.empty()) {\n            axisYG = _chart.g().append('g')\n                .attr('class', 'axis ' + axisClass)\n                .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')');\n        }\n\n        dc.transition(axisYG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')')\n            .call(axis);\n    };\n\n    _chart.renderYAxis = function () {\n        var axisPosition = _useRightYAxis ? (_chart.width() - _chart.margins().right) : _chart._yAxisX();\n        _chart.renderYAxisAt('y', _yAxis, axisPosition);\n        var labelPosition = _useRightYAxis ? (_chart.width() - _yAxisLabelPadding) : _yAxisLabelPadding;\n        var rotation = _useRightYAxis ? 90 : -90;\n        _chart.renderYAxisLabel('y', _chart.yAxisLabel(), rotation, labelPosition);\n    };\n\n    _chart._renderHorizontalGridLinesForAxis = function (g, scale, axis) {\n        var gridLineG = g.select('g.' + HORIZONTAL_CLASS);\n\n        if (_renderHorizontalGridLine) {\n            // see https://github.com/d3/d3-axis/blob/master/src/axis.js#L48\n            var ticks = axis.tickValues() ? axis.tickValues() :\n                (scale.ticks ? scale.ticks.apply(scale, axis.tickArguments()) : scale.domain());\n\n            if (gridLineG.empty()) {\n                gridLineG = g.insert('g', ':first-child')\n                    .attr('class', GRID_LINE_CLASS + ' ' + HORIZONTAL_CLASS)\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n            }\n\n            var lines = gridLineG.selectAll('line')\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append('line')\n                .attr('x1', 1)\n                .attr('y1', function (d) {\n                    return scale(d);\n                })\n                .attr('x2', _chart.xAxisLength())\n                .attr('y2', function (d) {\n                    return scale(d);\n                })\n                .attr('opacity', 0);\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', 1);\n\n            // update\n            var linesGEnterUpdate = linesGEnter.merge(lines);\n            dc.transition(linesGEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('x1', 1)\n                .attr('y1', function (d) {\n                    return scale(d);\n                })\n                .attr('x2', _chart.xAxisLength())\n                .attr('y2', function (d) {\n                    return scale(d);\n                });\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    };\n\n    _chart._yAxisX = function () {\n        return _chart.useRightYAxis() ? _chart.width() - _chart.margins().right : _chart.margins().left;\n    };\n\n    /**\n     * Set or get the y axis label. If setting the label, you may optionally include additional padding\n     * to the margin to make room for the label. By default the padding is set to 12 to accommodate the\n     * text height.\n     * @method yAxisLabel\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [labelText]\n     * @param {Number} [padding=12]\n     * @returns {String|dc.coordinateGridMixin}\n     */\n    _chart.yAxisLabel = function (labelText, padding) {\n        if (!arguments.length) {\n            return _yAxisLabel;\n        }\n        _yAxisLabel = labelText;\n        _chart.margins().left -= _yAxisLabelPadding;\n        _yAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        _chart.margins().left += _yAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y scale. The y scale is typically automatically determined by the chart implementation.\n     * @method y\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [yScale]\n     * @returns {d3.scale|dc.coordinateGridMixin}\n     */\n    _chart.y = function (yScale) {\n        if (!arguments.length) {\n            return _y;\n        }\n        _y = yScale;\n        _chart.rescale();\n        return _chart;\n    };\n\n    /**\n     * Set or get the y axis used by the coordinate grid chart instance. This function is most useful\n     * when y axis customization is required. Depending on `useRightYAxis` the y axis in dc.js is an instance of\n     * either [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft) or\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight); therefore it supports any\n     * valid d3 axis manipulation.\n     *\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * In addition, depending on whether you are going to use the axis on left or right\n     * you need to appropriately pass [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft)\n     * or [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight)\n     * @method yAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\n     * @example\n     * // customize y axis tick format\n     * chart.yAxis().tickFormat(function(v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.yAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axisLeft|d3.axisRight} [yAxis]\n     * @returns {d3.axisLeft|d3.axisRight|dc.coordinateGridMixin}\n     */\n    _chart.yAxis = function (yAxis) {\n        if (!arguments.length) {\n            if (!_yAxis) {\n                _yAxis = createYAxis();\n            }\n            return _yAxis;\n        }\n        _yAxis = yAxis;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will\n     * attempt to recalculate the y axis range whenever a redraw event is triggered.\n     * @method elasticY\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [elasticY=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.elasticY = function (elasticY) {\n        if (!arguments.length) {\n            return _yElasticity;\n        }\n        _yElasticity = elasticY;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off horizontal grid lines.\n     * @method renderHorizontalGridLines\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [renderHorizontalGridLines=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.renderHorizontalGridLines = function (renderHorizontalGridLines) {\n        if (!arguments.length) {\n            return _renderHorizontalGridLine;\n        }\n        _renderHorizontalGridLine = renderHorizontalGridLines;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off vertical grid lines.\n     * @method renderVerticalGridLines\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [renderVerticalGridLines=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.renderVerticalGridLines = function (renderVerticalGridLines) {\n        if (!arguments.length) {\n            return _renderVerticalGridLine;\n        }\n        _renderVerticalGridLine = renderVerticalGridLines;\n        return _chart;\n    };\n\n    /**\n     * Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.\n     * @method xAxisMin\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.xAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.subtract(min, _xAxisPadding, _xAxisPaddingUnit);\n    };\n\n    /**\n     * Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.\n     * @method xAxisMax\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.xAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.add(max, _xAxisPadding, _xAxisPaddingUnit);\n    };\n\n    /**\n     * Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.\n     * @method yAxisMin\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.yAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        return dc.utils.subtract(min, _yAxisPadding);\n    };\n\n    /**\n     * Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.\n     * @method yAxisMax\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.yAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        return dc.utils.add(max, _yAxisPadding);\n    };\n\n    /**\n     * Set or get y axis padding for the elastic y axis. The padding will be added to the top and\n     * bottom of the y axis if elasticY is turned on; otherwise it is ignored.\n     *\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n     * number or date axes. When padding a date axis, an integer represents number of days being padded\n     * and a percentage string will be treated the same as an integer.\n     * @method yAxisPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number|String} [padding=0]\n     * @returns {Number|dc.coordinateGridMixin}\n     */\n    _chart.yAxisPadding = function (padding) {\n        if (!arguments.length) {\n            return _yAxisPadding;\n        }\n        _yAxisPadding = padding;\n        return _chart;\n    };\n\n    _chart.yAxisHeight = function () {\n        return _chart.effectiveHeight();\n    };\n\n    /**\n     * Set or get the rounding function used to quantize the selection when brushing is enabled.\n     * @method round\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * // set x unit round to by month, this will make sure range selection brush will\n     * // select whole months\n     * chart.round(d3.timeMonth.round);\n     * @param {Function} [round]\n     * @returns {Function|dc.coordinateGridMixin}\n     */\n    _chart.round = function (round) {\n        if (!arguments.length) {\n            return _round;\n        }\n        _round = round;\n        return _chart;\n    };\n\n    _chart._rangeBandPadding = function (_) {\n        if (!arguments.length) {\n            return _rangeBandPadding;\n        }\n        _rangeBandPadding = _;\n        return _chart;\n    };\n\n    _chart._outerRangeBandPadding = function (_) {\n        if (!arguments.length) {\n            return _outerRangeBandPadding;\n        }\n        _outerRangeBandPadding = _;\n        return _chart;\n    };\n\n    dc.override(_chart, 'filter', function (_) {\n        if (!arguments.length) {\n            return _chart._filter();\n        }\n\n        _chart._filter(_);\n\n        _chart.redrawBrush(_, false);\n\n        return _chart;\n    });\n\n    /**\n     * Get or set the brush. Brush must be an instance of d3 brushes\n     * https://github.com/d3/d3-brush/blob/master/README.md\n     * You will use this only if you are writing a new chart type that supports brushing.\n     *\n     * **Caution**: dc creates and manages brushes internally. Go through and understand the source code\n     * if you want to pass a new brush object. Even if you are only using the getter,\n     * the brush object may not behave the way you expect.\n     *\n     * @method brush\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {d3.brush} [_]\n     * @returns {d3.brush|dc.coordinateGridMixin}\n     */\n    _chart.brush = function (_) {\n        if (!arguments.length) {\n            return _brush;\n        }\n        _brush = _;\n        return _chart;\n    };\n\n    _chart.renderBrush = function (g, doTransition) {\n        if (_brushOn) {\n            _brush.on('start brush end', _chart._brushing);\n\n            // To retrieve selection we need _gBrush\n            _gBrush = g.append('g')\n                .attr('class', 'brush')\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n            _chart.setBrushExtents();\n\n            _chart.createBrushHandlePaths(_gBrush, doTransition);\n\n            _chart.redrawBrush(_chart.filter(), doTransition);\n        }\n    };\n\n    _chart.createBrushHandlePaths = function (gBrush) {\n        var brushHandles = gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS).data([{type: 'w'}, {type: 'e'}]);\n\n        brushHandles = brushHandles\n            .enter()\n            .append('path')\n            .attr('class', CUSTOM_BRUSH_HANDLE_CLASS)\n            .merge(brushHandles);\n\n        brushHandles\n            .attr('d', _chart.resizeHandlePath);\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (brushSelection && _chart.round()) {\n            brushSelection[0] = _chart.round()(brushSelection[0]);\n            brushSelection[1] = _chart.round()(brushSelection[1]);\n        }\n        return brushSelection;\n    };\n\n    _chart.brushIsEmpty = function (brushSelection) {\n        return !brushSelection || brushSelection[1] <= brushSelection[0];\n    };\n\n    _chart._brushing = function () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when brush.move is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing brush move programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var brushSelection = d3.event.selection;\n        if (brushSelection) {\n            brushSelection = brushSelection.map(_chart.x().invert);\n        }\n\n        brushSelection = _chart.extendBrush(brushSelection);\n\n        _chart.redrawBrush(brushSelection, false);\n\n        var rangedFilter = _chart.brushIsEmpty(brushSelection) ? null : dc.filters.RangedFilter(brushSelection[0], brushSelection[1]);\n\n        dc.events.trigger(function () {\n            _chart.applyBrushSelection(rangedFilter);\n        }, dc.constants.EVENT_DELAY);\n    };\n\n    // This can be overridden in a derived chart. For example Composite chart overrides it\n    _chart.applyBrushSelection = function (rangedFilter) {\n        _chart.replaceFilter(rangedFilter);\n        _chart.redrawGroup();\n    };\n\n    _chart.setBrushExtents = function (doTransition) {\n        // Set boundaries of the brush, must set it before applying to _gBrush\n        _brush.extent([[0, 0], [_chart.effectiveWidth(), _chart.effectiveHeight()]]);\n\n        _gBrush\n            .call(_brush);\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        if (_brushOn && _gBrush) {\n            if (_resizing) {\n                _chart.setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                _gBrush\n                    .call(_brush.move, null);\n\n                _gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS)\n                    .attr('display', 'none');\n            } else {\n                var scaledSelection = [_x(brushSelection[0]), _x(brushSelection[1])];\n\n                var gBrush =\n                    dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(_gBrush);\n\n                gBrush\n                    .call(_brush.move, scaledSelection);\n\n                gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS)\n                    .attr('display', null)\n                    .attr('transform', function (d, i) {\n                        return 'translate(' + _x(brushSelection[i]) + ', 0)';\n                    })\n                    .attr('d', _chart.resizeHandlePath);\n            }\n        }\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        // do nothing, sub-chart should override this function\n    };\n\n    // borrowed from Crossfilter example\n    _chart.resizeHandlePath = function (d) {\n        d = d.type;\n        var e = +(d === 'e'), x = e ? 1 : -1, y = _chart.effectiveHeight() / 3;\n        return 'M' + (0.5 * x) + ',' + y +\n            'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6) +\n            'V' + (2 * y - 6) +\n            'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y) +\n            'Z' +\n            'M' + (2.5 * x) + ',' + (y + 8) +\n            'V' + (2 * y - 8) +\n            'M' + (4.5 * x) + ',' + (y + 8) +\n            'V' + (2 * y - 8);\n    };\n\n    function getClipPathId () {\n        return _chart.anchorName().replace(/[ .#=\\[\\]\"]/g, '-') + '-clip';\n    }\n\n    /**\n     * Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to\n     * the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area\n     * will be exactly the chart body area minus the margins.\n     * @method clipPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number} [padding=5]\n     * @returns {Number|dc.coordinateGridMixin}\n     */\n    _chart.clipPadding = function (padding) {\n        if (!arguments.length) {\n            return _clipPadding;\n        }\n        _clipPadding = padding;\n        return _chart;\n    };\n\n    function generateClipPath () {\n        var defs = dc.utils.appendOrSelect(_parent, 'defs');\n        // cannot select <clippath> elements; bug in WebKit, must select by id\n        // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n        var id = getClipPathId();\n        var chartBodyClip = dc.utils.appendOrSelect(defs, '#' + id, 'clipPath').attr('id', id);\n\n        var padding = _clipPadding * 2;\n\n        dc.utils.appendOrSelect(chartBodyClip, 'rect')\n            .attr('width', _chart.xAxisLength() + padding)\n            .attr('height', _chart.yAxisHeight() + padding)\n            .attr('transform', 'translate(-' + _clipPadding + ', -' + _clipPadding + ')');\n    }\n\n    _chart._preprocessData = function () {};\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _chart._preprocessData();\n\n        _chart._generateG();\n        generateClipPath();\n\n        drawChart(true);\n\n        configureMouseZoom();\n\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        _chart._preprocessData();\n\n        drawChart(false);\n        generateClipPath();\n\n        return _chart;\n    };\n\n    function drawChart (render) {\n        if (_chart.isOrdinal()) {\n            _brushOn = false;\n        }\n\n        prepareXAxis(_chart.g(), render);\n        _chart._prepareYAxis(_chart.g());\n\n        _chart.plotData();\n\n        if (_chart.elasticX() || _resizing || render) {\n            _chart.renderXAxis(_chart.g());\n        }\n\n        if (_chart.elasticY() || _resizing || render) {\n            _chart.renderYAxis(_chart.g());\n        }\n\n        if (render) {\n            _chart.renderBrush(_chart.g(), false);\n        } else {\n            // Animate the brush only while resizing\n            _chart.redrawBrush(_chart.filter(), _resizing);\n        }\n        _chart.fadeDeselectedArea(_chart.filter());\n        _resizing = false;\n    }\n\n    function configureMouseZoom () {\n        // Save a copy of original x scale\n        _origX = _x.copy();\n\n        if (_mouseZoomable) {\n            _chart._enableMouseZoom();\n        } else if (_hasBeenMouseZoomable) {\n            _chart._disableMouseZoom();\n        }\n    }\n\n    _chart._enableMouseZoom = function () {\n        _hasBeenMouseZoomable = true;\n\n        var extent = [[0, 0],[_chart.effectiveWidth(), _chart.effectiveHeight()]];\n\n        _zoom\n            .scaleExtent(_zoomScale)\n            .extent(extent)\n            .duration(_chart.transitionDuration());\n\n        if (_zoomOutRestrict) {\n            // Ensure minimum zoomScale is at least 1\n            var zoomScaleMin = Math.max(_zoomScale[0], 1);\n            _zoom\n                .translateExtent(extent)\n                .scaleExtent([zoomScaleMin, _zoomScale[1]]);\n        }\n\n        _chart.root().call(_zoom);\n\n        // Tell D3 zoom our current zoom/pan status\n        updateD3zoomTransform();\n    };\n\n    _chart._disableMouseZoom = function () {\n        _chart.root().call(_nullZoom);\n    };\n\n    function zoomHandler (newDomain, noRaiseEvents) {\n        var domFilter;\n\n        if (hasRangeSelected(newDomain)) {\n            _chart.x().domain(newDomain);\n            domFilter = dc.filters.RangedFilter(newDomain[0], newDomain[1]);\n        } else {\n            _chart.x().domain(_xOriginalDomain);\n            domFilter = null;\n        }\n\n        _chart.replaceFilter(domFilter);\n        _chart.rescale();\n        _chart.redraw();\n\n        if (!noRaiseEvents) {\n            if (_rangeChart && !dc.utils.arraysEqual(_chart.filter(), _rangeChart.filter())) {\n                dc.events.trigger(function () {\n                    _rangeChart.replaceFilter(domFilter);\n                    _rangeChart.redraw();\n                });\n            }\n\n            _chart._invokeZoomedListener();\n            dc.events.trigger(function () {\n                _chart.redrawGroup();\n            }, dc.constants.EVENT_DELAY);\n        }\n    }\n\n    // event.transform.rescaleX(_origX).domain() should give back newDomain\n    function domainToZoomTransform (newDomain, origDomain, xScale) {\n        var k = (origDomain[1] - origDomain[0]) / (newDomain[1] - newDomain[0]);\n        var xt = -1 * xScale(newDomain[0]);\n\n        return d3.zoomIdentity.scale(k).translate(xt, 0);\n    }\n\n    // If we changing zoom status (for example by calling focus), tell D3 zoom about it\n    function updateD3zoomTransform () {\n        if (_zoom) {\n            _zoom.transform(_chart.root(), domainToZoomTransform(_chart.x().domain(), _xOriginalDomain, _origX));\n        }\n    }\n\n    function onZoom () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when zoom is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing zoom programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'zoom', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var newDomain = d3.event.transform.rescaleX(_origX).domain();\n        _chart.focus(newDomain, false);\n    }\n\n    function checkExtents (ext, outerLimits) {\n        if (!ext || ext.length !== 2 || !outerLimits || outerLimits.length !== 2) {\n            return ext;\n        }\n\n        if (ext[0] > outerLimits[1] || ext[1] < outerLimits[0]) {\n            console.warn('Could not intersect extents, will reset');\n        }\n        // Math.max does not work (as the values may be dates as well)\n        return [ext[0] > outerLimits[0] ? ext[0] : outerLimits[0], ext[1] < outerLimits[1] ? ext[1] : outerLimits[1]];\n    }\n\n    /**\n     * Zoom this chart to focus on the given range. The given range should be an array containing only\n     * 2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set\n     * to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;\n     * otherwise focus will be ignored.\n     *\n     * To avoid ping-pong volley of events between a pair of range and focus charts please set\n     * `noRaiseEvents` to `true`. In that case it will update this chart but will not fire `zoom` event\n     * and not try to update back the associated range chart.\n     * If you are calling it manually - typically you will leave it to `false` (the default).\n     *\n     * @method focus\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * chart.on('renderlet', function(chart) {\n     *     // smooth the rendering through event throttling\n     *     dc.events.trigger(function(){\n     *          // focus some other chart to the range selected by user on this chart\n     *          someOtherChart.focus(chart.filter());\n     *     });\n     * })\n     * @param {Array<Number>} [range]\n     * @param {Boolean} [noRaiseEvents = false]\n     */\n    _chart.focus = function (range, noRaiseEvents) {\n        if (_zoomOutRestrict) {\n            // ensure range is within _xOriginalDomain\n            range = checkExtents(range, _xOriginalDomain);\n\n            // If it has an associated range chart ensure range is within domain of that rangeChart\n            if (_rangeChart) {\n                range = checkExtents(range, _rangeChart.x().domain());\n            }\n        }\n\n        zoomHandler(range, noRaiseEvents);\n        updateD3zoomTransform();\n    };\n\n    _chart.refocused = function () {\n        return !dc.utils.arraysEqual(_chart.x().domain(), _xOriginalDomain);\n    };\n\n    _chart.focusChart = function (c) {\n        if (!arguments.length) {\n            return _focusChart;\n        }\n        _focusChart = c;\n        _chart.on('filtered.dcjs-range-chart', function (chart) {\n            if (!chart.filter()) {\n                dc.events.trigger(function () {\n                    _focusChart.x().domain(_focusChart.xOriginalDomain(), true);\n                });\n            } else if (!dc.utils.arraysEqual(chart.filter(), _focusChart.filter())) {\n                dc.events.trigger(function () {\n                    _focusChart.focus(chart.filter(), true);\n                });\n            }\n        });\n        return _chart;\n    };\n\n    /**\n     * Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse\n     * across a chart with a quantitative scale to perform range filtering based on the extent of the\n     * brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and\n     * un-filter them. However turning on the brush filter will disable other interactive elements on\n     * the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible\n     * if enabled, but only via scrolling (panning will be disabled.)\n     * @method brushOn\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [brushOn=true]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.brushOn = function (brushOn) {\n        if (!arguments.length) {\n            return _brushOn;\n        }\n        _brushOn = brushOn;\n        return _chart;\n    };\n\n    /**\n     * This will be internally used by composite chart onto children. Please go not invoke directly.\n     *\n     * @method parentBrushOn\n     * @memberof dc.coordinateGridMixin\n     * @protected\n     * @instance\n     * @param {Boolean} [brushOn=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.parentBrushOn = function (brushOn) {\n        if (!arguments.length) {\n            return _parentBrushOn;\n        }\n        _parentBrushOn = brushOn;\n        return _chart;\n    };\n\n    // Get the SVG rendered brush\n    _chart.gBrush = function () {\n        return _gBrush;\n    };\n\n    function hasRangeSelected (range) {\n        return range instanceof Array && range.length > 1;\n    }\n\n    return _chart;\n};\n\n/**\n * Stack Mixin is an mixin that provides cross-chart support of stackability using d3.stackD3v3.\n * @name stackMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.stackMixin}\n */\ndc.stackMixin = function (_chart) {\n\n    function prepareValues (layer, layerIdx) {\n        var valAccessor = layer.accessor || _chart.valueAccessor();\n        layer.name = String(layer.name || layerIdx);\n        var allValues = layer.group.all().map(function (d, i) {\n            return {\n                x: _chart.keyAccessor()(d, i),\n                y: layer.hidden ? null : valAccessor(d, i),\n                data: d,\n                layer: layer.name,\n                hidden: layer.hidden\n            };\n        });\n\n        layer.domainValues = allValues.filter(domainFilter());\n        layer.values = _chart.evadeDomainFilter() ? allValues : layer.domainValues;\n    }\n\n    var _stackLayout = d3.stack();\n\n    var _stack = [];\n    var _titles = {};\n\n    var _hidableStacks = false;\n    var _evadeDomainFilter = false;\n\n    function domainFilter () {\n        if (!_chart.x()) {\n            return dc.utils.constant(true);\n        }\n        var xDomain = _chart.x().domain();\n        if (_chart.isOrdinal()) {\n            // TODO #416\n            //var domainSet = d3.set(xDomain);\n            return function () {\n                return true; //domainSet.has(p.x);\n            };\n        }\n        if (_chart.elasticX()) {\n            return function () { return true; };\n        }\n        return function (p) {\n            //return true;\n            return p.x >= xDomain[0] && p.x <= xDomain[xDomain.length - 1];\n        };\n    }\n\n    /**\n     * Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks\n     * in the same chart will share the same key accessor and therefore the same set of keys.\n     *\n     * For example, in a stacked bar chart, the bars of each stack will be positioned using the same set\n     * of keys on the x axis, while stacked vertically. If name is specified then it will be used to\n     * generate the legend label.\n     * @method stack\n     * @memberof dc.stackMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n     * @example\n     * // stack group using default accessor\n     * chart.stack(valueSumGroup)\n     * // stack group using custom accessor\n     * .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\n     * @param {crossfilter.group} group\n     * @param {String} [name]\n     * @param {Function} [accessor]\n     * @returns {Array<{group: crossfilter.group, name: String, accessor: Function}>|dc.stackMixin}\n     */\n    _chart.stack = function (group, name, accessor) {\n        if (!arguments.length) {\n            return _stack;\n        }\n\n        if (arguments.length <= 2) {\n            accessor = name;\n        }\n\n        var layer = {group: group};\n        if (typeof name === 'string') {\n            layer.name = name;\n        }\n        if (typeof accessor === 'function') {\n            layer.accessor = accessor;\n        }\n        _stack.push(layer);\n\n        return _chart;\n    };\n\n    dc.override(_chart, 'group', function (g, n, f) {\n        if (!arguments.length) {\n            return _chart._group();\n        }\n        _stack = [];\n        _titles = {};\n        _chart.stack(g, n);\n        if (f) {\n            _chart.valueAccessor(f);\n        }\n        return _chart._group(g, n);\n    });\n\n    /**\n     * Allow named stacks to be hidden or shown by clicking on legend items.\n     * This does not affect the behavior of hideStack or showStack.\n     * @method hidableStacks\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {Boolean} [hidableStacks=false]\n     * @returns {Boolean|dc.stackMixin}\n     */\n    _chart.hidableStacks = function (hidableStacks) {\n        if (!arguments.length) {\n            return _hidableStacks;\n        }\n        _hidableStacks = hidableStacks;\n        return _chart;\n    };\n\n    function findLayerByName (n) {\n        var i = _stack.map(dc.pluck('name')).indexOf(n);\n        return _stack[i];\n    }\n\n    /**\n     * Hide all stacks on the chart with the given name.\n     * The chart must be re-rendered for this change to appear.\n     * @method hideStack\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {String} stackName\n     * @returns {dc.stackMixin}\n     */\n    _chart.hideStack = function (stackName) {\n        var layer = findLayerByName(stackName);\n        if (layer) {\n            layer.hidden = true;\n        }\n        return _chart;\n    };\n\n    /**\n     * Show all stacks on the chart with the given name.\n     * The chart must be re-rendered for this change to appear.\n     * @method showStack\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {String} stackName\n     * @returns {dc.stackMixin}\n     */\n    _chart.showStack = function (stackName) {\n        var layer = findLayerByName(stackName);\n        if (layer) {\n            layer.hidden = false;\n        }\n        return _chart;\n    };\n\n    _chart.getValueAccessorByIndex = function (index) {\n        return _stack[index].accessor || _chart.valueAccessor();\n    };\n\n    _chart.yAxisMin = function () {\n        var min = d3.min(flattenStack(), function (p) {\n            return (p.y < 0) ? (p.y + p.y0) : p.y0;\n        });\n\n        return dc.utils.subtract(min, _chart.yAxisPadding());\n\n    };\n\n    _chart.yAxisMax = function () {\n        var max = d3.max(flattenStack(), function (p) {\n            return (p.y > 0) ? (p.y + p.y0) : p.y0;\n        });\n\n        return dc.utils.add(max, _chart.yAxisPadding());\n    };\n\n    function flattenStack () {\n        var valueses = _chart.data().map(function (layer) { return layer.domainValues; });\n        return Array.prototype.concat.apply([], valueses);\n    }\n\n    _chart.xAxisMin = function () {\n        var min = d3.min(flattenStack(), dc.pluck('x'));\n        return dc.utils.subtract(min, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    };\n\n    _chart.xAxisMax = function () {\n        var max = d3.max(flattenStack(), dc.pluck('x'));\n        return dc.utils.add(max, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    };\n\n    /**\n     * Set or get the title function. Chart class will use this function to render svg title (usually interpreted by\n     * browser as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart.\n     * Almost every chart supports title function however in grid coordinate chart you need to turn off brush in order to\n     * use title otherwise the brush layer will block tooltip trigger.\n     *\n     * If the first argument is a stack name, the title function will get or set the title for that stack. If stackName\n     * is not provided, the first stack is implied.\n     * @method title\n     * @memberof dc.stackMixin\n     * @instance\n     * @example\n     * // set a title function on 'first stack'\n     * chart.title('first stack', function(d) { return d.key + ': ' + d.value; });\n     * // get a title function from 'second stack'\n     * var secondTitleFunction = chart.title('second stack');\n     * @param {String} [stackName]\n     * @param {Function} [titleAccessor]\n     * @returns {String|dc.stackMixin}\n     */\n    dc.override(_chart, 'title', function (stackName, titleAccessor) {\n        if (!stackName) {\n            return _chart._title();\n        }\n\n        if (typeof stackName === 'function') {\n            return _chart._title(stackName);\n        }\n        if (stackName === _chart._groupName && typeof titleAccessor === 'function') {\n            return _chart._title(titleAccessor);\n        }\n\n        if (typeof titleAccessor !== 'function') {\n            return _titles[stackName] || _chart._title();\n        }\n\n        _titles[stackName] = titleAccessor;\n\n        return _chart;\n    });\n\n    /**\n     * Gets or sets the stack layout algorithm, which computes a baseline for each stack and\n     * propagates it to the next.\n     * @method stackLayout\n     * @memberof dc.stackMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md d3.stackD3v3}\n     * @param {Function} [stack=d3.stackD3v3]\n     * @returns {Function|dc.stackMixin}\n     */\n    _chart.stackLayout = function (stack) {\n        if (!arguments.length) {\n            return _stackLayout;\n        }\n        _stackLayout = stack;\n        return _chart;\n    };\n\n    /**\n     * Since dc.js 2.0, there has been {@link https://github.com/dc-js/dc.js/issues/949 an issue}\n     * where points are filtered to the current domain. While this is a useful optimization, it is\n     * incorrectly implemented: the next point outside the domain is required in order to draw lines\n     * that are clipped to the bounds, as well as bars that are partly clipped.\n     *\n     * A fix will be included in dc.js 2.1.x, but a workaround is needed for dc.js 2.0 and until\n     * that fix is published, so set this flag to skip any filtering of points.\n     *\n     * Once the bug is fixed, this flag will have no effect, and it will be deprecated.\n     * @method evadeDomainFilter\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {Boolean} [evadeDomainFilter=false]\n     * @returns {Boolean|dc.stackMixin}\n     */\n    _chart.evadeDomainFilter = function (evadeDomainFilter) {\n        if (!arguments.length) {\n            return _evadeDomainFilter;\n        }\n        _evadeDomainFilter = evadeDomainFilter;\n        return _chart;\n    };\n\n    function visibility (l) {\n        return !l.hidden;\n    }\n\n    _chart.data(function () {\n        var layers = _stack.filter(visibility);\n        if (!layers.length) {\n            return [];\n        }\n        layers.forEach(prepareValues);\n        var v4data = layers[0].values.map(function (v, i) {\n            var col = {x: v.x};\n            layers.forEach(function (layer) {\n                col[layer.name] = layer.values[i].y;\n            });\n            return col;\n        });\n        var keys = layers.map(function (layer) { return layer.name; });\n        var v4result = _chart.stackLayout().keys(keys)(v4data);\n        v4result.forEach(function (series, i) {\n            series.forEach(function (ys, j) {\n                layers[i].values[j].y0 = ys[0];\n                layers[i].values[j].y1 = ys[1];\n            });\n        });\n        return layers;\n    });\n\n    _chart._ordinalXDomain = function () {\n        var flat = flattenStack().map(dc.pluck('data'));\n        var ordered = _chart._computeOrderedGroups(flat);\n        return ordered.map(_chart.keyAccessor());\n    };\n\n    _chart.colorAccessor(function (d) {\n        var layer = this.layer || this.name || d.name || d.layer;\n        return layer;\n    });\n\n    _chart.legendables = function () {\n        return _stack.map(function (layer, i) {\n            return {\n                chart: _chart,\n                name: layer.name,\n                hidden: layer.hidden || false,\n                color: _chart.getColor.call(layer, layer.values, i)\n            };\n        });\n    };\n\n    _chart.isLegendableHidden = function (d) {\n        var layer = findLayerByName(d.name);\n        return layer ? layer.hidden : false;\n    };\n\n    _chart.legendToggle = function (d) {\n        if (_hidableStacks) {\n            if (_chart.isLegendableHidden(d)) {\n                _chart.showStack(d.name);\n            } else {\n                _chart.hideStack(d.name);\n            }\n            //_chart.redraw();\n            _chart.renderGroup();\n        }\n    };\n\n    return _chart;\n};\n\n/**\n * Cap is a mixin that groups small data elements below a _cap_ into an *others* grouping for both the\n * Row and Pie Charts.\n *\n * The top ordered elements in the group up to the cap amount will be kept in the chart, and the rest\n * will be replaced with an *others* element, with value equal to the sum of the replaced values. The\n * keys of the elements below the cap limit are recorded in order to filter by those keys when the\n * others* element is clicked.\n * @name capMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.capMixin}\n */\ndc.capMixin = function (_chart) {\n    var _cap = Infinity, _takeFront = true;\n    var _othersLabel = 'Others';\n\n    // emulate old group.top(N) ordering\n    _chart.ordering(function (kv) {\n        return -kv.value;\n    });\n\n    var _othersGrouper = function (topItems, restItems) {\n        var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n            restKeys = restItems.map(_chart.keyAccessor());\n        if (restItemsSum > 0) {\n            return topItems.concat([{\n                others: restKeys,\n                key: _chart.othersLabel(),\n                value: restItemsSum\n            }]);\n        }\n        return topItems;\n    };\n\n    _chart.cappedKeyAccessor = function (d, i) {\n        if (d.others) {\n            return d.key;\n        }\n        return _chart.keyAccessor()(d, i);\n    };\n\n    _chart.cappedValueAccessor = function (d, i) {\n        if (d.others) {\n            return d.value;\n        }\n        return _chart.valueAccessor()(d, i);\n    };\n\n    // return N \"top\" groups, where N is the cap, sorted by baseMixin.ordering\n    // whether top means front or back depends on takeFront\n    _chart.data(function (group) {\n        if (_cap === Infinity) {\n            return _chart._computeOrderedGroups(group.all());\n        } else {\n            var items = group.all(), rest;\n            items = _chart._computeOrderedGroups(items); // sort by baseMixin.ordering\n\n            if (_cap) {\n                if (_takeFront) {\n                    rest = items.slice(_cap);\n                    items = items.slice(0, _cap);\n                } else {\n                    var start = Math.max(0, items.length - _cap);\n                    rest = items.slice(0, start);\n                    items = items.slice(start);\n                }\n            }\n\n            if (_othersGrouper) {\n                return _othersGrouper(items, rest);\n            }\n            return items;\n        }\n    });\n\n    /**\n     * Get or set the count of elements to that will be included in the cap. If there is an\n     * {@link dc.capMixin#othersGrouper othersGrouper}, any further elements will be combined in an\n     * extra element with its name determined by {@link dc.capMixin#othersLabel othersLabel}.\n     *\n     * As of dc.js 2.1 and onward, the capped charts use\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all()}\n     * and {@link dc.baseMixin#ordering baseMixin.ordering()} to determine the order of\n     * elements. Then `cap` and {@link dc.capMixin#takeFront takeFront} determine how many elements\n     * to keep, from which end of the resulting array.\n     *\n     * **Migration note:** Up through dc.js 2.0.*, capping used\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_top group.top(N)},\n     * which selects the largest items according to\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_order group.order()}.\n     * The chart then sorted the items according to {@link dc.baseMixin#ordering baseMixin.ordering()}.\n     * So the two values essentially had to agree, but if the `group.order()` was incorrect (it's\n     * easy to forget about), the wrong rows or slices would be displayed, in the correct order.\n     *\n     * If your chart previously relied on `group.order()`, use `chart.ordering()` instead. As of\n     * 2.1.5, the ordering defaults to sorting from greatest to least like `group.top(N)` did.\n     *\n     * If you want to cap by one ordering but sort by another, please\n     * [file an issue](https://github.com/dc-js/dc.js/issues/new) - it's still possible but we'll\n     * need to work up an example.\n     * @method cap\n     * @memberof dc.capMixin\n     * @instance\n     * @param {Number} [count=Infinity]\n     * @returns {Number|dc.capMixin}\n     */\n    _chart.cap = function (count) {\n        if (!arguments.length) {\n            return _cap;\n        }\n        _cap = count;\n        return _chart;\n    };\n\n    /**\n     * Get or set the direction of capping. If set, the chart takes the first\n     * {@link dc.capMixin#cap cap} elements from the sorted array of elements; otherwise\n     * it takes the last `cap` elements.\n     * @method takeFront\n     * @memberof dc.capMixin\n     * @instance\n     * @param {Boolean} [takeFront=true]\n     * @returns {Boolean|dc.capMixin}\n     */\n    _chart.takeFront = function (takeFront) {\n        if (!arguments.length) {\n            return _takeFront;\n        }\n        _takeFront = takeFront;\n        return _chart;\n    };\n\n    /**\n     * Get or set the label for *Others* slice when slices cap is specified.\n     * @method othersLabel\n     * @memberof dc.capMixin\n     * @instance\n     * @param {String} [label=\"Others\"]\n     * @returns {String|dc.capMixin}\n     */\n    _chart.othersLabel = function (label) {\n        if (!arguments.length) {\n            return _othersLabel;\n        }\n        _othersLabel = label;\n        return _chart;\n    };\n\n    /**\n     * Get or set the grouper function that will perform the insertion of data for the *Others* slice\n     * if the slices cap is specified. If set to a falsy value, no others will be added.\n     *\n     * The grouper function takes an array of included (\"top\") items, and an array of the rest of\n     * the items. By default the grouper function computes the sum of the rest.\n     * @method othersGrouper\n     * @memberof dc.capMixin\n     * @instance\n     * @example\n     * // Do not show others\n     * chart.othersGrouper(null);\n     * // Default others grouper\n     * chart.othersGrouper(function (topItems, restItems) {\n     *     var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n     *         restKeys = restItems.map(_chart.keyAccessor());\n     *     if (restItemsSum > 0) {\n     *         return topItems.concat([{\n     *             others: restKeys,\n     *             key: _chart.othersLabel(),\n     *             value: restItemsSum\n     *         }]);\n     *     }\n     *     return topItems;\n     * });\n     * @param {Function} [grouperFunction]\n     * @returns {Function|dc.capMixin}\n     */\n    _chart.othersGrouper = function (grouperFunction) {\n        if (!arguments.length) {\n            return _othersGrouper;\n        }\n        _othersGrouper = grouperFunction;\n        return _chart;\n    };\n\n    dc.override(_chart, 'onClick', function (d) {\n        if (d.others) {\n            _chart.filter([d.others]);\n        }\n        _chart._onClick(d);\n    });\n\n    return _chart;\n};\n\n/**\n * This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.\n * @name bubbleMixin\n * @memberof dc\n * @mixin\n * @mixes dc.colorMixin\n * @param {Object} _chart\n * @returns {dc.bubbleMixin}\n */\ndc.bubbleMixin = function (_chart) {\n    var _maxBubbleRelativeSize = 0.3;\n    var _minRadiusWithLabel = 10;\n    var _sortBubbleSize = false;\n    var _elasticRadius = false;\n\n    _chart.BUBBLE_NODE_CLASS = 'node';\n    _chart.BUBBLE_CLASS = 'bubble';\n    _chart.MIN_RADIUS = 10;\n\n    _chart = dc.colorMixin(_chart);\n\n    _chart.renderLabel(true);\n\n    _chart.data(function (group) {\n        var data = group.all();\n        if (_sortBubbleSize) {\n            // sort descending so smaller bubbles are on top\n            var radiusAccessor = _chart.radiusValueAccessor();\n            data.sort(function (a, b) { return d3.descending(radiusAccessor(a), radiusAccessor(b)); });\n        }\n        return data;\n    });\n\n    var _r = d3.scaleLinear().domain([0, 100]);\n\n    var _rValueAccessor = function (d) {\n        return d.r;\n    };\n\n    /**\n     * Get or set the bubble radius scale. By default the bubble chart uses\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleLinear d3.scaleLinear().domain([0, 100])}\n     * as its radius scale.\n     * @method r\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [bubbleRadiusScale=d3.scaleLinear().domain([0, 100])]\n     * @returns {d3.scale|dc.bubbleMixin}\n     */\n    _chart.r = function (bubbleRadiusScale) {\n        if (!arguments.length) {\n            return _r;\n        }\n        _r = bubbleRadiusScale;\n        return _chart;\n    };\n\n    /**\n     * Turn on or off the elastic bubble radius feature, or return the value of the flag. If this\n     * feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.\n     * @method elasticRadius\n     * @memberof dc.bubbleChart\n     * @instance\n     * @param {Boolean} [elasticRadius=false]\n     * @returns {Boolean|dc.bubbleChart}\n     */\n    _chart.elasticRadius = function (elasticRadius) {\n        if (!arguments.length) {\n            return _elasticRadius;\n        }\n        _elasticRadius = elasticRadius;\n        return _chart;\n    };\n\n    _chart.calculateRadiusDomain = function () {\n        if (_elasticRadius) {\n            _chart.r().domain([_chart.rMin(), _chart.rMax()]);\n        }\n    };\n\n    /**\n     * Get or set the radius value accessor function. If set, the radius value accessor function will\n     * be used to retrieve a data value for each bubble. The data retrieved then will be mapped using\n     * the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble\n     * size.\n     * @method radiusValueAccessor\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Function} [radiusValueAccessor]\n     * @returns {Function|dc.bubbleMixin}\n     */\n    _chart.radiusValueAccessor = function (radiusValueAccessor) {\n        if (!arguments.length) {\n            return _rValueAccessor;\n        }\n        _rValueAccessor = radiusValueAccessor;\n        return _chart;\n    };\n\n    _chart.rMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return min;\n    };\n\n    _chart.rMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return max;\n    };\n\n    _chart.bubbleR = function (d) {\n        var value = _chart.radiusValueAccessor()(d);\n        var r = _chart.r()(value);\n        if (isNaN(r) || value <= 0) {\n            r = 0;\n        }\n        return r;\n    };\n\n    var labelFunction = function (d) {\n        return _chart.label()(d);\n    };\n\n    var shouldLabel = function (d) {\n        return (_chart.bubbleR(d) > _minRadiusWithLabel);\n    };\n\n    var labelOpacity = function (d) {\n        return shouldLabel(d) ? 1 : 0;\n    };\n\n    var labelPointerEvent = function (d) {\n        return shouldLabel(d) ? 'all' : 'none';\n    };\n\n    _chart._doRenderLabel = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var label = bubbleGEnter.select('text');\n\n            if (label.empty()) {\n                label = bubbleGEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                    .attr('dy', '.3em')\n                    .on('click', _chart.onClick);\n            }\n\n            label\n                .attr('opacity', 0)\n                .attr('pointer-events', labelPointerEvent)\n                .text(labelFunction);\n            dc.transition(label, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', labelOpacity);\n        }\n    };\n\n    _chart.doUpdateLabels = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var labels = bubbleGEnter.select('text')\n                .attr('pointer-events', labelPointerEvent)\n                .text(labelFunction);\n            dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', labelOpacity);\n        }\n    };\n\n    var titleFunction = function (d) {\n        return _chart.title()(d);\n    };\n\n    _chart._doRenderTitles = function (g) {\n        if (_chart.renderTitle()) {\n            var title = g.select('title');\n\n            if (title.empty()) {\n                g.append('title').text(titleFunction);\n            }\n        }\n    };\n\n    _chart.doUpdateTitles = function (g) {\n        if (_chart.renderTitle()) {\n            g.select('title').text(titleFunction);\n        }\n    };\n\n    /**\n     * Turn on or off the bubble sorting feature, or return the value of the flag. If enabled,\n     * bubbles will be sorted by their radius, with smaller bubbles in front.\n     * @method sortBubbleSize\n     * @memberof dc.bubbleChart\n     * @instance\n     * @param {Boolean} [sortBubbleSize=false]\n     * @returns {Boolean|dc.bubbleChart}\n     */\n    _chart.sortBubbleSize = function (sortBubbleSize) {\n        if (!arguments.length) {\n            return _sortBubbleSize;\n        }\n        _sortBubbleSize = sortBubbleSize;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimum radius. This will be used to initialize the radius scale's range.\n     * @method minRadius\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [radius=10]\n     * @returns {Number|dc.bubbleMixin}\n     */\n    _chart.minRadius = function (radius) {\n        if (!arguments.length) {\n            return _chart.MIN_RADIUS;\n        }\n        _chart.MIN_RADIUS = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimum radius for label rendering. If a bubble's radius is less than this value\n     * then no label will be rendered.\n     * @method minRadiusWithLabel\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [radius=10]\n     * @returns {Number|dc.bubbleMixin}\n     */\n\n    _chart.minRadiusWithLabel = function (radius) {\n        if (!arguments.length) {\n            return _minRadiusWithLabel;\n        }\n        _minRadiusWithLabel = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the maximum relative size of a bubble to the length of x axis. This value is useful\n     * when the difference in radius between bubbles is too great.\n     * @method maxBubbleRelativeSize\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [relativeSize=0.3]\n     * @returns {Number|dc.bubbleMixin}\n     */\n    _chart.maxBubbleRelativeSize = function (relativeSize) {\n        if (!arguments.length) {\n            return _maxBubbleRelativeSize;\n        }\n        _maxBubbleRelativeSize = relativeSize;\n        return _chart;\n    };\n\n    _chart.fadeDeselectedArea = function (selection) {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    _chart.onClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    return _chart;\n};\n\n/**\n * The pie chart implementation is usually used to visualize a small categorical distribution.  The pie\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering}\n * which defaults to sorting by key.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class pieChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a pie chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.pieChart('#chart-container1');\n * // create a pie chart under #chart-container2 element using chart group A\n * var chart2 = dc.pieChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.pieChart}\n */\ndc.pieChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = 'pie-slice';\n    var _labelCssClass = 'pie-label';\n    var _sliceGroupCssClass = 'pie-slice-group';\n    var _labelGroupCssClass = 'pie-label-group';\n    var _emptyCssClass = 'empty-chart';\n    var _emptyTitle = 'empty';\n\n    var _radius,\n        _givenRadius, // specified radius, if any\n        _innerRadius = 0,\n        _externalRadiusPadding = 0;\n\n    var _g;\n    var _cx;\n    var _cy;\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n    var _externalLabelRadius;\n    var _drawPaths = false;\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\n\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    /**\n     * Get or set the maximum number of slices the pie chart will generate. The top slices are determined by\n     * value from high to low. Other slices exeeding the cap will be rolled up into one single *Others* slice.\n     * @method slicesCap\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cap]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.slicesCap = _chart.cap;\n\n    _chart.label(_chart.cappedKeyAccessor);\n    _chart.renderLabel(true);\n\n    _chart.transitionDuration(350);\n    _chart.transitionDelay(0);\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n\n        _g.append('g').attr('class', _sliceGroupCssClass);\n        _g.append('g').attr('class', _labelGroupCssClass);\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart () {\n        // set radius from chart size if none given, or if given radius is too large\n        var maxRadius =  d3.min([_chart.width(), _chart.height()]) / 2;\n        _radius = _givenRadius && _givenRadius < maxRadius ? _givenRadius : maxRadius;\n\n        var arc = buildArcs();\n\n        var pie = pieLayout();\n        var pieData;\n        // if we have data...\n        if (d3.sum(_chart.data(), _chart.valueAccessor())) {\n            pieData = pie(_chart.data());\n            _g.classed(_emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            pieData = pie([{key: _emptyTitle, value: 1, others: [_emptyTitle]}]);\n            _g.classed(_emptyCssClass, true);\n        }\n\n        if (_g) {\n            var slices = _g.select('g.' + _sliceGroupCssClass)\n                .selectAll('g.' + _sliceCssClass)\n                .data(pieData);\n\n            var labels = _g.select('g.' + _labelGroupCssClass)\n                .selectAll('text.' + _labelCssClass)\n                .data(pieData);\n\n            removeElements(slices, labels);\n\n            createElements(slices, labels, arc, pieData);\n\n            updateElements(pieData, arc);\n\n            highlightFilter();\n\n            dc.transition(_g, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n        }\n    }\n\n    function createElements (slices, labels, arc, pieData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n\n        createTitles(slicesEnter);\n\n        createLabels(labels, pieData, arc);\n    }\n\n    function createSliceNodes (slices) {\n        var slicesEnter = slices\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _sliceCssClass + ' _' + i;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath (slicesEnter, arc) {\n        var slicePath = slicesEnter.append('path')\n            .attr('fill', fill)\n            .on('click', onClick)\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n\n        var transition = dc.transition(slicePath, _chart.transitionDuration(), _chart.transitionDelay());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenPie);\n        }\n    }\n\n    function createTitles (slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append('title').text(function (d) {\n                return _chart.title()(d.data);\n            });\n        }\n    }\n\n    _chart._applyLabelText = function (labels) {\n        labels\n            .text(function (d) {\n                var data = d.data;\n                if ((sliceHasNoData(data) || sliceTooSmall(d)) && !isSelectedSlice(d)) {\n                    return '';\n                }\n                return _chart.label()(d.data);\n            });\n    };\n\n    function positionLabels (labels, arc) {\n        _chart._applyLabelText(labels);\n        dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', function (d) {\n                return labelPosition(d, arc);\n            })\n            .attr('text-anchor', 'middle');\n    }\n\n    function highlightSlice (i, whether) {\n        _chart.select('g.pie-slice._' + i)\n            .classed('highlight', whether);\n    }\n\n    function createLabels (labels, pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', function (d, i) {\n                    var classes = _sliceCssClass + ' ' + _labelCssClass + ' _' + i;\n                    if (_externalLabelRadius) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on('click', onClick)\n                .on('mouseover', function (d, i) {\n                    highlightSlice(i, true);\n                })\n                .on('mouseout', function (d, i) {\n                    highlightSlice(i, false);\n                });\n            positionLabels(labelsEnter, arc);\n            if (_externalLabelRadius && _drawPaths) {\n                updateLabelPaths(pieData, arc);\n            }\n        }\n    }\n\n    function updateLabelPaths (pieData, arc) {\n        var polyline = _g.selectAll('polyline.' + _sliceCssClass)\n                .data(pieData);\n\n        polyline.exit().remove();\n\n        polyline = polyline\n            .enter()\n            .append('polyline')\n            .attr('class', function (d, i) {\n                return 'pie-path _' + i + ' ' + _sliceCssClass;\n            })\n            .on('click', onClick)\n            .on('mouseover', function (d, i) {\n                highlightSlice(i, true);\n            })\n            .on('mouseout', function (d, i) {\n                highlightSlice(i, false);\n            })\n            .merge(polyline);\n\n        var arc2 = d3.arc()\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .innerRadius(_radius - _externalRadiusPadding);\n        var transition = dc.transition(polyline, _chart.transitionDuration(), _chart.transitionDelay());\n        // this is one rare case where d3.selection differs from d3.transition\n        if (transition.attrTween) {\n            transition\n                .attrTween('points', function (d) {\n                    var current = this._current || d;\n                    current = {startAngle: current.startAngle, endAngle: current.endAngle};\n                    var interpolate = d3.interpolate(current, d);\n                    this._current = interpolate(0);\n                    return function (t) {\n                        var d2 = interpolate(t);\n                        return [arc.centroid(d2), arc2.centroid(d2)];\n                    };\n                });\n        } else {\n            transition.attr('points', function (d) {\n                return [arc.centroid(d), arc2.centroid(d)];\n            });\n        }\n        transition.style('visibility', function (d) {\n            return d.endAngle - d.startAngle < 0.0001 ? 'hidden' : 'visible';\n        });\n\n    }\n\n    function updateElements (pieData, arc) {\n        updateSlicePaths(pieData, arc);\n        updateLabels(pieData, arc);\n        updateTitles(pieData);\n    }\n\n    function updateSlicePaths (pieData, arc) {\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\n            .data(pieData)\n            .select('path')\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        var transition = dc.transition(slicePaths, _chart.transitionDuration(), _chart.transitionDelay());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenPie);\n        }\n        transition.attr('fill', fill);\n    }\n\n    function updateLabels (pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _labelCssClass)\n                .data(pieData);\n            positionLabels(labels, arc);\n            if (_externalLabelRadius && _drawPaths) {\n                updateLabelPaths(pieData, arc);\n            }\n        }\n    }\n\n    function updateTitles (pieData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll('g.' + _sliceCssClass)\n                .data(pieData)\n                .select('title')\n                .text(function (d) {\n                    return _chart.title()(d.data);\n                });\n        }\n    }\n\n    function removeElements (slices, labels) {\n        slices.exit().remove();\n        labels.exit().remove();\n    }\n\n    function highlightFilter () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                if (isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _sliceCssClass).each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set the external radius padding of the pie chart. This will force the radius of the\n     * pie chart to become smaller or larger depending on the value.\n     * @method externalRadiusPadding\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [externalRadiusPadding=0]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.externalRadiusPadding = function (externalRadiusPadding) {\n        if (!arguments.length) {\n            return _externalRadiusPadding;\n        }\n        _externalRadiusPadding = externalRadiusPadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the\n     * pie chart will be rendered as a doughnut chart.\n     * @method innerRadius\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [innerRadius=0]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.innerRadius = function (innerRadius) {\n        if (!arguments.length) {\n            return _innerRadius;\n        }\n        _innerRadius = innerRadius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     * @method radius\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [radius]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.radius = function (radius) {\n        if (!arguments.length) {\n            return _givenRadius;\n        }\n        _givenRadius = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     * @method cx\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cx]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.cx = function (cx) {\n        if (!arguments.length) {\n            return (_cx ||  _chart.width() / 2);\n        }\n        _cx = cx;\n        return _chart;\n    };\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     * @method cy\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cy]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.cy = function (cy) {\n        if (!arguments.length) {\n            return (_cy ||  _chart.height() / 2);\n        }\n        _cy = cy;\n        return _chart;\n    };\n\n    function buildArcs () {\n        return d3.arc()\n            .outerRadius(_radius - _externalRadiusPadding)\n            .innerRadius(_innerRadius);\n    }\n\n    function isSelectedSlice (d) {\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d.data));\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @method minAngleForLabel\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [minAngleForLabel=0.5]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.minAngleForLabel = function (minAngleForLabel) {\n        if (!arguments.length) {\n            return _minAngleForLabel;\n        }\n        _minAngleForLabel = minAngleForLabel;\n        return _chart;\n    };\n\n    function pieLayout () {\n        return d3.pie().sort(null).value(_chart.cappedValueAccessor);\n    }\n\n    function sliceTooSmall (d) {\n        var angle = (d.endAngle - d.startAngle);\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData (d) {\n        return _chart.cappedValueAccessor(d) === 0;\n    }\n\n    function tweenPie (b) {\n        b.innerRadius = _innerRadius;\n        var current = this._current;\n        if (isOffCanvas(current)) {\n            current = {startAngle: 0, endAngle: 0};\n        } else {\n            // only interpolate startAngle & endAngle, not the whole data object\n            current = {startAngle: current.startAngle, endAngle: current.endAngle};\n        }\n        var i = d3.interpolate(current, b);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(i(t), 0, buildArcs());\n        };\n    }\n\n    function isOffCanvas (current) {\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\n    }\n\n    function fill (d, i) {\n        return _chart.getColor(d.data, i);\n    }\n\n    function onClick (d, i) {\n        if (_g.attr('class') !== _emptyCssClass) {\n            _chart.onClick(d.data, i);\n        }\n    }\n\n    function safeArc (d, i, arc) {\n        var path = arc(d, i);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    /**\n     * Title to use for the only slice when there is no data.\n     * @method emptyTitle\n     * @memberof dc.pieChart\n     * @instance\n     * @param {String} [title]\n     * @returns {String|dc.pieChart}\n     */\n    _chart.emptyTitle = function (title) {\n        if (arguments.length === 0) {\n            return _emptyTitle;\n        }\n        _emptyTitle = title;\n        return _chart;\n    };\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     * @method externalLabels\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [externalLabelRadius]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.externalLabels = function (externalLabelRadius) {\n        if (arguments.length === 0) {\n            return _externalLabelRadius;\n        } else if (externalLabelRadius) {\n            _externalLabelRadius = externalLabelRadius;\n        } else {\n            _externalLabelRadius = undefined;\n        }\n\n        return _chart;\n    };\n\n    /**\n     * Get or set whether to draw lines from pie slices to their labels.\n     *\n     * @method drawPaths\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Boolean} [drawPaths]\n     * @returns {Boolean|dc.pieChart}\n     */\n    _chart.drawPaths = function (drawPaths) {\n        if (arguments.length === 0) {\n            return _drawPaths;\n        }\n        _drawPaths = drawPaths;\n        return _chart;\n    };\n\n    function labelPosition (d, arc) {\n        var centroid;\n        if (_externalLabelRadius) {\n            centroid = d3.arc()\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .innerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .centroid(d);\n        } else {\n            centroid = arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return 'translate(' + centroid + ')';\n        }\n    }\n\n    _chart.legendables = function () {\n        return _chart.data().map(function (d, i) {\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\n            legendable.color = _chart.getColor(d, i);\n            return legendable;\n        });\n    };\n\n    _chart.legendHighlight = function (d) {\n        highlightSliceFromLegendable(d, true);\n    };\n\n    _chart.legendReset = function (d) {\n        highlightSliceFromLegendable(d, false);\n    };\n\n    _chart.legendToggle = function (d) {\n        _chart.onClick({key: d.name, others: d.others});\n    };\n\n    function highlightSliceFromLegendable (legendable, highlighted) {\n        _chart.selectAll('g.pie-slice').each(function (d) {\n            if (legendable.name === d.data.key) {\n                d3.select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The sunburst chart implementation is usually used to visualize a small tree distribution.  The sunburst\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering} which defaults to sorting\n * by key.\n *\n * The keys used in the sunburst chart should be arrays, representing paths in the tree.\n *\n * When filtering, the sunburst chart creates instances of {@link dc.filters.HierarchyFilter HierarchyFilter}.\n *\n * @class sunburstChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a sunburst chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.sunburstChart('#chart-container1');\n * // create a sunburst chart under #chart-container2 element using chart group A\n * var chart2 = dc.sunburstChart('#chart-container2', 'chartGroupA');\n *\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.sunburstChart}\n **/\ndc.sunburstChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = 'pie-slice';\n    var _emptyCssClass = 'empty-chart';\n    var _emptyTitle = 'empty';\n\n    var _radius,\n        _innerRadius = 0;\n\n    var _g;\n    var _cx;\n    var _cy;\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n    var _externalLabelRadius;\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\n\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\n\n    // Handle cases if value corresponds to generated parent nodes\n    function extendedValueAccessor (d) {\n        if (d.path) {\n            return d.value;\n        }\n        return _chart.cappedValueAccessor(d);\n    }\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + extendedValueAccessor(d);\n    });\n\n    _chart.label(_chart.cappedKeyAccessor);\n    _chart.renderLabel(true);\n\n    _chart.transitionDuration(350);\n\n    _chart.filterHandler(function (dimension, filters) {\n        if (filters.length === 0) {\n            dimension.filter(null);\n        } else {\n            dimension.filterFunction(function (d) {\n                for (var i = 0; i < filters.length; i++) {\n                    var filter = filters[i];\n                    if (filter.isFiltered && filter.isFiltered(d)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return filters;\n    });\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart () {\n        // set radius on basis of chart dimension if missing\n        _radius = _radius ? _radius : d3.min([_chart.width(), _chart.height()]) / 2;\n\n        var arc = buildArcs();\n\n        var sunburstData, cdata;\n        // if we have data...\n        if (d3.sum(_chart.data(), _chart.valueAccessor())) {\n            cdata = dc.utils.toHierarchy(_chart.data(), _chart.valueAccessor());\n            sunburstData = partitionNodes(cdata);\n            // First one is the root, which is not needed\n            sunburstData.shift();\n            _g.classed(_emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            cdata = dc.utils.toHierarchy([], function (d) {\n                return d.value;\n            });\n            sunburstData = partitionNodes(cdata);\n            _g.classed(_emptyCssClass, true);\n        }\n\n        if (_g) {\n            var slices = _g.selectAll('g.' + _sliceCssClass)\n                .data(sunburstData);\n            createElements(slices, arc, sunburstData);\n\n            updateElements(sunburstData, arc);\n\n            removeElements(slices);\n\n            highlightFilter();\n        }\n    }\n\n    function createElements (slices, arc, sunburstData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n        createTitles(slicesEnter);\n        createLabels(sunburstData, arc);\n    }\n\n    function createSliceNodes (slices) {\n        var slicesEnter = slices\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _sliceCssClass +\n                    ' _' + i + ' ' +\n                    _sliceCssClass + '-level-' + d.depth;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath (slicesEnter, arc) {\n        var slicePath = slicesEnter.append('path')\n            .attr('fill', fill)\n            .on('click', onClick)\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n\n        var transition = dc.transition(slicePath, _chart.transitionDuration());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenSlice);\n        }\n    }\n\n    function createTitles (slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append('title').text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    function positionLabels (labelsEnter, arc) {\n        dc.transition(labelsEnter, _chart.transitionDuration())\n            .attr('transform', function (d) {\n                return labelPosition(d, arc);\n            })\n            .attr('text-anchor', 'middle')\n            .text(function (d) {\n                // position label...\n                if (sliceHasNoData(d) || sliceTooSmall(d)) {\n                    return '';\n                }\n                return _chart.label()(d);\n            });\n    }\n\n    function createLabels (sunburstData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _sliceCssClass)\n                .data(sunburstData);\n\n            labels.exit().remove();\n\n            var labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', function (d, i) {\n                    var classes = _sliceCssClass + ' _' + i;\n                    if (_externalLabelRadius) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on('click', onClick);\n            positionLabels(labelsEnter, arc);\n        }\n    }\n\n    function updateElements (sunburstData, arc) {\n        updateSlicePaths(sunburstData, arc);\n        updateLabels(sunburstData, arc);\n        updateTitles(sunburstData);\n    }\n\n    function updateSlicePaths (sunburstData, arc) {\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\n            .data(sunburstData)\n            .select('path')\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        var transition = dc.transition(slicePaths, _chart.transitionDuration());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenSlice);\n        }\n        transition.attr('fill', fill);\n    }\n\n    function updateLabels (sunburstData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _sliceCssClass)\n                .data(sunburstData);\n            positionLabels(labels, arc);\n        }\n    }\n\n    function updateTitles (sunburstData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll('g.' + _sliceCssClass)\n                .data(sunburstData)\n                .select('title')\n                .text(function (d) {\n                    return _chart.title()(d);\n                });\n        }\n    }\n\n    function removeElements (slices) {\n        slices.exit().remove();\n    }\n\n    function highlightFilter () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                if (isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set the inner radius of the sunburst chart. If the inner radius is greater than 0px then the\n     * sunburst chart will be rendered as a doughnut chart. Default inner radius is 0px.\n     * @method innerRadius\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [innerRadius=0]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.innerRadius = function (innerRadius) {\n        if (!arguments.length) {\n            return _innerRadius;\n        }\n        _innerRadius = innerRadius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     * @method radius\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [radius]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.radius = function (radius) {\n        if (!arguments.length) {\n            return _radius;\n        }\n        _radius = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     * @method cx\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [cx]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.cx = function (cx) {\n        if (!arguments.length) {\n            return (_cx || _chart.width() / 2);\n        }\n        _cx = cx;\n        return _chart;\n    };\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     * @method cy\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [cy]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.cy = function (cy) {\n        if (!arguments.length) {\n            return (_cy || _chart.height() / 2);\n        }\n        _cy = cy;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @method minAngleForLabel\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [minAngleForLabel=0.5]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.minAngleForLabel = function (minAngleForLabel) {\n        if (!arguments.length) {\n            return _minAngleForLabel;\n        }\n        _minAngleForLabel = minAngleForLabel;\n        return _chart;\n    };\n\n    /**\n     * Title to use for the only slice when there is no data.\n     * @method emptyTitle\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {String} [title]\n     * @returns {String|dc.sunburstChart}\n     */\n    _chart.emptyTitle = function (title) {\n        if (arguments.length === 0) {\n            return _emptyTitle;\n        }\n        _emptyTitle = title;\n        return _chart;\n    };\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     * @method externalLabels\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [externalLabelRadius]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.externalLabels = function (externalLabelRadius) {\n        if (arguments.length === 0) {\n            return _externalLabelRadius;\n        } else if (externalLabelRadius) {\n            _externalLabelRadius = externalLabelRadius;\n        } else {\n            _externalLabelRadius = undefined;\n        }\n\n        return _chart;\n    };\n\n    function buildArcs () {\n        return d3.arc()\n            .startAngle(function (d) {\n                return d.x0;\n            })\n            .endAngle(function (d) {\n                return d.x1;\n            })\n            .innerRadius(function (d) {\n                return d.data.path && d.data.path.length === 1 ? _innerRadius : Math.sqrt(d.y0);\n            })\n            .outerRadius(function (d) {\n                return Math.sqrt(d.y1);\n            });\n    }\n\n    function isSelectedSlice (d) {\n        return isPathFiltered(d.path);\n    }\n\n    function isPathFiltered (path) {\n        for (var i = 0; i < _chart.filters().length; i++) {\n            var currentFilter = _chart.filters()[i];\n            if (currentFilter.isFiltered(path)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // returns all filters that are a parent or child of the path\n    function filtersForPath (path) {\n        var pathFilter = dc.filters.HierarchyFilter(path);\n        var filters = [];\n        for (var i = 0; i < _chart.filters().length; i++) {\n            var currentFilter = _chart.filters()[i];\n            if (currentFilter.isFiltered(path) || pathFilter.isFiltered(currentFilter)) {\n                filters.push(currentFilter);\n            }\n        }\n        return filters;\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    function partitionNodes (data) {\n        // The changes picked up from https://github.com/d3/d3-hierarchy/issues/50\n        var hierarchy = d3.hierarchy(data)\n            .sum(function (d) {\n                return d.children ? 0 : extendedValueAccessor(d);\n            })\n            .sort(function (a, b) {\n                return d3.ascending(a.data.path, b.data.path);\n            });\n\n        var partition = d3.partition()\n            .size([2 * Math.PI, _radius * _radius]);\n\n        partition(hierarchy);\n\n        // In D3v4 the returned data is slightly different, change it enough to suit our purposes.\n        var nodes = hierarchy.descendants().map(function (d) {\n            d.key = d.data.key;\n            d.path = d.data.path;\n            return d;\n        });\n\n        return nodes;\n    }\n\n    function sliceTooSmall (d) {\n        var angle = d.x1 - d.x0;\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData (d) {\n        return extendedValueAccessor(d) === 0;\n    }\n\n    function tweenSlice (b) {\n        b.innerRadius = _innerRadius; //?\n        var current = this._current;\n        if (isOffCanvas(current)) {\n            current = {x: 0, y: 0, dx: 0, dy: 0};\n        }\n        // unfortunally, we can't tween an entire hierarchy since it has 2 way links.\n        var tweenTarget = {x: b.x, y: b.y, dx: b.dx, dy: b.dy};\n        var i = d3.interpolate(current, tweenTarget);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(Object.assign({}, b, i(t)), 0, buildArcs());\n        };\n    }\n\n    function isOffCanvas (current) {\n        return !current || isNaN(current.dx) || isNaN(current.dy);\n    }\n\n    function fill (d, i) {\n        return _chart.getColor(d, i);\n    }\n\n    function _onClick (d) {\n        // Clicking on Legends do not filter, it throws exception\n        // Must be better way to handle this, in legends we need to access `d.key`\n        var path = d.path || d.key;\n        var filter = dc.filters.HierarchyFilter(path);\n\n        // filters are equal to, parents or children of the path.\n        var filters = filtersForPath(path);\n        var exactMatch = false;\n        // clear out any filters that cover the path filtered.\n        for (var i = filters.length - 1; i >= 0; i--) {\n            var currentFilter = filters[i];\n            if (dc.utils.arraysIdentical(currentFilter, path)) {\n                exactMatch = true;\n            }\n            _chart.filter(filters[i]);\n        }\n        dc.events.trigger(function () {\n            // if it is a new filter - put it in.\n            if (!exactMatch) {\n                _chart.filter(filter);\n            }\n            _chart.redrawGroup();\n        });\n    }\n\n    _chart.onClick = onClick;\n\n    function onClick (d, i) {\n        if (_g.attr('class') !== _emptyCssClass) {\n            _onClick(d, i);\n        }\n    }\n\n    function safeArc (d, i, arc) {\n        var path = arc(d, i);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    function labelPosition (d, arc) {\n        var centroid;\n        if (_externalLabelRadius) {\n            centroid = d3.svg.arc()\n                .outerRadius(_radius + _externalLabelRadius)\n                .innerRadius(_radius + _externalLabelRadius)\n                .centroid(d);\n        } else {\n            centroid = arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return 'translate(' + centroid + ')';\n        }\n    }\n\n    _chart.legendables = function () {\n        return _chart.data().map(function (d, i) {\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\n            legendable.color = _chart.getColor(d, i);\n            return legendable;\n        });\n    };\n\n    _chart.legendHighlight = function (d) {\n        highlightSliceFromLegendable(d, true);\n    };\n\n    _chart.legendReset = function (d) {\n        highlightSliceFromLegendable(d, false);\n    };\n\n    _chart.legendToggle = function (d) {\n        _chart.onClick({key: d.name, others: d.others});\n    };\n\n    function highlightSliceFromLegendable (legendable, highlighted) {\n        _chart.selectAll('g.pie-slice').each(function (d) {\n            if (legendable.name === d.key) {\n                d3.select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Concrete bar chart/histogram implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class barChart\n * @memberof dc\n * @mixes dc.stackMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a bar chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.barChart('#chart-container1');\n * // create a bar chart under #chart-container2 element using chart group A\n * var chart2 = dc.barChart('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.barChart(compositeChart);\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the bar\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\n * composite chart instance instead.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.barChart}\n */\ndc.barChart = function (parent, chartGroup) {\n    var MIN_BAR_WIDTH = 1;\n    var DEFAULT_GAP_BETWEEN_BARS = 2;\n    var LABEL_PADDING = 3;\n\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\n\n    var _gap = DEFAULT_GAP_BETWEEN_BARS;\n    var _centerBar = false;\n    var _alwaysUseRounding = false;\n\n    var _barWidth;\n\n    dc.override(_chart, 'rescale', function () {\n        _chart._rescale();\n        _barWidth = undefined;\n        return _chart;\n    });\n\n    dc.override(_chart, 'render', function () {\n        if (_chart.round() && _centerBar && !_alwaysUseRounding) {\n            dc.logger.warn('By default, brush rounding is disabled if bars are centered. ' +\n                         'See dc.js bar chart API documentation for details.');\n        }\n\n        return _chart._render();\n    });\n\n    _chart.label(function (d) {\n        return dc.utils.printSingleValue(d.y0 + d.y);\n    }, false);\n\n    _chart.plotData = function () {\n        var layers = _chart.chartBodyG().selectAll('g.stack')\n            .data(_chart.data());\n\n        calculateBarWidth();\n\n        layers = layers\n            .enter()\n                .append('g')\n                .attr('class', function (d, i) {\n                    return 'stack ' + '_' + i;\n                })\n            .merge(layers);\n\n        var last = layers.size() - 1;\n        layers.each(function (d, i) {\n            var layer = d3.select(this);\n\n            renderBars(layer, i, d);\n\n            if (_chart.renderLabel() && last === i) {\n                renderLabels(layer, i, d);\n            }\n        });\n    };\n\n    function barHeight (d) {\n        return dc.utils.safeNumber(Math.abs(_chart.y()(d.y + d.y0) - _chart.y()(d.y0)));\n    }\n\n    function labelXPos (d) {\n        var x = _chart.x()(d.x);\n        if (!_centerBar) {\n            x += _barWidth / 2;\n        }\n        if (_chart.isOrdinal() && _gap !== undefined) {\n            x += _gap / 2;\n        }\n        return dc.utils.safeNumber(x);\n    }\n\n    function labelYPos (d) {\n        var y = _chart.y()(d.y + d.y0);\n\n        if (d.y < 0) {\n            y -= barHeight(d);\n        }\n\n        return dc.utils.safeNumber(y - LABEL_PADDING);\n    }\n\n    function renderLabels (layer, layerIndex, d) {\n        var labels = layer.selectAll('text.barLabel')\n            .data(d.values, dc.pluck('x'));\n\n        var labelsEnterUpdate = labels\n            .enter()\n                .append('text')\n                .attr('class', 'barLabel')\n                .attr('text-anchor', 'middle')\n                .attr('x', labelXPos)\n                .attr('y', labelYPos)\n            .merge(labels);\n\n        if (_chart.isOrdinal()) {\n            labelsEnterUpdate.on('click', _chart.onClick);\n            labelsEnterUpdate.attr('cursor', 'pointer');\n        }\n\n        dc.transition(labelsEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', labelXPos)\n            .attr('y', labelYPos)\n            .text(function (d) {\n                return _chart.label()(d);\n            });\n\n        dc.transition(labels.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('height', 0)\n            .remove();\n    }\n\n    function barXPos (d) {\n        var x = _chart.x()(d.x);\n        if (_centerBar) {\n            x -= _barWidth / 2;\n        }\n        if (_chart.isOrdinal() && _gap !== undefined) {\n            x += _gap / 2;\n        }\n        return dc.utils.safeNumber(x);\n    }\n\n    function renderBars (layer, layerIndex, d) {\n        var bars = layer.selectAll('rect.bar')\n            .data(d.values, dc.pluck('x'));\n\n        var enter = bars.enter()\n            .append('rect')\n            .attr('class', 'bar')\n            .attr('fill', dc.pluck('data', _chart.getColor))\n            .attr('x', barXPos)\n            .attr('y', _chart.yAxisHeight())\n            .attr('height', 0);\n\n        var barsEnterUpdate = enter.merge(bars);\n\n        if (_chart.renderTitle()) {\n            enter.append('title').text(dc.pluck('data', _chart.title(d.name)));\n        }\n\n        if (_chart.isOrdinal()) {\n            barsEnterUpdate.on('click', _chart.onClick);\n        }\n\n        dc.transition(barsEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', barXPos)\n            .attr('y', function (d) {\n                var y = _chart.y()(d.y + d.y0);\n\n                if (d.y < 0) {\n                    y -= barHeight(d);\n                }\n\n                return dc.utils.safeNumber(y);\n            })\n            .attr('width', _barWidth)\n            .attr('height', function (d) {\n                return barHeight(d);\n            })\n            .attr('fill', dc.pluck('data', _chart.getColor))\n            .select('title').text(dc.pluck('data', _chart.title(d.name)));\n\n        dc.transition(bars.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', function (d) { return _chart.x()(d.x); })\n            .attr('width', _barWidth * 0.9)\n            .remove();\n    }\n\n    function calculateBarWidth () {\n        if (_barWidth === undefined) {\n            var numberOfBars = _chart.xUnitCount();\n\n            // please can't we always use rangeBands for bar charts?\n            if (_chart.isOrdinal() && _gap === undefined) {\n                _barWidth = Math.floor(_chart.x().bandwidth());\n            } else if (_gap) {\n                _barWidth = Math.floor((_chart.xAxisLength() - (numberOfBars - 1) * _gap) / numberOfBars);\n            } else {\n                _barWidth = Math.floor(_chart.xAxisLength() / (1 + _chart.barPadding()) / numberOfBars);\n            }\n\n            if (_barWidth === Infinity || isNaN(_barWidth) || _barWidth < MIN_BAR_WIDTH) {\n                _barWidth = MIN_BAR_WIDTH;\n            }\n        }\n    }\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        var bars = _chart.chartBodyG().selectAll('rect.bar');\n\n        if (_chart.isOrdinal()) {\n            if (_chart.hasFilter()) {\n                bars.classed(dc.constants.SELECTED_CLASS, function (d) {\n                    return _chart.hasFilter(d.x);\n                });\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return !_chart.hasFilter(d.x);\n                });\n            } else {\n                bars.classed(dc.constants.SELECTED_CLASS, false);\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        } else if (_chart.brushOn() || _chart.parentBrushOn()) {\n            if (!_chart.brushIsEmpty(brushSelection)) {\n                var start = brushSelection[0];\n                var end = brushSelection[1];\n\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return d.x < start || d.x >= end;\n                });\n            } else {\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        }\n    };\n\n    /**\n     * Whether the bar chart will render each bar centered around the data position on the x-axis.\n     * @method centerBar\n     * @memberof dc.barChart\n     * @instance\n     * @param {Boolean} [centerBar=false]\n     * @returns {Boolean|dc.barChart}\n     */\n    _chart.centerBar = function (centerBar) {\n        if (!arguments.length) {\n            return _centerBar;\n        }\n        _centerBar = centerBar;\n        return _chart;\n    };\n\n    dc.override(_chart, 'onClick', function (d) {\n        _chart._onClick(d.data);\n    });\n\n    /**\n     * Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.\n     * Setting this value will also remove any previously set {@link dc.barChart#gap gap}. See the\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\n     * for a visual description of how the padding is applied.\n     * @method barPadding\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [barPadding=0]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.barPadding = function (barPadding) {\n        if (!arguments.length) {\n            return _chart._rangeBandPadding();\n        }\n        _chart._rangeBandPadding(barPadding);\n        _gap = undefined;\n        return _chart;\n    };\n\n    _chart._useOuterPadding = function () {\n        return _gap === undefined;\n    };\n\n    /**\n     * Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.\n     * Will pad the width by `padding * barWidth` on each side of the chart.\n     * @method outerPadding\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [padding=0.5]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.outerPadding = _chart._outerRangeBandPadding;\n\n    /**\n     * Manually set fixed gap (in px) between bars instead of relying on the default auto-generated\n     * gap.  By default the bar chart implementation will calculate and set the gap automatically\n     * based on the number of data points and the length of the x axis.\n     * @method gap\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [gap=2]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _chart;\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (brushSelection && _chart.round() && (!_centerBar || _alwaysUseRounding)) {\n            brushSelection[0] = _chart.round()(brushSelection[0]);\n            brushSelection[1] = _chart.round()(brushSelection[1]);\n        }\n        return brushSelection;\n    };\n\n    /**\n     * Set or get whether rounding is enabled when bars are centered. If false, using\n     * rounding with centered bars will result in a warning and rounding will be ignored.  This flag\n     * has no effect if bars are not {@link dc.barChart#centerBar centered}.\n     * When using standard d3.js rounding methods, the brush often doesn't align correctly with\n     * centered bars since the bars are offset.  The rounding function must add an offset to\n     * compensate, such as in the following example.\n     * @method alwaysUseRounding\n     * @memberof dc.barChart\n     * @instance\n     * @example\n     * chart.round(function(n) { return Math.floor(n) + 0.5; });\n     * @param {Boolean} [alwaysUseRounding=false]\n     * @returns {Boolean|dc.barChart}\n     */\n    _chart.alwaysUseRounding = function (alwaysUseRounding) {\n        if (!arguments.length) {\n            return _alwaysUseRounding;\n        }\n        _alwaysUseRounding = alwaysUseRounding;\n        return _chart;\n    };\n\n    function colorFilter (color, inv) {\n        return function () {\n            var item = d3.select(this);\n            var match = item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    _chart.legendHighlight = function (d) {\n        if (!_chart.isLegendableHidden(d)) {\n            _chart.g().selectAll('rect.bar')\n                .classed('highlight', colorFilter(d.color))\n                .classed('fadeout', colorFilter(d.color, true));\n        }\n    };\n\n    _chart.legendReset = function () {\n        _chart.g().selectAll('rect.bar')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    };\n\n    dc.override(_chart, 'xAxisMax', function () {\n        var max = this._xAxisMax();\n        if ('resolution' in _chart.xUnits()) {\n            var res = _chart.xUnits().resolution;\n            max += res;\n        }\n        return max;\n    });\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Concrete line/area chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class lineChart\n * @memberof dc\n * @mixes dc.stackMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a line chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.lineChart('#chart-container1');\n * // create a line chart under #chart-container2 element using chart group A\n * var chart2 = dc.lineChart('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.lineChart(compositeChart);\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the line\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\n * composite chart instance instead.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.lineChart}\n */\ndc.lineChart = function (parent, chartGroup) {\n    var DEFAULT_DOT_RADIUS = 5;\n    var TOOLTIP_G_CLASS = 'dc-tooltip';\n    var DOT_CIRCLE_CLASS = 'dot';\n    var Y_AXIS_REF_LINE_CLASS = 'yRef';\n    var X_AXIS_REF_LINE_CLASS = 'xRef';\n    var DEFAULT_DOT_OPACITY = 1e-6;\n    var LABEL_PADDING = 3;\n\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\n    var _renderArea = false;\n    var _dotRadius = DEFAULT_DOT_RADIUS;\n    var _dataPointRadius = null;\n    var _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n    var _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n    var _curve = null;\n    var _interpolate = null; // d3.curveLinear;  // deprecated in 3.0\n    var _tension = null;  // deprecated in 3.0\n    var _defined;\n    var _dashStyle;\n    var _xyTipsOn = true;\n\n    _chart.transitionDuration(500);\n    _chart.transitionDelay(0);\n    _chart._rangeBandPadding(1);\n\n    _chart.plotData = function () {\n        var chartBody = _chart.chartBodyG();\n        var layersList = chartBody.select('g.stack-list');\n\n        if (layersList.empty()) {\n            layersList = chartBody.append('g').attr('class', 'stack-list');\n        }\n\n        var layers = layersList.selectAll('g.stack').data(_chart.data());\n\n        var layersEnter = layers\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return 'stack ' + '_' + i;\n            });\n\n        layers = layersEnter.merge(layers);\n\n        drawLine(layersEnter, layers);\n\n        drawArea(layersEnter, layers);\n\n        drawDots(chartBody, layers);\n\n        if (_chart.renderLabel()) {\n            drawLabels(layers);\n        }\n    };\n\n    /**\n     * Gets or sets the curve factory to use for lines and areas drawn, allowing e.g. step\n     * functions, splines, and cubic interpolation. Typically you would use one of the interpolator functions\n     * provided by {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curves}.\n     *\n     * Replaces the use of {@link dc.lineChart#interpolate} and {@link dc.lineChart#tension}\n     * in dc.js < 3.0\n     *\n     * This is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve} and\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}.\n     * @example\n     * // default\n     * chart\n     *     .curve(d3.curveLinear);\n     * // Add tension to curves that support it\n     * chart\n     *     .curve(d3.curveCardinal.tension(0.5));\n     * // You can use some specialized variation like\n     * // https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n     * chart\n     *     .curve(d3.curveCatmullRom.alpha(0.5));\n     * @method curve\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve}\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}\n     * @param  {d3.curve} [curve=d3.curveLinear]\n     * @returns {d3.curve|dc.lineChart}\n     */\n    _chart.curve = function (curve) {\n        if (!arguments.length) {\n            return _curve;\n        }\n        _curve = curve;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step\n     * functions, splines, and cubic interpolation.\n     *\n     * Possible values are: 'linear', 'linear-closed', 'step', 'step-before', 'step-after', 'basis',\n     * 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', and\n     * 'monotone'.\n     *\n     * This function exists for backward compatibility. Use {@link dc.lineChart#curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @method interpolate\n     * @memberof dc.lineChart\n     * @instance\n     * @deprecated since version 3.0 use {@link dc.lineChart#curve} instead\n     * @see {@link dc.lineChart#curve}\n     * @param  {d3.curve} [interpolate=d3.curveLinear]\n     * @returns {d3.curve|dc.lineChart}\n     */\n    _chart.interpolate = dc.logger.deprecate(function (interpolate) {\n        if (!arguments.length) {\n            return _interpolate;\n        }\n        _interpolate = interpolate;\n        return _chart;\n    }, 'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\n\n    /**\n     * Gets or sets the tension to use for lines drawn, in the range 0 to 1.\n     *\n     * Passed to the {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curve function}\n     * if it provides a `.tension` function. Example:\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#curveCardinal_tension curveCardinal.tension}.\n     *\n     * This function exists for backward compatibility. Use {@link dc.lineChart#curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @method tension\n     * @memberof dc.lineChart\n     * @instance\n     * @deprecated since version 3.0 use {@link dc.lineChart#curve} instead\n     * @see {@link dc.lineChart#curve}\n     * @param  {Number} [tension=0]\n     * @returns {Number|dc.lineChart}\n     */\n    _chart.tension = dc.logger.deprecate(function (tension) {\n        if (!arguments.length) {\n            return _tension;\n        }\n        _tension = tension;\n        return _chart;\n    }, 'dc.lineChart.tension has been deprecated since version 3.0 use dc.lineChart.curve instead');\n\n    /**\n     * Gets or sets a function that will determine discontinuities in the line which should be\n     * skipped: the path will be broken into separate subpaths if some points are undefined.\n     * This function is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\n     *\n     * Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write\n     * custom reduce functions to get this to work, depending on your data. See\n     * {@link https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248 this GitHub comment}\n     * for more details and an example.\n     * @method defined\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\n     * @param  {Function} [defined]\n     * @returns {Function|dc.lineChart}\n     */\n    _chart.defined = function (defined) {\n        if (!arguments.length) {\n            return _defined;\n        }\n        _defined = defined;\n        return _chart;\n    };\n\n    /**\n     * Set the line's d3 dashstyle. This value becomes the 'stroke-dasharray' of line. Defaults to empty\n     * array (solid line).\n     * @method dashStyle\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray stroke-dasharray}\n     * @example\n     * // create a Dash Dot Dot Dot\n     * chart.dashStyle([3,1,1,1]);\n     * @param  {Array<Number>} [dashStyle=[]]\n     * @returns {Array<Number>|dc.lineChart}\n     */\n    _chart.dashStyle = function (dashStyle) {\n        if (!arguments.length) {\n            return _dashStyle;\n        }\n        _dashStyle = dashStyle;\n        return _chart;\n    };\n\n    /**\n     * Get or set render area flag. If the flag is set to true then the chart will render the area\n     * beneath each line and the line chart effectively becomes an area chart.\n     * @method renderArea\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Boolean} [renderArea=false]\n     * @returns {Boolean|dc.lineChart}\n     */\n    _chart.renderArea = function (renderArea) {\n        if (!arguments.length) {\n            return _renderArea;\n        }\n        _renderArea = renderArea;\n        return _chart;\n    };\n\n    function colors (d, i) {\n        return _chart.getColor.call(d, d.values, i);\n    }\n\n    // To keep it backward compatible, this covers multiple cases\n    // See https://github.com/dc-js/dc.js/issues/1376\n    // It will be removed when interpolate and tension are removed.\n    function getCurveFactory () {\n        var curve = null;\n\n        // _curve takes precedence\n        if (_curve) {\n            return _curve;\n        }\n\n        // Approximate the D3v3 behavior\n        if (typeof _interpolate === 'function') {\n            curve = _interpolate;\n        } else {\n            // If _interpolate is string\n            var mapping = {\n                'linear': d3.curveLinear,\n                'linear-closed': d3.curveLinearClosed,\n                'step': d3.curveStep,\n                'step-before': d3.curveStepBefore,\n                'step-after': d3.curveStepAfter,\n                'basis': d3.curveBasis,\n                'basis-open': d3.curveBasisOpen,\n                'basis-closed': d3.curveBasisClosed,\n                'bundle': d3.curveBundle,\n                'cardinal': d3.curveCardinal,\n                'cardinal-open': d3.curveCardinalOpen,\n                'cardinal-closed': d3.curveCardinalClosed,\n                'monotone': d3.curveMonotoneX\n            };\n            curve = mapping[_interpolate];\n        }\n\n        // Default value\n        if (!curve) {\n            curve = d3.curveLinear;\n        }\n\n        if (_tension !== null) {\n            if (typeof curve.tension !== 'function') {\n                dc.logger.warn('tension was specified but the curve/interpolate does not support it.');\n            } else {\n                curve = curve.tension(_tension);\n            }\n        }\n        return curve;\n    }\n\n    function drawLine (layersEnter, layers) {\n        var line = d3.line()\n            .x(function (d) {\n                return _chart.x()(d.x);\n            })\n            .y(function (d) {\n                return _chart.y()(d.y + d.y0);\n            })\n            .curve(getCurveFactory());\n        if (_defined) {\n            line.defined(_defined);\n        }\n\n        var path = layersEnter.append('path')\n            .attr('class', 'line')\n            .attr('stroke', colors);\n        if (_dashStyle) {\n            path.attr('stroke-dasharray', _dashStyle);\n        }\n\n        dc.transition(layers.select('path.line'), _chart.transitionDuration(), _chart.transitionDelay())\n            //.ease('linear')\n            .attr('stroke', colors)\n            .attr('d', function (d) {\n                return safeD(line(d.values));\n            });\n    }\n\n    function drawArea (layersEnter, layers) {\n        if (_renderArea) {\n            var area = d3.area()\n                .x(function (d) {\n                    return _chart.x()(d.x);\n                })\n                .y1(function (d) {\n                    return _chart.y()(d.y + d.y0);\n                })\n                .y0(function (d) {\n                    return _chart.y()(d.y0);\n                })\n                .curve(getCurveFactory());\n            if (_defined) {\n                area.defined(_defined);\n            }\n\n            layersEnter.append('path')\n                .attr('class', 'area')\n                .attr('fill', colors)\n                .attr('d', function (d) {\n                    return safeD(area(d.values));\n                });\n\n            dc.transition(layers.select('path.area'), _chart.transitionDuration(), _chart.transitionDelay())\n                //.ease('linear')\n                .attr('fill', colors)\n                .attr('d', function (d) {\n                    return safeD(area(d.values));\n                });\n        }\n    }\n\n    function safeD (d) {\n        return (!d || d.indexOf('NaN') >= 0) ? 'M0,0' : d;\n    }\n\n    function drawDots (chartBody, layers) {\n        if (_chart.xyTipsOn() === 'always' || (!(_chart.brushOn() || _chart.parentBrushOn()) && _chart.xyTipsOn())) {\n            var tooltipListClass = TOOLTIP_G_CLASS + '-list';\n            var tooltips = chartBody.select('g.' + tooltipListClass);\n\n            if (tooltips.empty()) {\n                tooltips = chartBody.append('g').attr('class', tooltipListClass);\n            }\n\n            layers.each(function (d, layerIndex) {\n                var points = d.values;\n                if (_defined) {\n                    points = points.filter(_defined);\n                }\n\n                var g = tooltips.select('g.' + TOOLTIP_G_CLASS + '._' + layerIndex);\n                if (g.empty()) {\n                    g = tooltips.append('g').attr('class', TOOLTIP_G_CLASS + ' _' + layerIndex);\n                }\n\n                createRefLines(g);\n\n                var dots = g.selectAll('circle.' + DOT_CIRCLE_CLASS)\n                    .data(points, dc.pluck('x'));\n\n                var dotsEnterModify = dots\n                    .enter()\n                        .append('circle')\n                        .attr('class', DOT_CIRCLE_CLASS)\n                        .attr('cx', function (d) {\n                            return dc.utils.safeNumber(_chart.x()(d.x));\n                        })\n                        .attr('cy', function (d) {\n                            return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                        })\n                        .attr('r', getDotRadius())\n                        .style('fill-opacity', _dataPointFillOpacity)\n                        .style('stroke-opacity', _dataPointStrokeOpacity)\n                        .attr('fill', _chart.getColor)\n                        .attr('stroke', _chart.getColor)\n                        .on('mousemove', function () {\n                            var dot = d3.select(this);\n                            showDot(dot);\n                            showRefLines(dot, g);\n                        })\n                        .on('mouseout', function () {\n                            var dot = d3.select(this);\n                            hideDot(dot);\n                            hideRefLines(g);\n                        })\n                    .merge(dots);\n\n                dotsEnterModify.call(renderTitle, d);\n\n                dc.transition(dotsEnterModify, _chart.transitionDuration())\n                    .attr('cx', function (d) {\n                        return dc.utils.safeNumber(_chart.x()(d.x));\n                    })\n                    .attr('cy', function (d) {\n                        return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                    })\n                    .attr('fill', _chart.getColor);\n\n                dots.exit().remove();\n            });\n        }\n    }\n\n    _chart.label(function (d) {\n        return dc.utils.printSingleValue(d.y0 + d.y);\n    }, false);\n\n    function drawLabels (layers) {\n        layers.each(function (d, layerIndex) {\n            var layer = d3.select(this);\n            var labels = layer.selectAll('text.lineLabel')\n                .data(d.values, dc.pluck('x'));\n\n            var labelsEnterModify = labels\n                .enter()\n                    .append('text')\n                    .attr('class', 'lineLabel')\n                    .attr('text-anchor', 'middle')\n                .merge(labels);\n\n            dc.transition(labelsEnterModify, _chart.transitionDuration())\n                .attr('x', function (d) {\n                    return dc.utils.safeNumber(_chart.x()(d.x));\n                })\n                .attr('y', function (d) {\n                    var y = _chart.y()(d.y + d.y0) - LABEL_PADDING;\n                    return dc.utils.safeNumber(y);\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n\n            dc.transition(labels.exit(), _chart.transitionDuration())\n                .attr('height', 0)\n                .remove();\n        });\n    }\n\n    function createRefLines (g) {\n        var yRefLine = g.select('path.' + Y_AXIS_REF_LINE_CLASS).empty() ?\n            g.append('path').attr('class', Y_AXIS_REF_LINE_CLASS) : g.select('path.' + Y_AXIS_REF_LINE_CLASS);\n        yRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n\n        var xRefLine = g.select('path.' + X_AXIS_REF_LINE_CLASS).empty() ?\n            g.append('path').attr('class', X_AXIS_REF_LINE_CLASS) : g.select('path.' + X_AXIS_REF_LINE_CLASS);\n        xRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n    }\n\n    function showDot (dot) {\n        dot.style('fill-opacity', 0.8);\n        dot.style('stroke-opacity', 0.8);\n        dot.attr('r', _dotRadius);\n        return dot;\n    }\n\n    function showRefLines (dot, g) {\n        var x = dot.attr('cx');\n        var y = dot.attr('cy');\n        var yAxisX = (_chart._yAxisX() - _chart.margins().left);\n        var yAxisRefPathD = 'M' + yAxisX + ' ' + y + 'L' + (x) + ' ' + (y);\n        var xAxisRefPathD = 'M' + x + ' ' + _chart.yAxisHeight() + 'L' + x + ' ' + y;\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', '').attr('d', yAxisRefPathD);\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', '').attr('d', xAxisRefPathD);\n    }\n\n    function getDotRadius () {\n        return _dataPointRadius || _dotRadius;\n    }\n\n    function hideDot (dot) {\n        dot.style('fill-opacity', _dataPointFillOpacity)\n            .style('stroke-opacity', _dataPointStrokeOpacity)\n            .attr('r', getDotRadius());\n    }\n\n    function hideRefLines (g) {\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', 'none');\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', 'none');\n    }\n\n    function renderTitle (dot, d) {\n        if (_chart.renderTitle()) {\n            dot.select('title').remove();\n            dot.append('title').text(dc.pluck('data', _chart.title(d.name)));\n        }\n    }\n\n    /**\n     * Turn on/off the mouseover behavior of an individual data point which renders a circle and x/y axis\n     * dashed lines back to each respective axis.  This is ignored if the chart\n     * {@link dc.coordinateGridMixin#brushOn brush} is on\n     * @method xyTipsOn\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Boolean} [xyTipsOn=false]\n     * @returns {Boolean|dc.lineChart}\n     */\n    _chart.xyTipsOn = function (xyTipsOn) {\n        if (!arguments.length) {\n            return _xyTipsOn;\n        }\n        _xyTipsOn = xyTipsOn;\n        return _chart;\n    };\n\n    /**\n     * Get or set the radius (in px) for dots displayed on the data points.\n     * @method dotRadius\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Number} [dotRadius=5]\n     * @returns {Number|dc.lineChart}\n     */\n    _chart.dotRadius = function (dotRadius) {\n        if (!arguments.length) {\n            return _dotRadius;\n        }\n        _dotRadius = dotRadius;\n        return _chart;\n    };\n\n    /**\n     * Always show individual dots for each datapoint.\n     *\n     * If `options` is falsy, it disables data point rendering. If no `options` are provided, the\n     * current `options` values are instead returned.\n     * @method renderDataPoints\n     * @memberof dc.lineChart\n     * @instance\n     * @example\n     * chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.0})\n     * @param  {{fillOpacity: Number, strokeOpacity: Number, radius: Number}} [options={fillOpacity: 0.8, strokeOpacity: 0.0, radius: 2}]\n     * @returns {{fillOpacity: Number, strokeOpacity: Number, radius: Number}|dc.lineChart}\n     */\n    _chart.renderDataPoints = function (options) {\n        if (!arguments.length) {\n            return {\n                fillOpacity: _dataPointFillOpacity,\n                strokeOpacity: _dataPointStrokeOpacity,\n                radius: _dataPointRadius\n            };\n        } else if (!options) {\n            _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n            _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n            _dataPointRadius = null;\n        } else {\n            _dataPointFillOpacity = options.fillOpacity || 0.8;\n            _dataPointStrokeOpacity = options.strokeOpacity || 0.0;\n            _dataPointRadius = options.radius || 2;\n        }\n        return _chart;\n    };\n\n    function colorFilter (color, dashstyle, inv) {\n        return function () {\n            var item = d3.select(this);\n            var match = (item.attr('stroke') === color &&\n                item.attr('stroke-dasharray') === ((dashstyle instanceof Array) ?\n                    dashstyle.join(',') : null)) || item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    _chart.legendHighlight = function (d) {\n        if (!_chart.isLegendableHidden(d)) {\n            _chart.g().selectAll('path.line, path.area')\n                .classed('highlight', colorFilter(d.color, d.dashstyle))\n                .classed('fadeout', colorFilter(d.color, d.dashstyle, true));\n        }\n    };\n\n    _chart.legendReset = function () {\n        _chart.g().selectAll('path.line, path.area')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    };\n\n    dc.override(_chart, 'legendables', function () {\n        var legendables = _chart._legendables();\n        if (!_dashStyle) {\n            return legendables;\n        }\n        return legendables.map(function (l) {\n            l.dashstyle = _dashStyle;\n            return l;\n        });\n    });\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The data count widget is a simple widget designed to display the number of records selected by the\n * current filters out of the total number of records in the data set. Once created the data count widget\n * will automatically update the text content of child elements with the following classes:\n *\n * * `.total-count` - total number of records\n * * `.filter-count` - number of records matched by the current filters\n *\n * Note: this widget works best for the specific case of showing the number of records out of a\n * total. If you want a more general-purpose numeric display, please use the\n * {@link dc.numberDisplay} widget instead.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class dataCount\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * var ndx = crossfilter(data);\n * var all = ndx.groupAll();\n *\n * dc.dataCount('.dc-data-count')\n *     .dimension(ndx)\n *     .group(all);\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataCount}\n */\ndc.dataCount = function (parent, chartGroup) {\n    var _formatNumber = d3.format(',d');\n    var _chart = dc.baseMixin({});\n    var _html = {some: '', all: ''};\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending how many items are\n     * selected. The text `%total-count` will replaced with the total number of records, and the text\n     * `%filter-count` will be replaced with the number of selected records.\n     * - all: HTML template to use if all items are selected\n     * - some: HTML template to use if not all items are selected\n     * @method html\n     * @memberof dc.dataCount\n     * @instance\n     * @example\n     * counter.html({\n     *      some: '%filter-count out of %total-count records selected',\n     *      all: 'All records selected. Click on charts to apply filters'\n     * })\n     * @param {{some:String, all: String}} [options]\n     * @returns {{some:String, all: String}|dc.dataCount}\n     */\n    _chart.html = function (options) {\n        if (!arguments.length) {\n            return _html;\n        }\n        if (options.all) {\n            _html.all = options.all;\n        }\n        if (options.some) {\n            _html.some = options.some;\n        }\n        return _chart;\n    };\n\n    /**\n     * Gets or sets an optional function to format the filter count and total count.\n     * @method formatNumber\n     * @memberof dc.dataCount\n     * @instance\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @example\n     * counter.formatNumber(d3.format('.2g'))\n     * @param {Function} [formatter=d3.format('.2g')]\n     * @returns {Function|dc.dataCount}\n     */\n    _chart.formatNumber = function (formatter) {\n        if (!arguments.length) {\n            return _formatNumber;\n        }\n        _formatNumber = formatter;\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        var tot = _chart.dimension().size(),\n            val = _chart.group().value();\n        var all = _formatNumber(tot);\n        var selected = _formatNumber(val);\n\n        if ((tot === val) && (_html.all !== '')) {\n            _chart.root().html(_html.all.replace('%total-count', all).replace('%filter-count', selected));\n        } else if (_html.some !== '') {\n            _chart.root().html(_html.some.replace('%total-count', all).replace('%filter-count', selected));\n        } else {\n            _chart.selectAll('.total-count').text(all);\n            _chart.selectAll('.filter-count').text(selected);\n        }\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The data table is a simple widget designed to list crossfilter focused data set (rows being\n * filtered) in a good old tabular fashion.\n *\n * Note: Unlike other charts, the data table (and data grid chart) use the {@link dc.dataTable#group group} attribute as a\n * keying function for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data\n * together in groups.  Do not pass in a crossfilter group as this will not work.\n *\n * Another interesting feature of the data table is that you can pass a crossfilter group to the `dimension`, as\n * long as you specify the {@link dc.dataTable#order order} as `d3.descending`, since the data\n * table will use `dimension.top()` to fetch the data in that case, and the method is equally\n * supported on the crossfilter group as the crossfilter dimension.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.io/dc.js/examples/table-on-aggregated-data.html dataTable on a crossfilter group}\n * ({@link https://github.com/dc-js/dc.js/blob/develop/web/examples/table-on-aggregated-data.html source})\n * @class dataTable\n * @memberof dc\n * @mixes dc.baseMixin\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataTable}\n */\ndc.dataTable = function (parent, chartGroup) {\n    var LABEL_CSS_CLASS = 'dc-table-label';\n    var ROW_CSS_CLASS = 'dc-table-row';\n    var COLUMN_CSS_CLASS = 'dc-table-column';\n    var GROUP_CSS_CLASS = 'dc-table-group';\n    var HEAD_CSS_CLASS = 'dc-table-head';\n\n    var _chart = dc.baseMixin({});\n\n    var _size = 25;\n    var _columns = [];\n    var _sortBy = function (d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _beginSlice = 0;\n    var _endSlice;\n    var _showGroups = true;\n\n    _chart._doRender = function () {\n        _chart.selectAll('tbody').remove();\n\n        renderRows(renderGroups());\n\n        return _chart;\n    };\n\n    _chart._doColumnValueFormat = function (v, d) {\n        return ((typeof v === 'function') ?\n                v(d) :                          // v as function\n                ((typeof v === 'string') ?\n                 d[v] :                         // v is field name string\n                 v.format(d)                        // v is Object, use fn (element 2)\n                )\n               );\n    };\n\n    _chart._doColumnHeaderFormat = function (d) {\n        // if 'function', convert to string representation\n        // show a string capitalized\n        // if an object then display its label string as-is.\n        return (typeof d === 'function') ?\n                _chart._doColumnHeaderFnToString(d) :\n                ((typeof d === 'string') ?\n                 _chart._doColumnHeaderCapitalize(d) : String(d.label));\n    };\n\n    _chart._doColumnHeaderCapitalize = function (s) {\n        // capitalize\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n\n    _chart._doColumnHeaderFnToString = function (f) {\n        // columnString(f) {\n        var s = String(f);\n        var i1 = s.indexOf('return ');\n        if (i1 >= 0) {\n            var i2 = s.lastIndexOf(';');\n            if (i2 >= 0) {\n                s = s.substring(i1 + 7, i2);\n                var i3 = s.indexOf('numberFormat');\n                if (i3 >= 0) {\n                    s = s.replace('numberFormat', '');\n                }\n            }\n        }\n        return s;\n    };\n\n    function renderGroups () {\n        // The 'original' example uses all 'functions'.\n        // If all 'functions' are used, then don't remove/add a header, and leave\n        // the html alone. This preserves the functionality of earlier releases.\n        // A 2nd option is a string representing a field in the data.\n        // A third option is to supply an Object such as an array of 'information', and\n        // supply your own _doColumnHeaderFormat and _doColumnValueFormat functions to\n        // create what you need.\n        var bAllFunctions = true;\n        _columns.forEach(function (f) {\n            bAllFunctions = bAllFunctions & (typeof f === 'function');\n        });\n\n        if (!bAllFunctions) {\n            // ensure one thead\n            var thead = _chart.selectAll('thead').data([0]);\n            thead.exit().remove();\n            thead = thead.enter()\n                    .append('thead')\n                .merge(thead);\n\n            // with one tr\n            var headrow = thead.selectAll('tr').data([0]);\n            headrow.exit().remove();\n            headrow = headrow.enter()\n                    .append('tr')\n                .merge(headrow);\n\n            // with a th for each column\n            var headcols = headrow.selectAll('th')\n                .data(_columns);\n            headcols.exit().remove();\n            headcols.enter().append('th')\n                .merge(headcols)\n                    .attr('class', HEAD_CSS_CLASS)\n                    .html(function (d) {\n                        return (_chart._doColumnHeaderFormat(d));\n                    });\n        }\n\n        var groups = _chart.root().selectAll('tbody')\n            .data(nestEntries(), function (d) {\n                return _chart.keyAccessor()(d);\n            });\n\n        var rowGroup = groups\n            .enter()\n            .append('tbody');\n\n        if (_showGroups === true) {\n            rowGroup\n                .append('tr')\n                .attr('class', GROUP_CSS_CLASS)\n                    .append('td')\n                    .attr('class', LABEL_CSS_CLASS)\n                    .attr('colspan', _columns.length)\n                    .html(function (d) {\n                        return _chart.keyAccessor()(d);\n                    });\n        }\n\n        groups.exit().remove();\n\n        return rowGroup;\n    }\n\n    function nestEntries () {\n        var entries;\n        if (_order === d3.ascending) {\n            entries = _chart.dimension().bottom(_size);\n        } else {\n            entries = _chart.dimension().top(_size);\n        }\n\n        return d3.nest()\n            .key(_chart.group())\n            .sortKeys(_order)\n            .entries(entries.sort(function (a, b) {\n                return _order(_sortBy(a), _sortBy(b));\n            }).slice(_beginSlice, _endSlice));\n    }\n\n    function renderRows (groups) {\n        var rows = groups.order()\n            .selectAll('tr.' + ROW_CSS_CLASS)\n            .data(function (d) {\n                return d.values;\n            });\n\n        var rowEnter = rows.enter()\n            .append('tr')\n            .attr('class', ROW_CSS_CLASS);\n\n        _columns.forEach(function (v, i) {\n            rowEnter.append('td')\n                .attr('class', COLUMN_CSS_CLASS + ' _' + i)\n                .html(function (d) {\n                    return _chart._doColumnValueFormat(v, d);\n                });\n        });\n\n        rows.exit().remove();\n\n        return rows;\n    }\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set the group function for the data table. The group function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into groups.\n     *\n     * Do not pass in a crossfilter group as this will not work.\n     * @method group\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * // group rows by the value of their field\n     * chart\n     *     .group(function(d) { return d.field; })\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataTable}\n     */\n\n    /**\n     * Get or set the table size which determines the number of rows displayed by the widget.\n     * @method size\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number} [size=25]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.size = function (size) {\n        if (!arguments.length) {\n            return _size;\n        }\n        _size = size;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed\n     * by the widget. Useful when implementing pagination.\n     *\n     * Note: the sortBy function will determine how the rows are ordered for pagination purposes.\n\n     * See the {@link http://dc-js.github.io/dc.js/examples/table-pagination.html table pagination example}\n     * to see how to implement the pagination user interface using `beginSlice` and `endSlice`.\n     * @method beginSlice\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number} [beginSlice=0]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.beginSlice = function (beginSlice) {\n        if (!arguments.length) {\n            return _beginSlice;\n        }\n        _beginSlice = beginSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the\n     * widget. Useful when implementing pagination. See {@link dc.dataTable#beginSlice `beginSlice`} for more information.\n     * @method endSlice\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number|undefined} [endSlice=undefined]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.endSlice = function (endSlice) {\n        if (!arguments.length) {\n            return _endSlice;\n        }\n        _endSlice = endSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set column functions. The data table widget supports several methods of specifying the\n     * columns to display.\n     *\n     * The original method uses an array of functions to generate dynamic columns. Column functions\n     * are simple javascript functions with only one input argument `d` which represents a row in\n     * the data set. The return value of these functions will be used to generate the content for\n     * each cell. However, this method requires the HTML for the table to have a fixed set of column\n     * headers.\n     *\n     * <pre><code>chart.columns([\n     *     function(d) { return d.date; },\n     *     function(d) { return d.open; },\n     *     function(d) { return d.close; },\n     *     function(d) { return numberFormat(d.close - d.open); },\n     *     function(d) { return d.volume; }\n     * ]);\n     * </code></pre>\n     *\n     * In the second method, you can list the columns to read from the data without specifying it as\n     * a function, except where necessary (ie, computed columns).  Note the data element name is\n     * capitalized when displayed in the table header. You can also mix in functions as necessary,\n     * using the third `{label, format}` form, as shown below.\n     *\n     * <pre><code>chart.columns([\n     *     \"date\",    // d[\"date\"], ie, a field accessor; capitalized automatically\n     *     \"open\",    // ...\n     *     \"close\",   // ...\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) {\n     *             return numberFormat(d.close - d.open);\n     *         }\n     *     },\n     *     \"volume\"   // d[\"volume\"], ie, a field accessor; capitalized automatically\n     * ]);\n     * </code></pre>\n     *\n     * In the third example, we specify all fields using the `{label, format}` method:\n     * <pre><code>chart.columns([\n     *     {\n     *         label: \"Date\",\n     *         format: function (d) { return d.date; }\n     *     },\n     *     {\n     *         label: \"Open\",\n     *         format: function (d) { return numberFormat(d.open); }\n     *     },\n     *     {\n     *         label: \"Close\",\n     *         format: function (d) { return numberFormat(d.close); }\n     *     },\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) { return numberFormat(d.close - d.open); }\n     *     },\n     *     {\n     *         label: \"Volume\",\n     *         format: function (d) { return d.volume; }\n     *     }\n     * ]);\n     * </code></pre>\n     *\n     * You may wish to override the dataTable functions `_doColumnHeaderCapitalize` and\n     * `_doColumnHeaderFnToString`, which are used internally to translate the column information or\n     * function into a displayed header. The first one is used on the \"string\" column specifier; the\n     * second is used to transform a stringified function into something displayable. For the Stock\n     * example, the function for Change becomes the table header **d.close - d.open**.\n     *\n     * Finally, you can even specify a completely different form of column definition. To do this,\n     * override `_chart._doColumnHeaderFormat` and `_chart._doColumnValueFormat` Be aware that\n     * fields without numberFormat specification will be displayed just as they are stored in the\n     * data, unformatted.\n     * @method columns\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Array<Function>} [columns=[]]\n     * @returns {Array<Function>}|dc.dataTable}\n     */\n    _chart.columns = function (columns) {\n        if (!arguments.length) {\n            return _columns;\n        }\n        _columns = columns;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at row level and returns a\n     * particular field to be sorted by.\n     * @method sortBy\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     * @param {Function} [sortBy=identity function]\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.sortBy = function (sortBy) {\n        if (!arguments.length) {\n            return _sortBy;\n        }\n        _sortBy = sortBy;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort order. If the order is `d3.ascending`, the data table will use\n     * `dimension().bottom()` to fetch the data; otherwise it will use `dimension().top()`\n     * @method order\n     * @memberof dc.dataTable\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param {Function} [order=d3.ascending]\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set if group rows will be shown. The dataTable {@link dc.dataTable#group group}\n     * function must be specified even if groups are not shown.\n     * @method showGroups\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * chart\n     *     .group([value], [name])\n     *     .showGroups(true|false);\n     * @param {Boolean} [showGroups=true]\n     * @returns {Boolean|dc.dataTable}\n     */\n    _chart.showGroups = function (showGroups) {\n        if (!arguments.length) {\n            return _showGroups;\n        }\n        _showGroups = showGroups;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Data grid is a simple widget designed to list the filtered records, providing\n * a simple way to define how the items are displayed.\n *\n * Note: Unlike other charts, the data grid chart (and data table) use the {@link dc.dataGrid#group group} attribute as a keying function\n * for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data together in groups.\n * Do not pass in a crossfilter group as this will not work.\n *\n * Examples:\n * - {@link http://europarl.me/dc.js/web/ep/index.html List of members of the european parliament}\n * @class dataGrid\n * @memberof dc\n * @mixes dc.baseMixin\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataGrid}\n */\ndc.dataGrid = function (parent, chartGroup) {\n    var LABEL_CSS_CLASS = 'dc-grid-label';\n    var ITEM_CSS_CLASS = 'dc-grid-item';\n    var GROUP_CSS_CLASS = 'dc-grid-group';\n    var GRID_CSS_CLASS = 'dc-grid-top';\n\n    var _chart = dc.baseMixin({});\n\n    var _size = 999; // shouldn't be needed, but you might\n    var _html = function (d) { return 'you need to provide an html() handling param:  ' + JSON.stringify(d); };\n    var _sortBy = function (d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _beginSlice = 0, _endSlice;\n\n    var _htmlGroup = function (d) {\n        return '<div class=\\'' + GROUP_CSS_CLASS + '\\'><h1 class=\\'' + LABEL_CSS_CLASS + '\\'>' +\n            _chart.keyAccessor()(d) + '</h1></div>';\n    };\n\n    _chart._doRender = function () {\n        _chart.selectAll('div.' + GRID_CSS_CLASS).remove();\n\n        renderItems(renderGroups());\n\n        return _chart;\n    };\n\n    function renderGroups () {\n        var groups = _chart.root().selectAll('div.' + GRID_CSS_CLASS)\n                .data(nestEntries(), function (d) {\n                    return _chart.keyAccessor()(d);\n                });\n\n        var itemGroup = groups\n                .enter()\n                .append('div')\n                .attr('class', GRID_CSS_CLASS);\n\n        if (_htmlGroup) {\n            itemGroup\n                .html(function (d) {\n                    return _htmlGroup(d);\n                });\n        }\n\n        groups.exit().remove();\n        return itemGroup;\n    }\n\n    function nestEntries () {\n        var entries = _chart.dimension().top(_size);\n\n        return d3.nest()\n            .key(_chart.group())\n            .sortKeys(_order)\n            .entries(entries.sort(function (a, b) {\n                return _order(_sortBy(a), _sortBy(b));\n            }).slice(_beginSlice, _endSlice));\n    }\n\n    function renderItems (groups) {\n        var items = groups.order()\n                .selectAll('div.' + ITEM_CSS_CLASS)\n                .data(function (d) {\n                    return d.values;\n                });\n\n        items.exit().remove();\n\n        items = items\n            .enter()\n                .append('div')\n                .attr('class', ITEM_CSS_CLASS)\n                .html(function (d) {\n                    return _html(d);\n                })\n            .merge(items);\n\n        return items;\n    }\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set the group function for the data grid. The group function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into groups.\n     *\n     * Do not pass in a crossfilter group as this will not work.\n     * @method group\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * // group rows by the value of their field\n     * chart\n     *     .group(function(d) { return d.field; })\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataTable}\n     */\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @method beginSlice\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [beginSlice=0]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.beginSlice = function (beginSlice) {\n        if (!arguments.length) {\n            return _beginSlice;\n        }\n        _beginSlice = beginSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @method endSlice\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [endSlice]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.endSlice = function (endSlice) {\n        if (!arguments.length) {\n            return _endSlice;\n        }\n        _endSlice = endSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the grid size which determines the number of items displayed by the widget.\n     * @method size\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [size=999]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.size = function (size) {\n        if (!arguments.length) {\n            return _size;\n        }\n        _size = size;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that formats an item. The data grid widget uses a\n     * function to generate dynamic html. Use your favourite templating engine or\n     * generate the string directly.\n     * @method html\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.html(function (d) { return '<div class='item '+data.exampleCategory+''>'+data.exampleString+'</div>';});\n     * @param {Function} [html]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.html = function (html) {\n        if (!arguments.length) {\n            return _html;\n        }\n        _html = html;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that formats a group label.\n     * @method htmlGroup\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.htmlGroup (function (d) { return '<h2>'.d.key . 'with ' . d.values.length .' items</h2>'});\n     * @param {Function} [htmlGroup]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.htmlGroup = function (htmlGroup) {\n        if (!arguments.length) {\n            return _htmlGroup;\n        }\n        _htmlGroup = htmlGroup;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at the item\n     * level and returns a particular field to be sorted.\n     * @method sortBy\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     * @param {Function} [sortByFunction]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.sortBy = function (sortByFunction) {\n        if (!arguments.length) {\n            return _sortBy;\n        }\n        _sortBy = sortByFunction;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort the order function.\n     * @method order\n     * @memberof dc.dataGrid\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param {Function} [order=d3.ascending]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A concrete implementation of a general purpose bubble chart that allows data visualization using the\n * following dimensions:\n * - x axis position\n * - y axis position\n * - bubble radius\n * - color\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\n * @class bubbleChart\n * @memberof dc\n * @mixes dc.bubbleMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a bubble chart under #chart-container1 element using the default global chart group\n * var bubbleChart1 = dc.bubbleChart('#chart-container1');\n * // create a bubble chart under #chart-container2 element using chart group A\n * var bubbleChart2 = dc.bubbleChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.bubbleChart}\n */\ndc.bubbleChart = function (parent, chartGroup) {\n    var _chart = dc.bubbleMixin(dc.coordinateGridMixin({}));\n\n    _chart.transitionDuration(750);\n\n    _chart.transitionDelay(0);\n\n    var bubbleLocator = function (d) {\n        return 'translate(' + (bubbleX(d)) + ',' + (bubbleY(d)) + ')';\n    };\n\n    _chart.plotData = function () {\n        _chart.calculateRadiusDomain();\n        _chart.r().range([_chart.MIN_RADIUS, _chart.xAxisLength() * _chart.maxBubbleRelativeSize()]);\n\n        var data = _chart.data();\n        var bubbleG = _chart.chartBodyG().selectAll('g.' + _chart.BUBBLE_NODE_CLASS)\n                .data(data, function (d) { return d.key; });\n        if (_chart.sortBubbleSize()) {\n            // update dom order based on sort\n            bubbleG.order();\n        }\n\n        removeNodes(bubbleG);\n\n        bubbleG = renderNodes(bubbleG);\n\n        updateNodes(bubbleG);\n\n        _chart.fadeDeselectedArea(_chart.filter());\n    };\n\n    function renderNodes (bubbleG) {\n        var bubbleGEnter = bubbleG.enter().append('g');\n\n        bubbleGEnter\n            .attr('class', _chart.BUBBLE_NODE_CLASS)\n            .attr('transform', bubbleLocator)\n            .append('circle').attr('class', function (d, i) {\n                return _chart.BUBBLE_CLASS + ' _' + i;\n            })\n            .on('click', _chart.onClick)\n            .attr('fill', _chart.getColor)\n            .attr('r', 0);\n\n        bubbleG = bubbleGEnter.merge(bubbleG);\n\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\n            .select('circle.' + _chart.BUBBLE_CLASS)\n            .attr('r', function (d) {\n                return _chart.bubbleR(d);\n            })\n            .attr('opacity', function (d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart._doRenderLabel(bubbleGEnter);\n\n        _chart._doRenderTitles(bubbleGEnter);\n\n        return bubbleG;\n    }\n\n    function updateNodes (bubbleG) {\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', bubbleLocator)\n            .select('circle.' + _chart.BUBBLE_CLASS)\n            .attr('fill', _chart.getColor)\n            .attr('r', function (d) {\n                return _chart.bubbleR(d);\n            })\n            .attr('opacity', function (d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart.doUpdateLabels(bubbleG);\n        _chart.doUpdateTitles(bubbleG);\n    }\n\n    function removeNodes (bubbleG) {\n        bubbleG.exit().remove();\n    }\n\n    function bubbleX (d) {\n        var x = _chart.x()(_chart.keyAccessor()(d));\n        if (isNaN(x) || !isFinite(x)) {\n            x = 0;\n        }\n        return x;\n    }\n\n    function bubbleY (d) {\n        var y = _chart.y()(_chart.valueAccessor()(d));\n        if (isNaN(y) || !isFinite(y)) {\n            y = 0;\n        }\n        return y;\n    }\n\n    _chart.renderBrush = function () {\n        // override default x axis brush from parent chart\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Composite charts are a special kind of chart that render multiple charts on the same Coordinate\n * Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to\n * achieve some quite flexible charting effects.\n * @class compositeChart\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a composite chart under #chart-container1 element using the default global chart group\n * var compositeChart1 = dc.compositeChart('#chart-container1');\n * // create a composite chart under #chart-container2 element using chart group A\n * var compositeChart2 = dc.compositeChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.compositeChart}\n */\ndc.compositeChart = function (parent, chartGroup) {\n\n    var SUB_CHART_CLASS = 'sub';\n    var DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;\n\n    var _chart = dc.coordinateGridMixin({});\n    var _children = [];\n\n    var _childOptions = {};\n\n    var _shareColors = false,\n        _shareTitle = true,\n        _alignYAxes = false;\n\n    var _rightYAxis = d3.axisRight(),\n        _rightYAxisLabel = 0,\n        _rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING,\n        _rightY,\n        _rightAxisGridLines = false;\n\n    _chart._mandatoryAttributes([]);\n    _chart.transitionDuration(500);\n    _chart.transitionDelay(0);\n\n    dc.override(_chart, '_generateG', function () {\n        var g = this.__generateG();\n\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            generateChildG(child, i);\n\n            if (!child.dimension()) {\n                child.dimension(_chart.dimension());\n            }\n            if (!child.group()) {\n                child.group(_chart.group());\n            }\n\n            child.chartGroup(_chart.chartGroup());\n            child.svg(_chart.svg());\n            child.xUnits(_chart.xUnits());\n            child.transitionDuration(_chart.transitionDuration(), _chart.transitionDelay());\n            child.parentBrushOn(_chart.brushOn());\n            child.brushOn(false);\n            child.renderTitle(_chart.renderTitle());\n            child.elasticX(_chart.elasticX());\n        }\n\n        return g;\n    });\n\n    _chart.on('filtered.dcjs-composite-chart', function (chart) {\n        // Propagate the filters onto the children\n        // Notice that on children the call is .replaceFilter and not .filter\n        //   the reason is that _chart.filter() returns the entire current set of filters not just the last added one\n        for (var i = 0; i < _children.length; ++i) {\n            _children[i].replaceFilter(_chart.filter());\n        }\n    });\n\n    _chart._prepareYAxis = function () {\n        var left = (leftYAxisChildren().length !== 0);\n        var right = (rightYAxisChildren().length !== 0);\n        var ranges = calculateYAxisRanges(left, right);\n\n        if (left) { prepareLeftYAxis(ranges); }\n        if (right) { prepareRightYAxis(ranges); }\n\n        if (leftYAxisChildren().length > 0 && !_rightAxisGridLines) {\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _chart.y(), _chart.yAxis());\n        } else if (rightYAxisChildren().length > 0) {\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _rightY, _rightYAxis);\n        }\n    };\n\n    _chart.renderYAxis = function () {\n        if (leftYAxisChildren().length !== 0) {\n            _chart.renderYAxisAt('y', _chart.yAxis(), _chart.margins().left);\n            _chart.renderYAxisLabel('y', _chart.yAxisLabel(), -90);\n        }\n\n        if (rightYAxisChildren().length !== 0) {\n            _chart.renderYAxisAt('yr', _chart.rightYAxis(), _chart.width() - _chart.margins().right);\n            _chart.renderYAxisLabel('yr', _chart.rightYAxisLabel(), 90, _chart.width() - _rightYAxisLabelPadding);\n        }\n    };\n\n    function calculateYAxisRanges (left, right) {\n        var lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax;\n        var ranges;\n\n        if (left) {\n            lyAxisMin = yAxisMin();\n            lyAxisMax = yAxisMax();\n        }\n\n        if (right) {\n            ryAxisMin = rightYAxisMin();\n            ryAxisMax = rightYAxisMax();\n        }\n\n        if (_chart.alignYAxes() && left && right) {\n            ranges = alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax);\n        }\n\n        return ranges || {\n            lyAxisMin: lyAxisMin,\n            lyAxisMax: lyAxisMax,\n            ryAxisMin: ryAxisMin,\n            ryAxisMax: ryAxisMax\n        };\n    }\n\n    function alignYAxisRanges (lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax) {\n        // since the two series will share a zero, each Y is just a multiple\n        // of the other. and the ratio should be the ratio of the ranges of the\n        // input data, so that they come out the same height. so we just min/max\n\n        // note: both ranges already include zero due to the stack mixin (#667)\n        // if #667 changes, we can reconsider whether we want data height or\n        // height from zero to be equal. and it will be possible for the axes\n        // to be aligned but not visible.\n        var extentRatio = (ryAxisMax - ryAxisMin) / (lyAxisMax - lyAxisMin);\n\n        return {\n            lyAxisMin: Math.min(lyAxisMin, ryAxisMin / extentRatio),\n            lyAxisMax: Math.max(lyAxisMax, ryAxisMax / extentRatio),\n            ryAxisMin: Math.min(ryAxisMin, lyAxisMin * extentRatio),\n            ryAxisMax: Math.max(ryAxisMax, lyAxisMax * extentRatio)\n        };\n    }\n\n    function prepareRightYAxis (ranges) {\n        var needDomain = _chart.rightY() === undefined || _chart.elasticY(),\n            needRange = needDomain || _chart.resizing();\n        if (_chart.rightY() === undefined) {\n            _chart.rightY(d3.scaleLinear());\n        }\n        if (needDomain) {\n            _chart.rightY().domain([ranges.ryAxisMin, ranges.ryAxisMax]);\n        }\n        if (needRange) {\n            _chart.rightY().rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _chart.rightY().range([_chart.yAxisHeight(), 0]);\n        _chart.rightYAxis(_chart.rightYAxis().scale(_chart.rightY()));\n\n        // In D3v4 create a RightAxis\n        // _chart.rightYAxis().orient('right');\n    }\n\n    function prepareLeftYAxis (ranges) {\n        var needDomain = _chart.y() === undefined || _chart.elasticY(),\n            needRange = needDomain || _chart.resizing();\n        if (_chart.y() === undefined) {\n            _chart.y(d3.scaleLinear());\n        }\n        if (needDomain) {\n            _chart.y().domain([ranges.lyAxisMin, ranges.lyAxisMax]);\n        }\n        if (needRange) {\n            _chart.y().rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _chart.y().range([_chart.yAxisHeight(), 0]);\n        _chart.yAxis(_chart.yAxis().scale(_chart.y()));\n\n        // In D3v4 create a LeftAxis\n        // _chart.yAxis().orient('left');\n    }\n\n    function generateChildG (child, i) {\n        child._generateG(_chart.g());\n        child.g().attr('class', SUB_CHART_CLASS + ' _' + i);\n    }\n\n    _chart.plotData = function () {\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            if (!child.g()) {\n                generateChildG(child, i);\n            }\n\n            if (_shareColors) {\n                child.colors(_chart.colors());\n            }\n\n            child.x(_chart.x());\n\n            child.xAxis(_chart.xAxis());\n\n            if (child.useRightYAxis()) {\n                child.y(_chart.rightY());\n                child.yAxis(_chart.rightYAxis());\n            } else {\n                child.y(_chart.y());\n                child.yAxis(_chart.yAxis());\n            }\n\n            child.plotData();\n\n            child._activateRenderlets();\n        }\n    };\n\n    /**\n     * Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the\n     * default behavior. This option is only respected when subcharts with both left and right y-axes\n     * are present.\n     * @method useRightAxisGridLines\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [useRightAxisGridLines=false]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.useRightAxisGridLines = function (useRightAxisGridLines) {\n        if (!arguments) {\n            return _rightAxisGridLines;\n        }\n\n        _rightAxisGridLines = useRightAxisGridLines;\n        return _chart;\n    };\n\n    /**\n     * Get or set chart-specific options for all child charts. This is equivalent to calling\n     * {@link dc.baseMixin#options .options} on each child chart.\n     *\n     * Note: currently you must call this before `compose` in order for the options to be propagated.\n     * @method childOptions\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Object} [childOptions]\n     * @returns {Object|dc.compositeChart}\n     */\n    _chart.childOptions = function (childOptions) {\n        if (!arguments.length) {\n            return _childOptions;\n        }\n        _childOptions = childOptions;\n        _children.forEach(function (child) {\n            child.options(_childOptions);\n        });\n        return _chart;\n    };\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        if (_chart.brushOn()) {\n            for (var i = 0; i < _children.length; ++i) {\n                var child = _children[i];\n                child.fadeDeselectedArea(brushSelection);\n            }\n        }\n    };\n\n    /**\n     * Set or get the right y axis label.\n     * @method rightYAxisLabel\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {String} [rightYAxisLabel]\n     * @param {Number} [padding]\n     * @returns {String|dc.compositeChart}\n     */\n    _chart.rightYAxisLabel = function (rightYAxisLabel, padding) {\n        if (!arguments.length) {\n            return _rightYAxisLabel;\n        }\n        _rightYAxisLabel = rightYAxisLabel;\n        _chart.margins().right -= _rightYAxisLabelPadding;\n        _rightYAxisLabelPadding = (padding === undefined) ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;\n        _chart.margins().right += _rightYAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n     * Combine the given charts into one single composite coordinate grid chart.\n     *\n     * Note: currently due to the way it is implemented, you must call this function at the end of\n     * initialization of the composite chart, in particular after `shareTitle`, `childOptions`,\n     * `width`, `height`, and `margins`, in order for the settings to get propagated to the children\n     * correctly.\n     * @method compose\n     * @memberof dc.compositeChart\n     * @instance\n     * @example\n     * moveChart.compose([\n     *     // when creating sub-chart you need to pass in the parent chart\n     *     dc.lineChart(moveChart)\n     *         .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\n     *         .valueAccessor(function (d){return d.value.avg;})\n     *         // most of the normal functions will continue to work in a composed chart\n     *         .renderArea(true)\n     *         .stack(monthlyMoveGroup, function (d){return d.value;})\n     *         .title(function (d){\n     *             var value = d.value.avg?d.value.avg:d.value;\n     *             if(isNaN(value)) value = 0;\n     *             return dateFormat(d.key) + '\\n' + numberFormat(value);\n     *         }),\n     *     dc.barChart(moveChart)\n     *         .group(volumeByMonthGroup)\n     *         .centerBar(true)\n     * ]);\n     * @param {Array<Chart>} [subChartArray]\n     * @returns {dc.compositeChart}\n     */\n    _chart.compose = function (subChartArray) {\n        _children = subChartArray;\n        _children.forEach(function (child) {\n            child.height(_chart.height());\n            child.width(_chart.width());\n            child.margins(_chart.margins());\n\n            if (_shareTitle) {\n                child.title(_chart.title());\n            }\n\n            child.options(_childOptions);\n        });\n        return _chart;\n    };\n\n    /**\n     * Returns the child charts which are composed into the composite chart.\n     * @method children\n     * @memberof dc.compositeChart\n     * @instance\n     * @returns {Array<dc.baseMixin>}\n     */\n    _chart.children = function () {\n        return _children;\n    };\n\n    /**\n     * Get or set color sharing for the chart. If set, the {@link dc.colorMixin#colors .colors()} value from this chart\n     * will be shared with composed children. Additionally if the child chart implements\n     * Stackable and has not set a custom .colorAccessor, then it will generate a color\n     * specific to its order in the composition.\n     * @method shareColors\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [shareColors=false]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.shareColors = function (shareColors) {\n        if (!arguments.length) {\n            return _shareColors;\n        }\n        _shareColors = shareColors;\n        return _chart;\n    };\n\n    /**\n     * Get or set title sharing for the chart. If set, the {@link dc.baseMixin#title .title()} value from\n     * this chart will be shared with composed children.\n     *\n     * Note: currently you must call this before `compose` or the child will still get the parent's\n     * `title` function!\n     * @method shareTitle\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [shareTitle=true]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.shareTitle = function (shareTitle) {\n        if (!arguments.length) {\n            return _shareTitle;\n        }\n        _shareTitle = shareTitle;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y scale for the right axis. The right y scale is typically automatically\n     * generated by the chart implementation.\n     * @method rightY\n     * @memberof dc.compositeChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [yScale]\n     * @returns {d3.scale|dc.compositeChart}\n     */\n    _chart.rightY = function (yScale) {\n        if (!arguments.length) {\n            return _rightY;\n        }\n        _rightY = yScale;\n        _chart.rescale();\n        return _chart;\n    };\n\n    /**\n     * Get or set alignment between left and right y axes. A line connecting '0' on both y axis\n     * will be parallel to x axis. This only has effect when {@link #dc.coordinateGridMixin+elasticY elasticY} is true.\n     * @method alignYAxes\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [alignYAxes=false]\n     * @returns {Chart}\n     */\n    _chart.alignYAxes = function (alignYAxes) {\n        if (!arguments.length) {\n            return _alignYAxes;\n        }\n        _alignYAxes = alignYAxes;\n        _chart.rescale();\n        return _chart;\n    };\n\n    function leftYAxisChildren () {\n        return _children.filter(function (child) {\n            return !child.useRightYAxis();\n        });\n    }\n\n    function rightYAxisChildren () {\n        return _children.filter(function (child) {\n            return child.useRightYAxis();\n        });\n    }\n\n    function getYAxisMin (charts) {\n        return charts.map(function (c) {\n            return c.yAxisMin();\n        });\n    }\n\n    delete _chart.yAxisMin;\n    function yAxisMin () {\n        return d3.min(getYAxisMin(leftYAxisChildren()));\n    }\n\n    function rightYAxisMin () {\n        return d3.min(getYAxisMin(rightYAxisChildren()));\n    }\n\n    function getYAxisMax (charts) {\n        return charts.map(function (c) {\n            return c.yAxisMax();\n        });\n    }\n\n    delete _chart.yAxisMax;\n    function yAxisMax () {\n        return dc.utils.add(d3.max(getYAxisMax(leftYAxisChildren())), _chart.yAxisPadding());\n    }\n\n    function rightYAxisMax () {\n        return dc.utils.add(d3.max(getYAxisMax(rightYAxisChildren())), _chart.yAxisPadding());\n    }\n\n    function getAllXAxisMinFromChildCharts () {\n        return _children.map(function (c) {\n            return c.xAxisMin();\n        });\n    }\n\n    dc.override(_chart, 'xAxisMin', function () {\n        return dc.utils.subtract(d3.min(getAllXAxisMinFromChildCharts()), _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    });\n\n    function getAllXAxisMaxFromChildCharts () {\n        return _children.map(function (c) {\n            return c.xAxisMax();\n        });\n    }\n\n    dc.override(_chart, 'xAxisMax', function () {\n        return dc.utils.add(d3.max(getAllXAxisMaxFromChildCharts()), _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    });\n\n    _chart.legendables = function () {\n        return _children.reduce(function (items, child) {\n            if (_shareColors) {\n                child.colors(_chart.colors());\n            }\n            items.push.apply(items, child.legendables());\n            return items;\n        }, []);\n    };\n\n    _chart.legendHighlight = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendHighlight(d);\n        }\n    };\n\n    _chart.legendReset = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendReset(d);\n        }\n    };\n\n    _chart.legendToggle = function () {\n        console.log('composite should not be getting legendToggle itself');\n    };\n\n    /**\n     * Set or get the right y axis used by the composite chart. This function is most useful when y\n     * axis customization is required. The y axis in dc.js is an instance of a\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight) therefore it supports any valid\n     * d3 axis manipulation.\n     *\n     * **Caution**: The right y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * @method rightYAxis\n     * @memberof dc.compositeChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisRight}\n     * @example\n     * // customize y axis tick format\n     * chart.rightYAxis().tickFormat(function (v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.rightYAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axisRight} [rightYAxis]\n     * @returns {d3.axisRight|dc.compositeChart}\n     */\n    _chart.rightYAxis = function (rightYAxis) {\n        if (!arguments.length) {\n            return _rightYAxis;\n        }\n        _rightYAxis = rightYAxis;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A series chart is a chart that shows multiple series of data overlaid on one chart, where the\n * series is specified in the data. It is a specialization of Composite Chart and inherits all\n * composite features other than recomposing the chart.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/series.html Series Chart}\n * @class seriesChart\n * @memberof dc\n * @mixes dc.compositeChart\n * @example\n * // create a series chart under #chart-container1 element using the default global chart group\n * var seriesChart1 = dc.seriesChart(\"#chart-container1\");\n * // create a series chart under #chart-container2 element using chart group A\n * var seriesChart2 = dc.seriesChart(\"#chart-container2\", \"chartGroupA\");\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.seriesChart}\n */\ndc.seriesChart = function (parent, chartGroup) {\n    var _chart = dc.compositeChart(parent, chartGroup);\n\n    function keySort (a, b) {\n        return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n    }\n\n    var _charts = {};\n    var _chartFunction = dc.lineChart;\n    var _seriesAccessor;\n    var _seriesSort = d3.ascending;\n    var _valueSort = keySort;\n\n    _chart._mandatoryAttributes().push('seriesAccessor', 'chart');\n    _chart.shareColors(true);\n\n    _chart._preprocessData = function () {\n        var keep = [];\n        var childrenChanged;\n        var nester = d3.nest().key(_seriesAccessor);\n        if (_seriesSort) {\n            nester.sortKeys(_seriesSort);\n        }\n        if (_valueSort) {\n            nester.sortValues(_valueSort);\n        }\n        var nesting = nester.entries(_chart.data());\n        var children =\n            nesting.map(function (sub, i) {\n                var subChart = _charts[sub.key] || _chartFunction.call(_chart, _chart, chartGroup, sub.key, i);\n                if (!_charts[sub.key]) {\n                    childrenChanged = true;\n                }\n                _charts[sub.key] = subChart;\n                keep.push(sub.key);\n                return subChart\n                    .dimension(_chart.dimension())\n                    .group({\n                        all: typeof sub.values === 'function' ? sub.values : dc.utils.constant(sub.values)\n                    }, sub.key)\n                    .keyAccessor(_chart.keyAccessor())\n                    .valueAccessor(_chart.valueAccessor())\n                    .brushOn(false);\n            });\n        // this works around the fact compositeChart doesn't really\n        // have a removal interface\n        Object.keys(_charts)\n            .filter(function (c) {return keep.indexOf(c) === -1;})\n            .forEach(function (c) {\n                clearChart(c);\n                childrenChanged = true;\n            });\n        _chart._compose(children);\n        if (childrenChanged && _chart.legend()) {\n            _chart.legend().render();\n        }\n    };\n\n    function clearChart (c) {\n        if (_charts[c].g()) {\n            _charts[c].g().remove();\n        }\n        delete _charts[c];\n    }\n\n    function resetChildren () {\n        Object.keys(_charts).map(clearChart);\n        _charts = {};\n    }\n\n    /**\n     * Get or set the chart function, which generates the child charts.\n     * @method chart\n     * @memberof dc.seriesChart\n     * @instance\n     * @example\n     * // put curve on the line charts used for the series\n     * chart.chart(function(c) { return dc.lineChart(c).curve(d3.curveBasis); })\n     * // do a scatter series chart\n     * chart.chart(dc.scatterPlot)\n     * @param {Function} [chartFunction=dc.lineChart]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.chart = function (chartFunction) {\n        if (!arguments.length) {\n            return _chartFunction;\n        }\n        _chartFunction = chartFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Get or set accessor function for the displayed series. Given a datum, this function\n     * should return the series that datum belongs to.\n     * @method seriesAccessor\n     * @memberof dc.seriesChart\n     * @instance\n     * @example\n     * // simple series accessor\n     * chart.seriesAccessor(function(d) { return \"Expt: \" + d.key[0]; })\n     * @param {Function} [accessor]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.seriesAccessor = function (accessor) {\n        if (!arguments.length) {\n            return _seriesAccessor;\n        }\n        _seriesAccessor = accessor;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * Get or set a function to sort the list of series by, given series values.\n     * @method seriesSort\n     * @memberof dc.seriesChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.seriesSort(d3.descending);\n     * @param {Function} [sortFunction=d3.ascending]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.seriesSort = function (sortFunction) {\n        if (!arguments.length) {\n            return _seriesSort;\n        }\n        _seriesSort = sortFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * Get or set a function to sort each series values by. By default this is the key accessor which,\n     * for example, will ensure a lineChart series connects its points in increasing key/x order,\n     * rather than haphazardly.\n     * @method valueSort\n     * @memberof dc.seriesChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * // Default value sort\n     * _chart.valueSort(function keySort (a, b) {\n     *     return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n     * });\n     * @param {Function} [sortFunction]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.valueSort = function (sortFunction) {\n        if (!arguments.length) {\n            return _valueSort;\n        }\n        _valueSort = sortFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    // make compose private\n    _chart._compose = _chart.compose;\n    delete _chart.compose;\n\n    return _chart;\n};\n\n/**\n * The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map\n * from GeoJson data. This chart implementation was inspired by\n * {@link http://bl.ocks.org/4060606 the great d3 choropleth example}.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\n * @class geoChoroplethChart\n * @memberof dc\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a choropleth chart under '#us-chart' element using the default global chart group\n * var chart1 = dc.geoChoroplethChart('#us-chart');\n * // create a choropleth chart under '#us-chart2' element using chart group A\n * var chart2 = dc.compositeChart('#us-chart2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.geoChoroplethChart}\n */\ndc.geoChoroplethChart = function (parent, chartGroup) {\n    var _chart = dc.colorMixin(dc.baseMixin({}));\n\n    _chart.colorAccessor(function (d) {\n        return d || 0;\n    });\n\n    var _geoPath = d3.geoPath();\n    var _projectionFlag;\n    var _projection;\n\n    var _geoJsons = [];\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            var states = _chart.svg().append('g')\n                .attr('class', 'layer' + layerIndex);\n\n            var regionG = states.selectAll('g.' + geoJson(layerIndex).name)\n                .data(geoJson(layerIndex).data);\n\n            regionG = regionG.enter()\n                    .append('g')\n                    .attr('class', geoJson(layerIndex).name)\n                .merge(regionG);\n\n            regionG\n                .append('path')\n                .attr('fill', 'white')\n                .attr('d', _getGeoPath());\n\n            regionG.append('title');\n\n            plotData(layerIndex);\n        }\n        _projectionFlag = false;\n    };\n\n    function plotData (layerIndex) {\n        var data = generateLayeredData();\n\n        if (isDataLayer(layerIndex)) {\n            var regionG = renderRegionG(layerIndex);\n\n            renderPaths(regionG, layerIndex, data);\n\n            renderTitle(regionG, layerIndex, data);\n        }\n    }\n\n    function generateLayeredData () {\n        var data = {};\n        var groupAll = _chart.data();\n        for (var i = 0; i < groupAll.length; ++i) {\n            data[_chart.keyAccessor()(groupAll[i])] = _chart.valueAccessor()(groupAll[i]);\n        }\n        return data;\n    }\n\n    function isDataLayer (layerIndex) {\n        return geoJson(layerIndex).keyAccessor;\n    }\n\n    function renderRegionG (layerIndex) {\n        var regionG = _chart.svg()\n            .selectAll(layerSelector(layerIndex))\n            .classed('selected', function (d) {\n                return isSelected(layerIndex, d);\n            })\n            .classed('deselected', function (d) {\n                return isDeselected(layerIndex, d);\n            })\n            .attr('class', function (d) {\n                var layerNameClass = geoJson(layerIndex).name;\n                var regionClass = dc.utils.nameToId(geoJson(layerIndex).keyAccessor(d));\n                var baseClasses = layerNameClass + ' ' + regionClass;\n                if (isSelected(layerIndex, d)) {\n                    baseClasses += ' selected';\n                }\n                if (isDeselected(layerIndex, d)) {\n                    baseClasses += ' deselected';\n                }\n                return baseClasses;\n            });\n        return regionG;\n    }\n\n    function layerSelector (layerIndex) {\n        return 'g.layer' + layerIndex + ' g.' + geoJson(layerIndex).name;\n    }\n\n    function isSelected (layerIndex, d) {\n        return _chart.hasFilter() && _chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function isDeselected (layerIndex, d) {\n        return _chart.hasFilter() && !_chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function getKey (layerIndex, d) {\n        return geoJson(layerIndex).keyAccessor(d);\n    }\n\n    function geoJson (index) {\n        return _geoJsons[index];\n    }\n\n    function renderPaths (regionG, layerIndex, data) {\n        var paths = regionG\n            .select('path')\n            .attr('fill', function () {\n                var currentFill = d3.select(this).attr('fill');\n                if (currentFill) {\n                    return currentFill;\n                }\n                return 'none';\n            })\n            .on('click', function (d) {\n                return _chart.onClick(d, layerIndex);\n            });\n\n        dc.transition(paths, _chart.transitionDuration(), _chart.transitionDelay()).attr('fill', function (d, i) {\n            return _chart.getColor(data[geoJson(layerIndex).keyAccessor(d)], i);\n        });\n    }\n\n    _chart.onClick = function (d, layerIndex) {\n        var selectedRegion = geoJson(layerIndex).keyAccessor(d);\n        dc.events.trigger(function () {\n            _chart.filter(selectedRegion);\n            _chart.redrawGroup();\n        });\n    };\n\n    function renderTitle (regionG, layerIndex, data) {\n        if (_chart.renderTitle()) {\n            regionG.selectAll('title').text(function (d) {\n                var key = getKey(layerIndex, d);\n                var value = data[key];\n                return _chart.title()({key: key, value: value});\n            });\n        }\n    }\n\n    _chart._doRedraw = function () {\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            plotData(layerIndex);\n            if (_projectionFlag) {\n                _chart.svg().selectAll('g.' + geoJson(layerIndex).name + ' path').attr('d', _getGeoPath());\n            }\n        }\n        _projectionFlag = false;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Use this function to insert a new GeoJson map layer. This function can be invoked multiple times\n     * if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple\n     * layers with the same name the new overlay will override the existing one.\n     * @method overlayGeoJson\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link http://geojson.org/ GeoJSON}\n     * @see {@link https://github.com/topojson/topojson/wiki TopoJSON}\n     * @see {@link https://github.com/topojson/topojson-1.x-api-reference/blob/master/API-Reference.md#wiki-feature topojson.feature}\n     * @example\n     * // insert a layer for rendering US states\n     * chart.overlayGeoJson(statesJson.features, 'state', function(d) {\n     *      return d.properties.name;\n     * });\n     * @param {geoJson} json - a geojson feed\n     * @param {String} name - name of the layer\n     * @param {Function} keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by\n     * this function should match the keys returned by the crossfilter groups.\n     * @returns {dc.geoChoroplethChart}\n     */\n    _chart.overlayGeoJson = function (json, name, keyAccessor) {\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            if (_geoJsons[i].name === name) {\n                _geoJsons[i].data = json;\n                _geoJsons[i].keyAccessor = keyAccessor;\n                return _chart;\n            }\n        }\n        _geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});\n        return _chart;\n    };\n\n    /**\n     * Gets or sets a custom geo projection function. See the available\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3 geo projection functions}.\n     *\n     * Starting version 3.0 it has been deprecated to rely on the default projection being\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#geoAlbersUsa d3.geoAlbersUsa()}. Please\n     * set it explicitly. {@link https://bl.ocks.org/mbostock/5557726\n     * Considering that `null` is also a valid value for projection}, if you need\n     * projection to be `null` please set it explicitly to `null`.\n     * @method projection\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3.projection}\n     * @see {@link https://github.com/d3/d3-geo-projection d3-geo-projection}\n     * @param {d3.projection} [projection=d3.geoAlbersUsa()]\n     * @returns {d3.projection|dc.geoChoroplethChart}\n     */\n    _chart.projection = function (projection) {\n        if (!arguments.length) {\n            return _projection;\n        }\n\n        _projection = projection;\n        _projectionFlag = true;\n        return _chart;\n    };\n\n    var _getGeoPath = function () {\n        if (_projection === undefined) {\n            dc.logger.warn('choropleth projection default of geoAlbers is deprecated,' +\n                ' in next version projection will need to be set explicitly');\n            return _geoPath.projection(d3.geoAlbersUsa());\n        }\n\n        return _geoPath.projection(_projection);\n    };\n\n    /**\n     * Returns all GeoJson layers currently registered with this chart. The returned array is a\n     * reference to this chart's internal data structure, so any modification to this array will also\n     * modify this chart's internal registration.\n     * @method geoJsons\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @returns {Array<{name:String, data: Object, accessor: Function}>}\n     */\n    _chart.geoJsons = function () {\n        return _geoJsons;\n    };\n\n    /**\n     * Returns the {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath} object used to\n     * render the projection and features.  Can be useful for figuring out the bounding box of the\n     * feature set and thus a way to calculate scale and translation for the projection.\n     * @method geoPath\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath}\n     * @returns {d3.geoPath}\n     */\n    _chart.geoPath = function () {\n        return _geoPath;\n    };\n\n    /**\n     * Remove a GeoJson layer from this chart by name\n     * @method removeGeoJson\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @param {String} name\n     * @returns {dc.geoChoroplethChart}\n     */\n    _chart.removeGeoJson = function (name) {\n        var geoJsons = [];\n\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            var layer = _geoJsons[i];\n            if (layer.name !== name) {\n                geoJsons.push(layer);\n            }\n        }\n\n        _geoJsons = geoJsons;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay\n * chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the\n * typical x and y positioning while retaining the capability to visualize data using bubble radius\n * and coloring.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class bubbleOverlay\n * @memberof dc\n * @mixes dc.bubbleMixin\n * @mixes dc.baseMixin\n * @example\n * // create a bubble overlay chart on top of the '#chart-container1 svg' element using the default global chart group\n * var bubbleChart1 = dc.bubbleOverlayChart('#chart-container1').svg(d3.select('#chart-container1 svg'));\n * // create a bubble overlay chart on top of the '#chart-container2 svg' element using chart group A\n * var bubbleChart2 = dc.compositeChart('#chart-container2', 'chartGroupA').svg(d3.select('#chart-container2 svg'));\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.bubbleOverlay}\n */\ndc.bubbleOverlay = function (parent, chartGroup) {\n    var BUBBLE_OVERLAY_CLASS = 'bubble-overlay';\n    var BUBBLE_NODE_CLASS = 'node';\n    var BUBBLE_CLASS = 'bubble';\n\n    /**\n     * **mandatory**\n     *\n     * Set the underlying svg image element. Unlike other dc charts this chart will not generate a svg\n     * element; therefore the bubble overlay chart will not work if this function is not invoked. If the\n     * underlying image is a bitmap, then an empty svg will need to be created on top of the image.\n     * @method svg\n     * @memberof dc.bubbleOverlay\n     * @instance\n     * @example\n     * // set up underlying svg element\n     * chart.svg(d3.select('#chart svg'));\n     * @param {SVGElement|d3.selection} [imageElement]\n     * @returns {dc.bubbleOverlay}\n     */\n    var _chart = dc.bubbleMixin(dc.baseMixin({}));\n    var _g;\n    var _points = [];\n\n    _chart.transitionDuration(750);\n\n    _chart.transitionDelay(0);\n\n    _chart.radiusValueAccessor(function (d) {\n        return d.value;\n    });\n\n    /**\n     * **mandatory**\n     *\n     * Set up a data point on the overlay. The name of a data point should match a specific 'key' among\n     * data groups generated using keyAccessor.  If a match is found (point name <-> data group key)\n     * then a bubble will be generated at the position specified by the function. x and y\n     * value specified here are relative to the underlying svg.\n     * @method point\n     * @memberof dc.bubbleOverlay\n     * @instance\n     * @param {String} name\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {dc.bubbleOverlay}\n     */\n    _chart.point = function (name, x, y) {\n        _points.push({name: name, x: x, y: y});\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        _g = initOverlayG();\n\n        _chart.r().range([_chart.MIN_RADIUS, _chart.width() * _chart.maxBubbleRelativeSize()]);\n\n        initializeBubbles();\n\n        _chart.fadeDeselectedArea(_chart.filter());\n\n        return _chart;\n    };\n\n    function initOverlayG () {\n        _g = _chart.select('g.' + BUBBLE_OVERLAY_CLASS);\n        if (_g.empty()) {\n            _g = _chart.svg().append('g').attr('class', BUBBLE_OVERLAY_CLASS);\n        }\n        return _g;\n    }\n\n    function initializeBubbles () {\n        var data = mapData();\n        _chart.calculateRadiusDomain();\n\n        _points.forEach(function (point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\n\n            if (circle.empty()) {\n                circle = nodeG.append('circle')\n                    .attr('class', BUBBLE_CLASS)\n                    .attr('r', 0)\n                    .attr('fill', _chart.getColor)\n                    .on('click', _chart.onClick);\n            }\n\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('r', function (d) {\n                    return _chart.bubbleR(d);\n                });\n\n            _chart._doRenderLabel(nodeG);\n\n            _chart._doRenderTitles(nodeG);\n        });\n    }\n\n    function mapData () {\n        var data = {};\n        _chart.data().forEach(function (datum) {\n            data[_chart.keyAccessor()(datum)] = datum;\n        });\n        return data;\n    }\n\n    function getNodeG (point, data) {\n        var bubbleNodeClass = BUBBLE_NODE_CLASS + ' ' + dc.utils.nameToId(point.name);\n\n        var nodeG = _g.select('g.' + dc.utils.nameToId(point.name));\n\n        if (nodeG.empty()) {\n            nodeG = _g.append('g')\n                .attr('class', bubbleNodeClass)\n                .attr('transform', 'translate(' + point.x + ',' + point.y + ')');\n        }\n\n        nodeG.datum(data[point.name]);\n\n        return nodeG;\n    }\n\n    _chart._doRedraw = function () {\n        updateBubbles();\n\n        _chart.fadeDeselectedArea(_chart.filter());\n\n        return _chart;\n    };\n\n    function updateBubbles () {\n        var data = mapData();\n        _chart.calculateRadiusDomain();\n\n        _points.forEach(function (point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\n\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('r', function (d) {\n                    return _chart.bubbleR(d);\n                })\n                .attr('fill', _chart.getColor);\n\n            _chart.doUpdateLabels(nodeG);\n\n            _chart.doUpdateTitles(nodeG);\n        });\n    }\n\n    _chart.debug = function (flag) {\n        if (flag) {\n            var debugG = _chart.select('g.' + dc.constants.DEBUG_GROUP_CLASS);\n\n            if (debugG.empty()) {\n                debugG = _chart.svg()\n                    .append('g')\n                    .attr('class', dc.constants.DEBUG_GROUP_CLASS);\n            }\n\n            var debugText = debugG.append('text')\n                .attr('x', 10)\n                .attr('y', 20);\n\n            debugG\n                .append('rect')\n                .attr('width', _chart.width())\n                .attr('height', _chart.height())\n                .on('mousemove', function () {\n                    var position = d3.mouse(debugG.node());\n                    var msg = position[0] + ', ' + position[1];\n                    debugText.text(msg);\n                });\n        } else {\n            _chart.selectAll('.debug').remove();\n        }\n\n        return _chart;\n    };\n\n    _chart.anchor(parent, chartGroup);\n\n    return _chart;\n};\n\n/**\n * Concrete row chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class rowChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.marginMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a row chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.rowChart('#chart-container1');\n * // create a row chart under #chart-container2 element using chart group A\n * var chart2 = dc.rowChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.rowChart}\n */\ndc.rowChart = function (parent, chartGroup) {\n\n    var _g;\n\n    var _labelOffsetX = 10;\n    var _labelOffsetY = 15;\n    var _hasLabelOffsetY = false;\n    var _dyOffset = '0.35em';  // this helps center labels https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#svg_text\n    var _titleLabelOffsetX = 2;\n\n    var _gap = 5;\n\n    var _fixedBarHeight = false;\n    var _rowCssClass = 'row';\n    var _titleRowCssClass = 'titlerow';\n    var _renderTitleLabel = false;\n\n    var _chart = dc.capMixin(dc.marginMixin(dc.colorMixin(dc.baseMixin({}))));\n\n    var _x;\n\n    var _elasticX;\n\n    var _xAxis = d3.axisBottom();\n\n    var _rowData;\n\n    _chart.rowsCap = _chart.cap;\n\n    function calculateAxisScale () {\n        if (!_x || _elasticX) {\n            var extent = d3.extent(_rowData, _chart.cappedValueAccessor);\n            if (extent[0] > 0) {\n                extent[0] = 0;\n            }\n            if (extent[1] < 0) {\n                extent[1] = 0;\n            }\n            _x = d3.scaleLinear().domain(extent)\n                .range([0, _chart.effectiveWidth()]);\n        }\n        _xAxis.scale(_x);\n    }\n\n    function drawAxis () {\n        var axisG = _g.select('g.axis');\n\n        calculateAxisScale();\n\n        if (axisG.empty()) {\n            axisG = _g.append('g').attr('class', 'axis');\n        }\n        axisG.attr('transform', 'translate(0, ' + _chart.effectiveHeight() + ')');\n\n        dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\n            .call(_xAxis);\n    }\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n        drawChart();\n\n        return _chart;\n    };\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    _chart.label(_chart.cappedKeyAccessor);\n\n    /**\n     * Gets or sets the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}.\n     * @method x\n     * @memberof dc.rowChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [scale]\n     * @returns {d3.scale|dc.rowChart}\n     */\n    _chart.x = function (scale) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = scale;\n        return _chart;\n    };\n\n    function drawGridLines () {\n        _g.selectAll('g.tick')\n            .select('line.grid-line')\n            .remove();\n\n        _g.selectAll('g.tick')\n            .append('line')\n            .attr('class', 'grid-line')\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', 0)\n            .attr('y2', function () {\n                return -_chart.effectiveHeight();\n            });\n    }\n\n    function drawChart () {\n        _rowData = _chart.data();\n\n        drawAxis();\n        drawGridLines();\n\n        var rows = _g.selectAll('g.' + _rowCssClass)\n            .data(_rowData);\n\n        removeElements(rows);\n        rows = createElements(rows)\n            .merge(rows);\n        updateElements(rows);\n    }\n\n    function createElements (rows) {\n        var rowEnter = rows.enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _rowCssClass + ' _' + i;\n            });\n\n        rowEnter.append('rect').attr('width', 0);\n\n        createLabels(rowEnter);\n\n        return rowEnter;\n    }\n\n    function removeElements (rows) {\n        rows.exit().remove();\n    }\n\n    function rootValue () {\n        var root = _x(0);\n        return (root === -Infinity || root !== root) ? _x(1) : root;\n    }\n\n    function updateElements (rows) {\n        var n = _rowData.length;\n\n        var height;\n        if (!_fixedBarHeight) {\n            height = (_chart.effectiveHeight() - (n + 1) * _gap) / n;\n        } else {\n            height = _fixedBarHeight;\n        }\n\n        // vertically align label in center unless they override the value via property setter\n        if (!_hasLabelOffsetY) {\n            _labelOffsetY = height / 2;\n        }\n\n        var rect = rows.attr('transform', function (d, i) {\n                return 'translate(0,' + ((i + 1) * _gap + i * height) + ')';\n            }).select('rect')\n            .attr('height', height)\n            .attr('fill', _chart.getColor)\n            .on('click', onClick)\n            .classed('deselected', function (d) {\n                return (_chart.hasFilter()) ? !isSelectedRow(d) : false;\n            })\n            .classed('selected', function (d) {\n                return (_chart.hasFilter()) ? isSelectedRow(d) : false;\n            });\n\n        dc.transition(rect, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('width', function (d) {\n                return Math.abs(rootValue() - _x(_chart.valueAccessor()(d)));\n            })\n            .attr('transform', translateX);\n\n        createTitles(rows);\n        updateLabels(rows);\n    }\n\n    function createTitles (rows) {\n        if (_chart.renderTitle()) {\n            rows.select('title').remove();\n            rows.append('title').text(_chart.title());\n        }\n    }\n\n    function createLabels (rowEnter) {\n        if (_chart.renderLabel()) {\n            rowEnter.append('text')\n                .on('click', onClick);\n        }\n        if (_chart.renderTitleLabel()) {\n            rowEnter.append('text')\n                .attr('class', _titleRowCssClass)\n                .on('click', onClick);\n        }\n    }\n\n    function updateLabels (rows) {\n        if (_chart.renderLabel()) {\n            var lab = rows.select('text')\n                .attr('x', _labelOffsetX)\n                .attr('y', _labelOffsetY)\n                .attr('dy', _dyOffset)\n                .on('click', onClick)\n                .attr('class', function (d, i) {\n                    return _rowCssClass + ' _' + i;\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n            dc.transition(lab, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', translateX);\n        }\n        if (_chart.renderTitleLabel()) {\n            var titlelab = rows.select('.' + _titleRowCssClass)\n                    .attr('x', _chart.effectiveWidth() - _titleLabelOffsetX)\n                    .attr('y', _labelOffsetY)\n                    .attr('dy', _dyOffset)\n                    .attr('text-anchor', 'end')\n                    .on('click', onClick)\n                    .attr('class', function (d, i) {\n                        return _titleRowCssClass + ' _' + i ;\n                    })\n                    .text(function (d) {\n                        return _chart.title()(d);\n                    });\n            dc.transition(titlelab, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', translateX);\n        }\n    }\n\n    /**\n     * Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'.\n     * @method renderTitleLabel\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Boolean} [renderTitleLabel=false]\n     * @returns {Boolean|dc.rowChart}\n     */\n    _chart.renderTitleLabel = function (renderTitleLabel) {\n        if (!arguments.length) {\n            return _renderTitleLabel;\n        }\n        _renderTitleLabel = renderTitleLabel;\n        return _chart;\n    };\n\n    function onClick (d) {\n        _chart.onClick(d);\n    }\n\n    function translateX (d) {\n        var x = _x(_chart.cappedValueAccessor(d)),\n            x0 = rootValue(),\n            s = x > x0 ? x0 : x;\n        return 'translate(' + s + ',0)';\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n     * Get or sets the x axis for the row chart instance.\n     * See the {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\n     * documention for more information.\n     * @method xAxis\n     * @memberof dc.rowChart\n     * @instance\n     * @example\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function (v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * // use a top-oriented axis. Note: position of the axis and grid lines will need to\n     * // be set manually, see https://dc-js.github.io/dc.js/examples/row-top-axis.html\n     * chart.xAxis(d3.axisTop())\n     * @returns {d3.axis}\n     */\n    _chart.xAxis = function (xAxis) {\n        if (!arguments.length) {\n            return _xAxis;\n        }\n        _xAxis = xAxis;\n        return this;\n    };\n\n    /**\n     * Get or set the fixed bar height. Default is [false] which will auto-scale bars.\n     * For example, if you want to fix the height for a specific number of bars (useful in TopN charts)\n     * you could fix height as follows (where count = total number of bars in your TopN and gap is\n     * your vertical gap space).\n     * @method fixedBarHeight\n     * @memberof dc.rowChart\n     * @instance\n     * @example\n     * chart.fixedBarHeight( chartheight - (count + 1) * gap / count);\n     * @param {Boolean|Number} [fixedBarHeight=false]\n     * @returns {Boolean|Number|dc.rowChart}\n     */\n    _chart.fixedBarHeight = function (fixedBarHeight) {\n        if (!arguments.length) {\n            return _fixedBarHeight;\n        }\n        _fixedBarHeight = fixedBarHeight;\n        return _chart;\n    };\n\n    /**\n     * Get or set the vertical gap space between rows on a particular row chart instance.\n     * @method gap\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [gap=5]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _chart;\n    };\n\n    /**\n     * Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescle to auto-fit the\n     * data range when filtered.\n     * @method elasticX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Boolean} [elasticX]\n     * @returns {Boolean|dc.rowChart}\n     */\n    _chart.elasticX = function (elasticX) {\n        if (!arguments.length) {\n            return _elasticX;\n        }\n        _elasticX = elasticX;\n        return _chart;\n    };\n\n    /**\n     * Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart.\n     * @method labelOffsetX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [labelOffsetX=10]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.labelOffsetX = function (labelOffsetX) {\n        if (!arguments.length) {\n            return _labelOffsetX;\n        }\n        _labelOffsetX = labelOffsetX;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart.\n     * @method labelOffsetY\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [labelOffsety=15]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.labelOffsetY = function (labelOffsety) {\n        if (!arguments.length) {\n            return _labelOffsetY;\n        }\n        _labelOffsetY = labelOffsety;\n        _hasLabelOffsetY = true;\n        return _chart;\n    };\n\n    /**\n     * Get of set the x offset (horizontal space between right edge of row and right edge or text.\n     * @method titleLabelOffsetX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [titleLabelOffsetX=2]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.titleLabelOffsetX = function (titleLabelOffsetX) {\n        if (!arguments.length) {\n            return _titleLabelOffsetX;\n        }\n        _titleLabelOffsetX = titleLabelOffsetX;\n        return _chart;\n    };\n\n    function isSelectedRow (d) {\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d));\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Legend is a attachable widget that can be added to other dc charts to render horizontal legend\n * labels.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class legend\n * @memberof dc\n * @example\n * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n * @returns {dc.legend}\n */\ndc.legend = function () {\n    var LABEL_GAP = 2;\n\n    var _legend = {},\n        _parent,\n        _x = 0,\n        _y = 0,\n        _itemHeight = 12,\n        _gap = 5,\n        _horizontal = false,\n        _legendWidth = 560,\n        _itemWidth = 70,\n        _autoItemWidth = false,\n        _legendText = dc.pluck('name'),\n        _maxItems;\n\n    var _g;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) {\n            return _parent;\n        }\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        _parent.svg().select('g.dc-legend').remove();\n        _g = _parent.svg().append('g')\n            .attr('class', 'dc-legend')\n            .attr('transform', 'translate(' + _x + ',' + _y + ')');\n        var legendables = _parent.legendables();\n\n        if (_maxItems !== undefined) {\n            legendables = legendables.slice(0, _maxItems);\n        }\n\n        var itemEnter = _g.selectAll('g.dc-legend-item')\n            .data(legendables)\n            .enter()\n            .append('g')\n            .attr('class', 'dc-legend-item')\n            .on('mouseover', function (d) {\n                _parent.legendHighlight(d);\n            })\n            .on('mouseout', function (d) {\n                _parent.legendReset(d);\n            })\n            .on('click', function (d) {\n                d.chart.legendToggle(d);\n            });\n\n        _g.selectAll('g.dc-legend-item')\n            .classed('fadeout', function (d) {\n                return d.chart.isLegendableHidden(d);\n            });\n\n        if (legendables.some(dc.pluck('dashstyle'))) {\n            itemEnter\n                .append('line')\n                .attr('x1', 0)\n                .attr('y1', _itemHeight / 2)\n                .attr('x2', _itemHeight)\n                .attr('y2', _itemHeight / 2)\n                .attr('stroke-width', 2)\n                .attr('stroke-dasharray', dc.pluck('dashstyle'))\n                .attr('stroke', dc.pluck('color'));\n        } else {\n            itemEnter\n                .append('rect')\n                .attr('width', _itemHeight)\n                .attr('height', _itemHeight)\n                .attr('fill', function (d) {return d ? d.color : 'blue';});\n        }\n\n        itemEnter.append('text')\n                .text(_legendText)\n                .attr('x', _itemHeight + LABEL_GAP)\n                .attr('y', function () {\n                    return _itemHeight / 2 + (this.clientHeight ? this.clientHeight : 13) / 2 - 2;\n                });\n\n        var _cumulativeLegendTextWidth = 0;\n        var row = 0;\n        itemEnter.attr('transform', function (d, i) {\n            if (_horizontal) {\n                var itemWidth   = _autoItemWidth === true ? this.getBBox().width + _gap : _itemWidth;\n                if ((_cumulativeLegendTextWidth + itemWidth) > _legendWidth && _cumulativeLegendTextWidth > 0) {\n                    ++row;\n                    _cumulativeLegendTextWidth = 0;\n                }\n                var translateBy = 'translate(' + _cumulativeLegendTextWidth + ',' + row * legendItemHeight() + ')';\n                _cumulativeLegendTextWidth += itemWidth;\n                return translateBy;\n            } else {\n                return 'translate(0,' + i * legendItemHeight() + ')';\n            }\n        });\n    };\n\n    function legendItemHeight () {\n        return _gap + _itemHeight;\n    }\n\n    /**\n     * Set or get x coordinate for legend widget.\n     * @method x\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [x=0]\n     * @returns {Number|dc.legend}\n     */\n    _legend.x = function (x) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = x;\n        return _legend;\n    };\n\n    /**\n     * Set or get y coordinate for legend widget.\n     * @method y\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [y=0]\n     * @returns {Number|dc.legend}\n     */\n    _legend.y = function (y) {\n        if (!arguments.length) {\n            return _y;\n        }\n        _y = y;\n        return _legend;\n    };\n\n    /**\n     * Set or get gap between legend items.\n     * @method gap\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [gap=5]\n     * @returns {Number|dc.legend}\n     */\n    _legend.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _legend;\n    };\n\n    /**\n     * Set or get legend item height.\n     * @method itemHeight\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [itemHeight=12]\n     * @returns {Number|dc.legend}\n     */\n    _legend.itemHeight = function (itemHeight) {\n        if (!arguments.length) {\n            return _itemHeight;\n        }\n        _itemHeight = itemHeight;\n        return _legend;\n    };\n\n    /**\n     * Position legend horizontally instead of vertically.\n     * @method horizontal\n     * @memberof dc.legend\n     * @instance\n     * @param  {Boolean} [horizontal=false]\n     * @returns {Boolean|dc.legend}\n     */\n    _legend.horizontal = function (horizontal) {\n        if (!arguments.length) {\n            return _horizontal;\n        }\n        _horizontal = horizontal;\n        return _legend;\n    };\n\n    /**\n     * Maximum width for horizontal legend.\n     * @method legendWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [legendWidth=500]\n     * @returns {Number|dc.legend}\n     */\n    _legend.legendWidth = function (legendWidth) {\n        if (!arguments.length) {\n            return _legendWidth;\n        }\n        _legendWidth = legendWidth;\n        return _legend;\n    };\n\n    /**\n     * Legend item width for horizontal legend.\n     * @method itemWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [itemWidth=70]\n     * @returns {Number|dc.legend}\n     */\n    _legend.itemWidth = function (itemWidth) {\n        if (!arguments.length) {\n            return _itemWidth;\n        }\n        _itemWidth = itemWidth;\n        return _legend;\n    };\n\n    /**\n     * Turn automatic width for legend items on or off. If true, {@link dc.legend#itemWidth itemWidth} is ignored.\n     * This setting takes into account the {@link dc.legend#gap gap}.\n     * @method autoItemWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Boolean} [autoItemWidth=false]\n     * @returns {Boolean|dc.legend}\n     */\n    _legend.autoItemWidth = function (autoItemWidth) {\n        if (!arguments.length) {\n            return _autoItemWidth;\n        }\n        _autoItemWidth = autoItemWidth;\n        return _legend;\n    };\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     * @method legendText\n     * @memberof dc.legend\n     * @instance\n     * @param  {Function} [legendText]\n     * @returns {Function|dc.legend}\n     * @example\n     * // default legendText\n     * legend.legendText(dc.pluck('name'))\n     *\n     * // create numbered legend items\n     * chart.legend(dc.legend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(dc.legend().legendText(function(d) { return d.name + ': ' d.data; }))\n     **/\n    _legend.legendText = function (legendText) {\n        if (!arguments.length) {\n            return _legendText;\n        }\n        _legendText = legendText;\n        return _legend;\n    };\n\n    /**\n     * Maximum number of legend items to display\n     * @method maxItems\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [maxItems]\n     * @return {dc.legend}\n     */\n    _legend.maxItems = function (maxItems) {\n        if (!arguments.length) {\n            return _maxItems;\n        }\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\n        return _legend;\n    };\n\n    return _legend;\n};\n\n/**\n * htmlLegend is a attachable widget that can be added to other dc charts to render horizontal/vertical legend\n * labels.\n *\n * @class htmlLegend\n * @memberof dc\n * @example\n * chart.legend(dc.htmlLegend().container(legendContainerElement).horizontal(false))\n * @returns {dc.htmlLegend}\n */\ndc.htmlLegend = function () {\n    var _legend = {},\n        _htmlLegendDivCssClass = 'dc-html-legend',\n        _legendItemCssClassHorizontal = 'dc-legend-item-horizontal',\n        _legendItemCssClassVertical = 'dc-legend-item-vertical',\n        _parent,\n        _container,\n        _legendText = dc.pluck('name'),\n        _maxItems,\n        _horizontal = false,\n        _legendItemClass,\n        _highlightSelected = false;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) {\n            return _parent;\n        }\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        var _defaultLegendItemCssClass = _horizontal ?  _legendItemCssClassHorizontal : _legendItemCssClassVertical;\n        _container.select('div.dc-html-legend').remove();\n\n        var _l = _container.append('div').attr('class', _htmlLegendDivCssClass);\n        _l.attr('style', 'max-width:' + _container.nodes()[0].style.width);\n\n        var legendables = _parent.legendables();\n        var filters = _parent.filters();\n\n        if (_maxItems !== undefined) {\n            legendables = legendables.slice(0, _maxItems);\n        }\n\n        var legendItemClassName = _legendItemClass ? _legendItemClass : _defaultLegendItemCssClass;\n\n        var itemEnter = _l.selectAll('div.' + legendItemClassName)\n            .data(legendables).enter()\n            .append('div')\n            .classed(legendItemClassName, true)\n            .on('mouseover', _parent.legendHighlight)\n            .on('mouseout', _parent.legendReset)\n            .on('click', _parent.legendToggle);\n\n        if (_highlightSelected) {\n            itemEnter.classed(dc.constants.SELECTED_CLASS, function (d) {\n                return filters.indexOf(d.name) !== -1;\n            });\n        }\n\n        itemEnter.append('span')\n            .attr('class', 'dc-legend-item-color')\n            .style('background-color', dc.pluck('color'));\n\n        itemEnter.append('span')\n            .attr('class', 'dc-legend-item-label')\n            .attr('title', _legendText)\n            .text(_legendText);\n    };\n\n    /**\n     #### .container([selector])\n     Set the container selector for the legend widget. Required.\n     **/\n    _legend.container = function (c) {\n        if (!arguments.length) {\n            return _container;\n        }\n        _container = d3.select(c);\n        return _legend;\n    };\n\n    /**\n     #### .legendItemClass([selector])\n     This can be optionally used to override class for legenditem and just use this class style.\n     The reason to have this is so this can be done for a particular chart rather than overriding the style for all charts\n     Setting this will disable the highlighting of selected items also.\n     **/\n    _legend.legendItemClass = function (c) {\n        if (!arguments.length) {\n            return _legendItemClass;\n        }\n        _legendItemClass = c;\n        return _legend;\n    };\n\n    /**\n     #### .highlightSelected([boolean])\n     This can be optionally used to enable highlighting legends for the selections/filters for the chart.\n     **/\n    _legend.highlightSelected = function (c) {\n        if (!arguments.length) {\n            return _highlightSelected;\n        }\n        _highlightSelected = c;\n        return _legend;\n    };\n\n    /**\n     #### .horizontal([boolean])\n     Display the legend horizontally instead of horizontally\n     **/\n    _legend.horizontal = function (b) {\n        if (!arguments.length) {\n            return _horizontal;\n        }\n        _horizontal = b;\n        return _legend;\n    };\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     * @method legendText\n     * @memberof dc.htmlLegend\n     * @instance\n     * @param  {Function} [legendText]\n     * @returns {Function|dc.htmlLegend}\n     * @example\n     * // default legendText\n     * legend.legendText(dc.pluck('name'))\n     *\n     * // create numbered legend items\n     * chart.legend(dc.htmlLegend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(dc.htmlLegend().legendText(function(d) { return d.name + ': ' d.data; }))\n     **/\n    _legend.legendText = function (legendText) {\n        if (!arguments.length) {\n            return _legendText;\n        }\n        _legendText = legendText;\n        return _legend;\n    };\n\n    /**\n     * Maximum number of legend items to display\n     * @method maxItems\n     * @memberof dc.htmlLegend\n     * @instance\n     * @param  {Number} [maxItems]\n     * @return {dc.htmlLegend}\n     */\n    _legend.maxItems = function (maxItems) {\n        if (!arguments.length) {\n            return _maxItems;\n        }\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\n        return _legend;\n    };\n\n    return _legend;\n};\n\n\n/**\n * A scatter plot chart\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/scatter.html Scatter Chart}\n * - {@link http://dc-js.github.io/dc.js/examples/multi-scatter.html Multi-Scatter Chart}\n * @class scatterPlot\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a scatter plot under #chart-container1 element using the default global chart group\n * var chart1 = dc.scatterPlot('#chart-container1');\n * // create a scatter plot under #chart-container2 element using chart group A\n * var chart2 = dc.scatterPlot('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.scatterPlot(compositeChart);\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.scatterPlot}\n */\ndc.scatterPlot = function (parent, chartGroup) {\n    var _chart = dc.coordinateGridMixin({});\n    var _symbol = d3.symbol();\n\n    var _existenceAccessor = function (d) { return d.value; };\n\n    var originalKeyAccessor = _chart.keyAccessor();\n    _chart.keyAccessor(function (d) { return originalKeyAccessor(d)[0]; });\n    _chart.valueAccessor(function (d) { return originalKeyAccessor(d)[1]; });\n    _chart.colorAccessor(function () { return _chart._groupName; });\n\n    _chart.title(function (d) {\n        // this basically just counteracts the setting of its own key/value accessors\n        // see https://github.com/dc-js/dc.js/issues/702\n        return _chart.keyAccessor()(d) + ',' + _chart.valueAccessor()(d) + ': ' +\n            _chart.existenceAccessor()(d);\n    });\n\n    var _locator = function (d) {\n        return 'translate(' + _chart.x()(_chart.keyAccessor()(d)) + ',' +\n                              _chart.y()(_chart.valueAccessor()(d)) + ')';\n    };\n\n    var _highlightedSize = 7;\n    var _symbolSize = 5;\n    var _excludedSize = 3;\n    var _excludedColor = null;\n    var _excludedOpacity = 1.0;\n    var _emptySize = 0;\n    var _emptyOpacity = 0;\n    var _nonemptyOpacity = 1;\n    var _emptyColor = null;\n    var _filtered = [];\n\n    // Use a 2 dimensional brush\n    _chart.brush(d3.brush());\n\n    function elementSize (d, i) {\n        if (!_existenceAccessor(d)) {\n            return Math.pow(_emptySize, 2);\n        } else if (_filtered[i]) {\n            return Math.pow(_symbolSize, 2);\n        } else {\n            return Math.pow(_excludedSize, 2);\n        }\n    }\n    _symbol.size(elementSize);\n\n    dc.override(_chart, '_filter', function (filter) {\n        if (!arguments.length) {\n            return _chart.__filter();\n        }\n\n        return _chart.__filter(dc.filters.RangedTwoDimensionalFilter(filter));\n    });\n\n    _chart.plotData = function () {\n        var symbols = _chart.chartBodyG().selectAll('path.symbol')\n            .data(_chart.data());\n\n        dc.transition(symbols.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('opacity', 0).remove();\n\n        symbols = symbols\n            .enter()\n                .append('path')\n                .attr('class', 'symbol')\n                .attr('opacity', 0)\n                .attr('fill', _chart.getColor)\n                .attr('transform', _locator)\n            .merge(symbols);\n\n        symbols.call(renderTitles, _chart.data());\n\n        symbols.each(function (d, i) {\n            _filtered[i] = !_chart.filter() || _chart.filter().isFiltered([_chart.keyAccessor()(d), _chart.valueAccessor()(d)]);\n        });\n\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('opacity', function (d, i) {\n                if (!_existenceAccessor(d)) {\n                    return _emptyOpacity;\n                } else if (_filtered[i]) {\n                    return _nonemptyOpacity;\n                } else {\n                    return _chart.excludedOpacity();\n                }\n            })\n            .attr('fill', function (d, i) {\n                if (_emptyColor && !_existenceAccessor(d)) {\n                    return _emptyColor;\n                } else if (_chart.excludedColor() && !_filtered[i]) {\n                    return _chart.excludedColor();\n                } else {\n                    return _chart.getColor(d);\n                }\n            })\n            .attr('transform', _locator)\n            .attr('d', _symbol);\n    };\n\n    function renderTitles (symbol, d) {\n        if (_chart.renderTitle()) {\n            symbol.selectAll('title').remove();\n            symbol.append('title').text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    /**\n     * Get or set the existence accessor.  If a point exists, it is drawn with\n     * {@link dc.scatterPlot#symbolSize symbolSize} radius and\n     * opacity 1; if it does not exist, it is drawn with\n     * {@link dc.scatterPlot#emptySize emptySize} radius and opacity 0. By default,\n     * the existence accessor checks if the reduced value is truthy.\n     * @method existenceAccessor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link dc.scatterPlot#symbolSize symbolSize}\n     * @see {@link dc.scatterPlot#emptySize emptySize}\n     * @example\n     * // default accessor\n     * chart.existenceAccessor(function (d) { return d.value; });\n     * @param {Function} [accessor]\n     * @returns {Function|dc.scatterPlot}\n     */\n    _chart.existenceAccessor = function (accessor) {\n        if (!arguments.length) {\n            return _existenceAccessor;\n        }\n        _existenceAccessor = accessor;\n        return this;\n    };\n\n    /**\n     * Get or set the symbol type used for each point. By default the symbol is a circle (d3.symbolCircle).\n     * Type can be a constant or an accessor.\n     * @method symbol\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_type symbol.type}\n     * @example\n     * // Circle type\n     * chart.symbol(d3.symbolCircle);\n     * // Square type\n     * chart.symbol(d3.symbolSquare);\n     * @param {Function} [type=d3.symbolCircle]\n     * @returns {Function|dc.scatterPlot}\n     */\n    _chart.symbol = function (type) {\n        if (!arguments.length) {\n            return _symbol.type();\n        }\n        _symbol.type(type);\n        return _chart;\n    };\n\n    /**\n     * Get or set the symbol generator. By default `dc.scatterPlot` will use\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol()}\n     * to generate symbols. `dc.scatterPlot` will set the\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size symbol size accessor}\n     * on the symbol generator.\n     * @method customSymbol\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol}\n     * @see {@link https://stackoverflow.com/questions/25332120/create-additional-d3-js-symbols Create additional D3.js symbols}\n     * @param {String|Function} [customSymbol=d3.symbol()]\n     * @returns {String|Function|dc.scatterPlot}\n     */\n    _chart.customSymbol = function (customSymbol) {\n        if (!arguments.length) {\n            return _symbol;\n        }\n        _symbol = customSymbol;\n        _symbol.size(elementSize);\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for symbols.\n     * @method symbolSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [symbolSize=3]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.symbolSize = function (symbolSize) {\n        if (!arguments.length) {\n            return _symbolSize;\n        }\n        _symbolSize = symbolSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for highlighted symbols.\n     * @method highlightedSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [highlightedSize=5]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.highlightedSize = function (highlightedSize) {\n        if (!arguments.length) {\n            return _highlightedSize;\n        }\n        _highlightedSize = highlightedSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get size for symbols excluded from this chart's filter. If null, no\n     * special size is applied for symbols based on their filter status.\n     * @method excludedSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [excludedSize=null]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedSize = function (excludedSize) {\n        if (!arguments.length) {\n            return _excludedSize;\n        }\n        _excludedSize = excludedSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get color for symbols excluded from this chart's filter. If null, no\n     * special color is applied for symbols based on their filter status.\n     * @method excludedColor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [excludedColor=null]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedColor = function (excludedColor) {\n        if (!arguments.length) {\n            return _excludedColor;\n        }\n        _excludedColor = excludedColor;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols excluded from this chart's filter.\n     * @method excludedOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [excludedOpacity=1.0]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedOpacity = function (excludedOpacity) {\n        if (!arguments.length) {\n            return _excludedOpacity;\n        }\n        _excludedOpacity = excludedOpacity;\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for symbols when the group is empty.\n     * @method emptySize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [emptySize=0]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.hiddenSize = _chart.emptySize = function (emptySize) {\n        if (!arguments.length) {\n            return _emptySize;\n        }\n        _emptySize = emptySize;\n        return _chart;\n    };\n\n    /**\n     * Set or get color for symbols when the group is empty. If null, just use the\n     * {@link dc.colorMixin#colors colorMixin.colors} color scale zero value.\n     * @name emptyColor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {String} [emptyColor=null]\n     * @return {String}\n     * @return {dc.scatterPlot}/\n     */\n    _chart.emptyColor = function (emptyColor) {\n        if (!arguments.length) {\n            return _emptyColor;\n        }\n        _emptyColor = emptyColor;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols when the group is empty.\n     * @name emptyOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [emptyOpacity=0]\n     * @return {Number}\n     * @return {dc.scatterPlot}\n     */\n    _chart.emptyOpacity = function (emptyOpacity) {\n        if (!arguments.length) {\n            return _emptyOpacity;\n        }\n        _emptyOpacity = emptyOpacity;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols when the group is not empty.\n     * @name nonemptyOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [nonemptyOpacity=1]\n     * @return {Number}\n     * @return {dc.scatterPlot}\n     */\n    _chart.nonemptyOpacity = function (nonemptyOpacity) {\n        if (!arguments.length) {\n            return _emptyOpacity;\n        }\n        _nonemptyOpacity = nonemptyOpacity;\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        return [{chart: _chart, name: _chart._groupName, color: _chart.getColor()}];\n    };\n\n    _chart.legendHighlight = function (d) {\n        resizeSymbolsWhere(function (symbol) {\n            return symbol.attr('fill') === d.color;\n        }, _highlightedSize);\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return d3.select(this).attr('fill') !== d.color;\n        }).classed('fadeout', true);\n    };\n\n    _chart.legendReset = function (d) {\n        resizeSymbolsWhere(function (symbol) {\n            return symbol.attr('fill') === d.color;\n        }, _symbolSize);\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return d3.select(this).attr('fill') !== d.color;\n        }).classed('fadeout', false);\n    };\n\n    function resizeSymbolsWhere (condition, size) {\n        var symbols = _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return condition(d3.select(this));\n        });\n        var oldSize = _symbol.size();\n        _symbol.size(Math.pow(size, 2));\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay()).attr('d', _symbol);\n        _symbol.size(oldSize);\n    }\n\n    _chart.createBrushHandlePaths = function () {\n        // no handle paths for poly-brushes\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (_chart.round()) {\n            brushSelection[0] = brushSelection[0].map(_chart.round());\n            brushSelection[1] = brushSelection[1].map(_chart.round());\n        }\n        return brushSelection;\n    };\n\n    _chart.brushIsEmpty = function (brushSelection) {\n        return !brushSelection || brushSelection[0][0] >= brushSelection[1][0] || brushSelection[0][1] >= brushSelection[1][1];\n    };\n\n    _chart._brushing = function () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when brush.move is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing brush move programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var brushSelection = d3.event.selection;\n\n        // Testing with pixels is more reliable\n        var brushIsEmpty = _chart.brushIsEmpty(brushSelection);\n\n        if (brushSelection) {\n            brushSelection = brushSelection.map(function (point) {\n                return point.map(function (coord, i) {\n                    var scale = i === 0 ? _chart.x() : _chart.y();\n                    return scale.invert(coord);\n                });\n            });\n\n            brushSelection = _chart.extendBrush(brushSelection);\n\n            // The rounding process might have made brushSelection empty, so we need to recheck\n            brushIsEmpty = brushIsEmpty && _chart.brushIsEmpty(brushSelection);\n        }\n\n        _chart.redrawBrush(brushSelection, false);\n\n        var ranged2DFilter = brushIsEmpty ? null : dc.filters.RangedTwoDimensionalFilter(brushSelection);\n\n        dc.events.trigger(function () {\n            _chart.replaceFilter(ranged2DFilter);\n            _chart.redrawGroup();\n        }, dc.constants.EVENT_DELAY);\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        var _brush = _chart.brush();\n        var _gBrush = _chart.gBrush();\n\n        if (_chart.brushOn() && _gBrush) {\n            if (_chart.resizing()) {\n                _chart.setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                _gBrush\n                    .call(_brush.move, brushSelection);\n\n            } else {\n                brushSelection = brushSelection.map(function (point) {\n                    return point.map(function (coord, i) {\n                        var scale = i === 0 ? _chart.x() : _chart.y();\n                        return scale(coord);\n                    });\n                });\n\n                var gBrush =\n                    dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(_gBrush);\n\n                gBrush\n                    .call(_brush.move, brushSelection);\n\n            }\n        }\n\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    _chart.setBrushY = function (gBrush) {\n        gBrush.call(_chart.brush().y(_chart.y()));\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A display of a single numeric value.\n * Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and\n * a valueAccessor that returns a single value.\n * @class numberDisplay\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a number display under #chart-container1 element using the default global chart group\n * var display1 = dc.numberDisplay('#chart-container1');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.numberDisplay}\n */\ndc.numberDisplay = function (parent, chartGroup) {\n    var SPAN_CLASS = 'number-display';\n    var _formatNumber = d3.format('.2s');\n    var _chart = dc.baseMixin({});\n    var _html = {one: '', some: '', none: ''};\n    var _lastValue;\n\n    // dimension not required\n    _chart._mandatoryAttributes(['group']);\n\n    // default to ordering by value, to emulate old group.top(1) behavior when multiple groups\n    _chart.ordering(function (kv) { return kv.value; });\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending on the number\n     * displayed.  The text `%number` will be replaced with the current value.\n     * - one: HTML template to use if the number is 1\n     * - zero: HTML template to use if the number is 0\n     * - some: HTML template to use otherwise\n     * @method html\n     * @memberof dc.numberDisplay\n     * @instance\n     * @example\n     * numberWidget.html({\n     *      one:'%number record',\n     *      some:'%number records',\n     *      none:'no records'})\n     * @param {{one:String, some:String, none:String}} [html={one: '', some: '', none: ''}]\n     * @returns {{one:String, some:String, none:String}|dc.numberDisplay}\n     */\n    _chart.html = function (html) {\n        if (!arguments.length) {\n            return _html;\n        }\n        if (html.none) {\n            _html.none = html.none;//if none available\n        } else if (html.one) {\n            _html.none = html.one;//if none not available use one\n        } else if (html.some) {\n            _html.none = html.some;//if none and one not available use some\n        }\n        if (html.one) {\n            _html.one = html.one;//if one available\n        } else if (html.some) {\n            _html.one = html.some;//if one not available use some\n        }\n        if (html.some) {\n            _html.some = html.some;//if some available\n        } else if (html.one) {\n            _html.some = html.one;//if some not available use one\n        }\n        return _chart;\n    };\n\n    /**\n     * Calculate and return the underlying value of the display.\n     * @method value\n     * @memberof dc.numberDisplay\n     * @instance\n     * @returns {Number}\n     */\n    _chart.value = function () {\n        return _chart.data();\n    };\n\n    function maxBin (all) {\n        if (!all.length) {\n            return null;\n        }\n        var sorted = _chart._computeOrderedGroups(all);\n        return sorted[sorted.length - 1];\n    }\n    _chart.data(function (group) {\n        var valObj = group.value ? group.value() : maxBin(group.all());\n        return _chart.valueAccessor()(valObj);\n    });\n\n    _chart.transitionDuration(250); // good default\n    _chart.transitionDelay(0);\n\n    _chart._doRender = function () {\n        var newValue = _chart.value(),\n            span = _chart.selectAll('.' + SPAN_CLASS);\n\n        if (span.empty()) {\n            span = span.data([0])\n                .enter()\n                    .append('span')\n                    .attr('class', SPAN_CLASS)\n                .merge(span);\n        }\n\n        span.transition()\n            .duration(_chart.transitionDuration())\n            .delay(_chart.transitionDelay())\n            .ease(d3.easeQuad)\n            .tween('text', function () {\n                // [XA] don't try and interpolate from Infinity, else this breaks.\n                var interpStart = isFinite(_lastValue) ? _lastValue : 0;\n                var interp = d3.interpolateNumber(interpStart || 0, newValue);\n                _lastValue = newValue;\n\n                // need to save it in D3v4\n                var node = this;\n                return function (t) {\n                    var html = null, num = _chart.formatNumber()(interp(t));\n                    if (newValue === 0 && (_html.none !== '')) {\n                        html = _html.none;\n                    } else if (newValue === 1 && (_html.one !== '')) {\n                        html = _html.one;\n                    } else if (_html.some !== '') {\n                        html = _html.some;\n                    }\n                    node.innerHTML = html ? html.replace('%number', num) : num;\n                };\n            });\n    };\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set a function to format the value for the display.\n     * @method formatNumber\n     * @memberof dc.numberDisplay\n     * @instance\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @param {Function} [formatter=d3.format('.2s')]\n     * @returns {Function|dc.numberDisplay}\n     */\n    _chart.formatNumber = function (formatter) {\n        if (!arguments.length) {\n            return _formatNumber;\n        }\n        _formatNumber = formatter;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A heat map is matrix that represents the values of two dimensions of data using colors.\n * @class heatMap\n * @memberof dc\n * @mixes dc.colorMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @example\n * // create a heat map under #chart-container1 element using the default global chart group\n * var heatMap1 = dc.heatMap('#chart-container1');\n * // create a heat map under #chart-container2 element using chart group A\n * var heatMap2 = dc.heatMap('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.heatMap}\n */\ndc.heatMap = function (parent, chartGroup) {\n\n    var DEFAULT_BORDER_RADIUS = 6.75;\n\n    var _chartBody;\n\n    var _cols;\n    var _rows;\n    var _colOrdering = d3.ascending;\n    var _rowOrdering = d3.ascending;\n    var _colScale = d3.scaleBand();\n    var _rowScale = d3.scaleBand();\n\n    var _xBorderRadius = DEFAULT_BORDER_RADIUS;\n    var _yBorderRadius = DEFAULT_BORDER_RADIUS;\n\n    var _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin({})));\n    _chart._mandatoryAttributes(['group']);\n    _chart.title(_chart.colorAccessor());\n\n    var _colsLabel = function (d) {\n        return d;\n    };\n    var _rowsLabel = function (d) {\n        return d;\n    };\n\n    /**\n     * Set or get the column label function. The chart class uses this function to render\n     * column labels on the X axis. It is passed the column name.\n     * @method colsLabel\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // the default label function just returns the name\n     * chart.colsLabel(function(d) { return d; });\n     * @param  {Function} [labelFunction=function(d) { return d; }]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.colsLabel = function (labelFunction) {\n        if (!arguments.length) {\n            return _colsLabel;\n        }\n        _colsLabel = labelFunction;\n        return _chart;\n    };\n\n    /**\n     * Set or get the row label function. The chart class uses this function to render\n     * row labels on the Y axis. It is passed the row name.\n     * @method rowsLabel\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // the default label function just returns the name\n     * chart.rowsLabel(function(d) { return d; });\n     * @param  {Function} [labelFunction=function(d) { return d; }]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.rowsLabel = function (labelFunction) {\n        if (!arguments.length) {\n            return _rowsLabel;\n        }\n        _rowsLabel = labelFunction;\n        return _chart;\n    };\n\n    var _xAxisOnClick = function (d) { filterAxis(0, d); };\n    var _yAxisOnClick = function (d) { filterAxis(1, d); };\n    var _boxOnClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    function filterAxis (axis, value) {\n        var cellsOnAxis = _chart.selectAll('.box-group').filter(function (d) {\n            return d.key[axis] === value;\n        });\n        var unfilteredCellsOnAxis = cellsOnAxis.filter(function (d) {\n            return !_chart.hasFilter(d.key);\n        });\n        dc.events.trigger(function () {\n            var selection = unfilteredCellsOnAxis.empty() ? cellsOnAxis : unfilteredCellsOnAxis;\n            var filters = selection.data().map(function (kv) {\n                return dc.filters.TwoDimensionalFilter(kv.key);\n            });\n            _chart._filter([filters]);\n            _chart.redrawGroup();\n        });\n    }\n\n    dc.override(_chart, 'filter', function (filter) {\n        if (!arguments.length) {\n            return _chart._filter();\n        }\n\n        return _chart._filter(dc.filters.TwoDimensionalFilter(filter));\n    });\n\n    /**\n     * Gets or sets the values used to create the rows of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the value accessor.\n     * @method rows\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Array<String|Number>} [rows]\n     * @returns {Array<String|Number>|dc.heatMap}\n     */\n\n    _chart.rows = function (rows) {\n        if (!arguments.length) {\n            return _rows;\n        }\n        _rows = rows;\n        return _chart;\n    };\n\n    /**\n     #### .rowOrdering([orderFunction])\n     Get or set an accessor to order the rows.  Default is d3.ascending.\n     */\n    _chart.rowOrdering = function (_) {\n        if (!arguments.length) {\n            return _rowOrdering;\n        }\n        _rowOrdering = _;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the key accessor.\n     * @method cols\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Array<String|Number>} [cols]\n     * @returns {Array<String|Number>|dc.heatMap}\n     */\n    _chart.cols = function (cols) {\n        if (!arguments.length) {\n            return _cols;\n        }\n        _cols = cols;\n        return _chart;\n    };\n\n    /**\n     #### .colOrdering([orderFunction])\n     Get or set an accessor to order the cols.  Default is ascending.\n     */\n    _chart.colOrdering = function (_) {\n        if (!arguments.length) {\n            return _colOrdering;\n        }\n        _colOrdering = _;\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _chartBody = _chart.svg()\n            .append('g')\n            .attr('class', 'heatmap')\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n        return _chart._doRedraw();\n    };\n\n    _chart._doRedraw = function () {\n        var data = _chart.data(),\n            rows = _chart.rows() || data.map(_chart.valueAccessor()),\n            cols = _chart.cols() || data.map(_chart.keyAccessor());\n        if (_rowOrdering) {\n            rows = rows.sort(_rowOrdering);\n        }\n        if (_colOrdering) {\n            cols = cols.sort(_colOrdering);\n        }\n        rows = _rowScale.domain(rows);\n        cols = _colScale.domain(cols);\n\n        var rowCount = rows.domain().length,\n            colCount = cols.domain().length,\n            boxWidth = Math.floor(_chart.effectiveWidth() / colCount),\n            boxHeight = Math.floor(_chart.effectiveHeight() / rowCount);\n\n        cols.rangeRound([0, _chart.effectiveWidth()]);\n        rows.rangeRound([_chart.effectiveHeight(), 0]);\n\n        var boxes = _chartBody.selectAll('g.box-group').data(_chart.data(), function (d, i) {\n            return _chart.keyAccessor()(d, i) + '\\0' + _chart.valueAccessor()(d, i);\n        });\n\n        boxes.exit().remove();\n\n        var gEnter = boxes.enter().append('g')\n            .attr('class', 'box-group');\n\n        gEnter.append('rect')\n            .attr('class', 'heat-box')\n            .attr('fill', 'white')\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n            .on('click', _chart.boxOnClick());\n\n        if (_chart.renderTitle()) {\n            gEnter.append('title');\n            boxes.select('title').text(_chart.title());\n        }\n\n        boxes = gEnter.merge(boxes);\n\n        dc.transition(boxes.select('rect'), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n            .attr('rx', _xBorderRadius)\n            .attr('ry', _yBorderRadius)\n            .attr('fill', _chart.getColor)\n            .attr('width', boxWidth)\n            .attr('height', boxHeight);\n\n        var gCols = _chartBody.select('g.cols');\n        if (gCols.empty()) {\n            gCols = _chartBody.append('g').attr('class', 'cols axis');\n        }\n        var gColsText = gCols.selectAll('text').data(cols.domain());\n\n        gColsText.exit().remove();\n\n        gColsText = gColsText\n            .enter()\n                .append('text')\n                .attr('x', function (d) {\n                    return cols(d) + boxWidth / 2;\n                })\n                .style('text-anchor', 'middle')\n                .attr('y', _chart.effectiveHeight())\n                .attr('dy', 12)\n                .on('click', _chart.xAxisOnClick())\n                .text(_chart.colsLabel())\n            .merge(gColsText);\n\n        dc.transition(gColsText, _chart.transitionDuration(), _chart.transitionDelay())\n               .text(_chart.colsLabel())\n               .attr('x', function (d) { return cols(d) + boxWidth / 2; })\n               .attr('y', _chart.effectiveHeight());\n\n        var gRows = _chartBody.select('g.rows');\n        if (gRows.empty()) {\n            gRows = _chartBody.append('g').attr('class', 'rows axis');\n        }\n\n        var gRowsText = gRows.selectAll('text').data(rows.domain());\n\n        gRowsText.exit().remove();\n\n        gRowsText = gRowsText\n            .enter()\n            .append('text')\n                .style('text-anchor', 'end')\n                .attr('x', 0)\n                .attr('dx', -2)\n                .attr('y', function (d) { return rows(d) + boxHeight / 2; })\n                .attr('dy', 6)\n                .on('click', _chart.yAxisOnClick())\n                .text(_chart.rowsLabel())\n            .merge(gRowsText);\n\n        dc.transition(gRowsText, _chart.transitionDuration(), _chart.transitionDelay())\n              .text(_chart.rowsLabel())\n              .attr('y', function (d) { return rows(d) + boxHeight / 2; });\n\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.box-group').each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.box-group').each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when an individual cell is clicked in the heatmap.\n     * By default, filtering of the cell will be toggled.\n     * @method boxOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // default box on click handler\n     * chart.boxOnClick(function (d) {\n     *     var filter = d.key;\n     *     dc.events.trigger(function () {\n     *         _chart.filter(filter);\n     *         _chart.redrawGroup();\n     *     });\n     * });\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.boxOnClick = function (handler) {\n        if (!arguments.length) {\n            return _boxOnClick;\n        }\n        _boxOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when a column tick is clicked in the x axis.\n     * By default, if any cells in the column are unselected, the whole column will be selected,\n     * otherwise the whole column will be unselected.\n     * @method xAxisOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.xAxisOnClick = function (handler) {\n        if (!arguments.length) {\n            return _xAxisOnClick;\n        }\n        _xAxisOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when a row tick is clicked in the y axis.\n     * By default, if any cells in the row are unselected, the whole row will be selected,\n     * otherwise the whole row will be unselected.\n     * @method yAxisOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.yAxisOnClick = function (handler) {\n        if (!arguments.length) {\n            return _yAxisOnClick;\n        }\n        _yAxisOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the X border radius.  Set to 0 to get full rectangles.\n     * @method xBorderRadius\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Number} [xBorderRadius=6.75]\n     * @returns {Number|dc.heatMap}\n     */\n    _chart.xBorderRadius = function (xBorderRadius) {\n        if (!arguments.length) {\n            return _xBorderRadius;\n        }\n        _xBorderRadius = xBorderRadius;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the Y border radius.  Set to 0 to get full rectangles.\n     * @method yBorderRadius\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Number} [yBorderRadius=6.75]\n     * @returns {Number|dc.heatMap}\n     */\n    _chart.yBorderRadius = function (yBorderRadius) {\n        if (!arguments.length) {\n            return _yBorderRadius;\n        }\n        _yBorderRadius = yBorderRadius;\n        return _chart;\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n// https://github.com/d3/d3-plugins/blob/master/box/box.js\n// * Original source March 22, 2013\n// * Enhancements integrated on May 13, 2018 for dc.js library only\n\n// https://github.com/d3/d3-plugins/blob/master/LICENSE\n// Copyright (c) 2012-2015, Michael Bostock\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// * Redistributions of source code must retain the above copyright notice, this\n//   list of conditions and the following disclaimer.\n//\n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution.\n//\n// * The name Michael Bostock may not be used to endorse or promote products\n//   derived from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n(function () {\n\n    // Inspired by http://informationandvisualization.de/blog/box-plot\n    d3.box = function () {\n        var width = 1,\n            height = 1,\n            duration = 0,\n            delay = 0,\n            domain = null,\n            value = Number,\n            whiskers = boxWhiskers,\n            quartiles = boxQuartiles,\n            tickFormat = null,\n\n            // Enhanced attributes\n            renderDataPoints = false,\n            dataRadius = 3,\n            dataOpacity = 0.3,\n            dataWidthPortion = 0.8,\n            renderTitle = false,\n            showOutliers = true,\n            boldOutlier = false;\n\n        // For each small multiple…\n        function box (g) {\n            /* jshint -W074 */\n            g.each(function (d, i) {\n                d = d.map(value).sort(d3.ascending);\n                var g = d3.select(this),\n                    n = d.length,\n                    min,\n                    max;\n\n                // Leave if there are no items.\n                if (n === 0) {return;}\n\n                // Compute quartiles. Must return exactly 3 elements.\n                var quartileData = d.quartiles = quartiles(d);\n\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                var whiskerIndices = whiskers && whiskers.call(this, d, i),\n                    whiskerData = whiskerIndices && whiskerIndices.map(function (i) { return d[i]; });\n\n                // Compute outliers. If no whiskers are specified, all data are 'outliers'.\n                // We compute the outliers as indices, so that we can join across transitions!\n                var outlierIndices = whiskerIndices ?\n                    d3.range(0, whiskerIndices[0]).concat(d3.range(whiskerIndices[1] + 1, n)) : d3.range(n);\n\n                // Determine the maximum value based on if outliers are shown\n                if (showOutliers) {\n                    min = d[0];\n                    max = d[n - 1];\n                } else {\n                    min = d[whiskerIndices[0]];\n                    max = d[whiskerIndices[1]];\n                }\n                var pointIndices = d3.range(whiskerIndices[0], whiskerIndices[1] + 1);\n\n                // Compute the new x-scale.\n                var x1 = d3.scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]);\n\n                // Retrieve the old x-scale, if this is an update.\n                var x0 = this.__chart__ || d3.scaleLinear()\n                    .domain([0, Infinity])\n                    .range(x1.range());\n\n                // Stash the new scale.\n                this.__chart__ = x1;\n\n                // Note: the box, median, and box tick elements are fixed in number,\n                // so we only have to handle enter and update. In contrast, the outliers\n                // and other elements are variable, so we need to exit them! Variable\n                // elements also fade in and out.\n\n                // Update center line: the vertical line spanning the whiskers.\n                var center = g.selectAll('line.center')\n                    .data(whiskerData ? [whiskerData] : []);\n\n                center.enter().insert('line', 'rect')\n                    .attr('class', 'center')\n                    .attr('x1', width / 2)\n                    .attr('y1', function (d) { return x0(d[0]); })\n                    .attr('x2', width / 2)\n                    .attr('y2', function (d) { return x0(d[1]); })\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); });\n\n                center.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1)\n                    .attr('x1', width / 2)\n                    .attr('x2', width / 2)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); });\n\n                center.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1e-6)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); })\n                    .remove();\n\n                // Update innerquartile box.\n                var box = g.selectAll('rect.box')\n                    .data([quartileData]);\n\n                box.enter().append('rect')\n                    .attr('class', 'box')\n                    .attr('x', 0)\n                    .attr('y', function (d) { return x0(d[2]); })\n                    .attr('width', width)\n                    .attr('height', function (d) { return x0(d[0]) - x0(d[2]); })\n                    .style('fill-opacity', (renderDataPoints) ? 0.1 : 1)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', function (d) { return x1(d[2]); })\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\n\n                box.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('width', width)\n                    .attr('y', function (d) { return x1(d[2]); })\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\n\n                // Update median line.\n                var medianLine = g.selectAll('line.median')\n                    .data([quartileData[1]]);\n\n                medianLine.enter().append('line')\n                    .attr('class', 'median')\n                    .attr('x1', 0)\n                    .attr('y1', x0)\n                    .attr('x2', width)\n                    .attr('y2', x0)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1);\n\n                medianLine.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('x1', 0)\n                    .attr('x2', width)\n                    .attr('y1', x1)\n                    .attr('y2', x1);\n\n                // Update whiskers.\n                var whisker = g.selectAll('line.whisker')\n                    .data(whiskerData || []);\n\n                whisker.enter().insert('line', 'circle, text')\n                    .attr('class', 'whisker')\n                    .attr('x1', 0)\n                    .attr('y1', x0)\n                    .attr('x2', width)\n                    .attr('y2', x0)\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1);\n\n                whisker.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('x1', 0)\n                    .attr('x2', width)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1);\n\n                whisker.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1e-6)\n                    .remove();\n\n                // Update outliers.\n                if (showOutliers) {\n                    var outlierClass = boldOutlier ? 'outlierBold' : 'outlier';\n                    var outlierSize = boldOutlier ? 3 : 5;\n                    var outlierX = boldOutlier ?\n                        function () { return Math.floor(Math.random() *\n                            (width * dataWidthPortion) +\n                            1 + ((width - (width * dataWidthPortion)) / 2)); } :\n                        function () { return width / 2; };\n\n                    var outlier = g.selectAll('circle.' + outlierClass)\n                        .data(outlierIndices, Number);\n\n                    outlier.enter().insert('circle', 'text')\n                        .attr('class', outlierClass)\n                        .attr('r', outlierSize)\n                        .attr('cx', outlierX)\n                        .attr('cy', function (i) { return x0(d[i]); })\n                        .style('opacity', 1e-6)\n                        .transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', 0.6);\n\n                    if (renderTitle) {\n                        outlier.selectAll('title').remove();\n                        outlier.append('title').text(function (i) {return d[i]; });\n                    }\n\n                    outlier.transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cx', outlierX)\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', 0.6);\n\n                    outlier.exit().transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', 0) //function (i) { return x1(d[i]); })\n                        .style('opacity', 1e-6)\n                        .remove();\n                }\n\n                // Update Values\n                if (renderDataPoints) {\n                    var point = g.selectAll('circle.data')\n                        .data(pointIndices);\n\n                    point.enter().insert('circle', 'text')\n                        .attr('class', 'data')\n                        .attr('r', dataRadius)\n                        .attr('cx', function () { return Math.floor(Math.random() *\n                            (width * dataWidthPortion) +\n                            1 + ((width - (width * dataWidthPortion)) / 2)); })\n                        .attr('cy', function (i) { return x0(d[i]); })\n                        .style('opacity', 1e-6)\n                        .transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', dataOpacity);\n\n                    if (renderTitle) {\n                        point.selectAll('title').remove();\n                        point.append('title').text(function (i) { return d[i]; });\n                    }\n\n                    point.transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cx', function () { return Math.floor(Math.random() *\n                            (width * dataWidthPortion) +\n                            1 + ((width - (width * dataWidthPortion)) / 2)); })\n                        .attr('cy', function (i) { return x1(d[i]); })\n                        .style('opacity', dataOpacity);\n\n                    point.exit().transition()\n                        .duration(duration)\n                        .delay(delay)\n                        .attr('cy', 0)\n                        .style('opacity', 1e-6)\n                        .remove();\n                }\n\n                // Compute the tick format.\n                var format = tickFormat || x1.tickFormat(8);\n\n                // Update box ticks.\n                var boxTick = g.selectAll('text.box')\n                    .data(quartileData);\n\n                boxTick.enter().append('text')\n                    .attr('class', 'box')\n                    .attr('dy', '.3em')\n                    .attr('dx', function (d, i) { return i & 1 ? 6 : -6; })\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\n                    .attr('y', x0)\n                    .attr('text-anchor', function (d, i) { return i & 1 ? 'start' : 'end'; })\n                    .text(format)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1);\n\n                boxTick.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .text(format)\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\n                    .attr('y', x1);\n\n                // Update whisker ticks. These are handled separately from the box\n                // ticks because they may or may not exist, and we want don't want\n                // to join box ticks pre-transition with whisker ticks post-.\n                var whiskerTick = g.selectAll('text.whisker')\n                    .data(whiskerData || []);\n\n                whiskerTick.enter().append('text')\n                    .attr('class', 'whisker')\n                    .attr('dy', '.3em')\n                    .attr('dx', 6)\n                    .attr('x', width)\n                    .attr('y', x0)\n                    .text(format)\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1)\n                    .style('opacity', 1);\n\n                whiskerTick.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .text(format)\n                    .attr('x', width)\n                    .attr('y', x1)\n                    .style('opacity', 1);\n\n                whiskerTick.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1)\n                    .style('opacity', 1e-6)\n                    .remove();\n\n                // Remove temporary quartiles element from within data array.\n                delete d.quartiles;\n            });\n            /* jshint +W074 */\n            d3.timerFlush();\n        }\n\n        box.width = function (x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = x;\n            return box;\n        };\n\n        box.height = function (x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = x;\n            return box;\n        };\n\n        box.tickFormat = function (x) {\n            if (!arguments.length) {\n                return tickFormat;\n            }\n            tickFormat = x;\n            return box;\n        };\n\n        box.showOutliers = function (x) {\n            if (!arguments.length) {\n                return showOutliers;\n            }\n            showOutliers = x;\n            return box;\n        };\n\n        box.boldOutlier = function (x) {\n            if (!arguments.length) {\n                return boldOutlier;\n            }\n            boldOutlier = x;\n            return box;\n        };\n\n        box.renderDataPoints = function (x) {\n            if (!arguments.length) {\n                return renderDataPoints;\n            }\n            renderDataPoints = x;\n            return box;\n        };\n\n        box.renderTitle = function (x) {\n            if (!arguments.length) {\n                return renderTitle;\n            }\n            renderTitle = x;\n            return box;\n        };\n\n        box.dataOpacity = function (x) {\n            if (!arguments.length) {\n                return dataOpacity;\n            }\n            dataOpacity = x;\n            return box;\n        };\n\n        box.dataWidthPortion = function (x) {\n            if (!arguments.length) {\n                return dataWidthPortion;\n            }\n            dataWidthPortion = x;\n            return box;\n        };\n\n        box.duration = function (x) {\n            if (!arguments.length) {\n                return duration;\n            }\n            duration = x;\n            return box;\n        };\n\n        box.domain = function (x) {\n            if (!arguments.length) {\n                return domain;\n            }\n            domain = x === null ? x :  typeof x === 'function' ? x : dc.utils.constant(x);\n            return box;\n        };\n\n        box.value = function (x) {\n            if (!arguments.length) {\n                return value;\n            }\n            value = x;\n            return box;\n        };\n\n        box.whiskers = function (x) {\n            if (!arguments.length) {\n                return whiskers;\n            }\n            whiskers = x;\n            return box;\n        };\n\n        box.quartiles = function (x) {\n            if (!arguments.length) {\n                return quartiles;\n            }\n            quartiles = x;\n            return box;\n        };\n\n        return box;\n    };\n\n    function boxWhiskers (d) {\n        return [0, d.length - 1];\n    }\n\n    function boxQuartiles (d) {\n        return [\n            d3.quantile(d, 0.25),\n            d3.quantile(d, 0.5),\n            d3.quantile(d, 0.75)\n        ];\n    }\n\n})();\n\n\n\n/**\n * A box plot is a chart that depicts numerical data via their quartile ranges.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-basic.html Boxplot Basic example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-enhanced.html Boxplot Enhanced example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-render-data.html Boxplot Render Data example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-time.html Boxplot time example}\n * @class boxPlot\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a box plot under #chart-container1 element using the default global chart group\n * var boxPlot1 = dc.boxPlot('#chart-container1');\n * // create a box plot under #chart-container2 element using chart group A\n * var boxPlot2 = dc.boxPlot('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.boxPlot}\n */\ndc.boxPlot = function (parent, chartGroup) {\n    var _chart = dc.coordinateGridMixin({});\n\n    // Returns a function to compute the interquartile range.\n    function DEFAULT_WHISKERS_IQR (k) {\n        return function (d) {\n            var q1 = d.quartiles[0],\n                q3 = d.quartiles[2],\n                iqr = (q3 - q1) * k,\n                i = -1,\n                j = d.length;\n            do { ++i; } while (d[i] < q1 - iqr);\n            do { --j; } while (d[j] > q3 + iqr);\n            return [i, j];\n        };\n    }\n\n    var _whiskerIqrFactor = 1.5;\n    var _whiskersIqr = DEFAULT_WHISKERS_IQR;\n    var _whiskers = _whiskersIqr(_whiskerIqrFactor);\n\n    var _box = d3.box();\n    var _tickFormat = null;\n    var _renderDataPoints = false;\n    var _dataOpacity = 0.3;\n    var _dataWidthPortion = 0.8;\n    var _showOutliers = true;\n    var _boldOutlier = false;\n\n    // Used in yAxisMin and yAxisMax to add padding in pixel coordinates\n    // so the min and max data points/whiskers are within the chart\n    var _yRangePadding = 8;\n\n    var _boxWidth = function (innerChartWidth, xUnits) {\n        if (_chart.isOrdinal()) {\n            return _chart.x().bandwidth();\n        } else {\n            return innerChartWidth / (1 + _chart.boxPadding()) / xUnits;\n        }\n    };\n\n    // default to ordinal\n    _chart.x(d3.scaleBand());\n    _chart.xUnits(dc.units.ordinal);\n\n    // valueAccessor should return an array of values that can be coerced into numbers\n    // or if data is overloaded for a static array of arrays, it should be `Number`.\n    // Empty arrays are not included.\n    _chart.data(function (group) {\n        return group.all().map(function (d) {\n            d.map = function (accessor) { return accessor.call(d, d); };\n            return d;\n        }).filter(function (d) {\n            var values = _chart.valueAccessor()(d);\n            return values.length !== 0;\n        });\n    });\n\n    /**\n     * Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.\n     * See the {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\n     * for a visual description of how the padding is applied.\n     * @method boxPadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3.scaleBand}\n     * @param {Number} [padding=0.8]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.boxPadding = _chart._rangeBandPadding;\n    _chart.boxPadding(0.8);\n\n    /**\n     * Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts\n     * or on charts with a custom {@link dc.boxPlot#boxWidth .boxWidth}. Will pad the width by\n     * `padding * barWidth` on each side of the chart.\n     * @method outerPadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [padding=0.5]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.outerPadding = _chart._outerRangeBandPadding;\n    _chart.outerPadding(0.5);\n\n    /**\n     * Get or set the numerical width of the boxplot box. The width may also be a function taking as\n     * parameters the chart width excluding the right and left margins, as well as the number of x\n     * units.\n     * @example\n     * // Using numerical parameter\n     * chart.boxWidth(10);\n     * // Using function\n     * chart.boxWidth((innerChartWidth, xUnits) { ... });\n     * @method boxWidth\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number|Function} [boxWidth=0.5]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.boxWidth = function (boxWidth) {\n        if (!arguments.length) {\n            return _boxWidth;\n        }\n        _boxWidth = typeof boxWidth === 'function' ? boxWidth : dc.utils.constant(boxWidth);\n        return _chart;\n    };\n\n    var boxTransform = function (d, i) {\n        var xOffset = _chart.x()(_chart.keyAccessor()(d, i));\n        return 'translate(' + xOffset + ', 0)';\n    };\n\n    _chart._preprocessData = function () {\n        if (_chart.elasticX()) {\n            _chart.x().domain([]);\n        }\n    };\n\n    _chart.plotData = function () {\n        var _calculatedBoxWidth = _boxWidth(_chart.effectiveWidth(), _chart.xUnitCount());\n\n        _box.whiskers(_whiskers)\n            .width(_calculatedBoxWidth)\n            .height(_chart.effectiveHeight())\n            .value(_chart.valueAccessor())\n            .domain(_chart.y().domain())\n            .duration(_chart.transitionDuration())\n            .tickFormat(_tickFormat)\n            .renderDataPoints(_renderDataPoints)\n            .dataOpacity(_dataOpacity)\n            .dataWidthPortion(_dataWidthPortion)\n            .renderTitle(_chart.renderTitle())\n            .showOutliers(_showOutliers)\n            .boldOutlier(_boldOutlier);\n\n        var boxesG = _chart.chartBodyG().selectAll('g.box').data(_chart.data(), _chart.keyAccessor());\n\n        var boxesGEnterUpdate = renderBoxes(boxesG);\n        updateBoxes(boxesGEnterUpdate);\n        removeBoxes(boxesG);\n\n        _chart.fadeDeselectedArea(_chart.filter());\n    };\n\n    function renderBoxes (boxesG) {\n        var boxesGEnter = boxesG.enter().append('g');\n\n        boxesGEnter\n            .attr('class', 'box')\n            .attr('transform', boxTransform)\n            .call(_box)\n            .on('click', function (d) {\n                _chart.filter(_chart.keyAccessor()(d));\n                _chart.redrawGroup();\n            });\n        return boxesGEnter.merge(boxesG);\n    }\n\n    function updateBoxes (boxesG) {\n        dc.transition(boxesG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', boxTransform)\n            .call(_box)\n            .each(function (d) {\n                var color = _chart.getColor(d, 0);\n                d3.select(this).select('rect.box').attr('fill', color);\n                d3.select(this).selectAll('circle.data').attr('fill', color);\n            });\n    }\n\n    function removeBoxes (boxesG) {\n        boxesG.exit().remove().call(_box);\n    }\n\n    function minDataValue () {\n        return d3.min(_chart.data(), function (e) {\n            return d3.min(_chart.valueAccessor()(e));\n        });\n    }\n\n    function maxDataValue () {\n        return d3.max(_chart.data(), function (e) {\n            return d3.max(_chart.valueAccessor()(e));\n        });\n    }\n\n    function yAxisRangeRatio () {\n        return ((maxDataValue() - minDataValue()) / _chart.effectiveHeight());\n    }\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        if (_chart.hasFilter()) {\n            if (_chart.isOrdinal()) {\n                _chart.g().selectAll('g.box').each(function (d) {\n                    if (_chart.isSelectedNode(d)) {\n                        _chart.highlightSelected(this);\n                    } else {\n                        _chart.fadeDeselected(this);\n                    }\n                });\n            } else {\n                if (!(_chart.brushOn() || _chart.parentBrushOn())) {\n                    return;\n                }\n                var start = brushSelection[0];\n                var end = brushSelection[1];\n                var keyAccessor = _chart.keyAccessor();\n                _chart.g().selectAll('g.box').each(function (d) {\n                    var key = keyAccessor(d);\n                    if (key < start || key >= end) {\n                        _chart.fadeDeselected(this);\n                    } else {\n                        _chart.highlightSelected(this);\n                    }\n                });\n            }\n        } else {\n            _chart.g().selectAll('g.box').each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(_chart.keyAccessor()(d));\n    };\n\n    _chart.yAxisMin = function () {\n        var padding = _yRangePadding * yAxisRangeRatio();\n        return dc.utils.subtract(minDataValue() - padding, _chart.yAxisPadding());\n    };\n\n    _chart.yAxisMax = function () {\n        var padding = _yRangePadding * yAxisRangeRatio();\n        return dc.utils.add(maxDataValue() + padding, _chart.yAxisPadding());\n    };\n\n    /**\n     * Get or set the numerical format of the boxplot median, whiskers and quartile labels. Defaults\n     * to integer formatting.\n     * @example\n     * // format ticks to 2 decimal places\n     * chart.tickFormat(d3.format('.2f'));\n     * @method tickFormat\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Function} [tickFormat]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.tickFormat = function (tickFormat) {\n        if (!arguments.length) {\n            return _tickFormat;\n        }\n        _tickFormat = tickFormat;\n        return _chart;\n    };\n\n    /**\n     * Get or set the amount of padding to add, in pixel coordinates, to the top and\n     * bottom of the chart to accommodate box/whisker labels.\n     * @example\n     * // allow more space for a bigger whisker font\n     * chart.yRangePadding(12);\n     * @method yRangePadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Function} [yRangePadding = 8]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.yRangePadding = function (yRangePadding) {\n        if (!arguments.length) {\n            return _yRangePadding;\n        }\n        _yRangePadding = yRangePadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set whether individual data points will be rendered.\n     * @example\n     * // Enable rendering of individual data points\n     * chart.renderDataPoints(true);\n     * @method renderDataPoints\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Boolean} [show=false]\n     * @returns {Boolean|dc.boxPlot}\n     */\n    _chart.renderDataPoints = function (show) {\n        if (!arguments.length) {\n            return _renderDataPoints;\n        }\n        _renderDataPoints = show;\n        return _chart;\n    };\n\n    /**\n     * Get or set the opacity when rendering data.\n     * @example\n     * // If individual data points are rendered increase the opacity.\n     * chart.dataOpacity(0.7);\n     * @method dataOpacity\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [opacity=0.3]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.dataOpacity = function (opacity) {\n        if (!arguments.length) {\n            return _dataOpacity;\n        }\n        _dataOpacity = opacity;\n        return _chart;\n    };\n\n    /**\n     * Get or set the portion of the width of the box to show data points.\n     * @example\n     * // If individual data points are rendered increase the data box.\n     * chart.dataWidthPortion(0.9);\n     * @method dataWidthPortion\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [percentage=0.8]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.dataWidthPortion = function (percentage) {\n        if (!arguments.length) {\n            return _dataWidthPortion;\n        }\n        _dataWidthPortion = percentage;\n        return _chart;\n    };\n\n    /**\n     * Get or set whether outliers will be rendered.\n     * @example\n     * // Disable rendering of outliers\n     * chart.showOutliers(false);\n     * @method showOutliers\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Boolean} [show=true]\n     * @returns {Boolean|dc.boxPlot}\n     */\n    _chart.showOutliers = function (show) {\n        if (!arguments.length) {\n            return _showOutliers;\n        }\n        _showOutliers = show;\n        return _chart;\n    };\n\n    /**\n     * Get or set whether outliers will be drawn bold.\n     * @example\n     * // If outliers are rendered display as bold\n     * chart.boldOutlier(true);\n     * @method boldOutlier\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Boolean} [show=false]\n     * @returns {Boolean|dc.boxPlot}\n     */\n    _chart.boldOutlier = function (show) {\n        if (!arguments.length) {\n            return _boldOutlier;\n        }\n        _boldOutlier = show;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n\n/**\n * The select menu is a simple widget designed to filter a dimension by selecting an option from\n * an HTML `<select/>` menu. The menu can be optionally turned into a multiselect.\n * @class selectMenu\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a select menu under #select-container using the default global chart group\n * var select = dc.selectMenu('#select-container')\n *                .dimension(states)\n *                .group(stateGroup);\n * // the option text can be set via the title() function\n * // by default the option text is '`key`: `value`'\n * select.title(function (d){\n *     return 'STATE: ' + d.key;\n * })\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\n * Interaction with the widget will only trigger events and redraws within its group.\n * @returns {selectMenu}\n **/\ndc.selectMenu = function (parent, chartGroup) {\n    var SELECT_CSS_CLASS = 'dc-select-menu';\n    var OPTION_CSS_CLASS = 'dc-select-option';\n\n    var _chart = dc.baseMixin({});\n\n    var _select;\n    var _promptText = 'Select all';\n    var _multiple = false;\n    var _promptValue = null;\n    var _numberVisible = null;\n    var _order = function (a, b) {\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\n            -1 : 0;\n    };\n\n    var _filterDisplayed = function (d) {\n        return _chart.valueAccessor()(d) > 0;\n    };\n\n    _chart.data(function (group) {\n        return group.all().filter(_filterDisplayed);\n    });\n\n    _chart._doRender = function () {\n        _chart.select('select').remove();\n        _select = _chart.root().append('select')\n                        .classed(SELECT_CSS_CLASS, true);\n        _select.append('option').text(_promptText).attr('value', '');\n\n        _chart._doRedraw();\n        return _chart;\n    };\n    // Fixing IE 11 crash when redrawing the chart\n    // see here for list of IE user Agents :\n    // http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer\n    var ua = window.navigator.userAgent;\n    // test for IE 11 but not a lower version (which contains MSIE in UA)\n    if (ua.indexOf('Trident/') > 0 && ua.indexOf('MSIE') === -1) {\n        _chart.redraw = _chart.render;\n    }\n\n    _chart._doRedraw = function () {\n        setAttributes();\n        renderOptions();\n        // select the option(s) corresponding to current filter(s)\n        if (_chart.hasFilter() && _multiple) {\n            _select.selectAll('option')\n                .property('selected', function (d) {\n                    return typeof d !== 'undefined' && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0;\n                });\n        } else if (_chart.hasFilter()) {\n            _select.property('value', _chart.filter());\n        } else {\n            _select.property('value', '');\n        }\n        return _chart;\n    };\n\n    function renderOptions () {\n        var options = _select.selectAll('option.' + OPTION_CSS_CLASS)\n          .data(_chart.data(), function (d) { return _chart.keyAccessor()(d); });\n\n        options.exit().remove();\n\n        options.enter()\n              .append('option')\n              .classed(OPTION_CSS_CLASS, true)\n              .attr('value', function (d) { return _chart.keyAccessor()(d); })\n            .merge(options)\n              .text(_chart.title());\n\n        _select.selectAll('option.' + OPTION_CSS_CLASS).sort(_order);\n\n        _select.on('change', onChange);\n    }\n\n    function onChange (d, i) {\n        var values;\n        var target = d3.event.target;\n        if (target.selectedOptions) {\n            var selectedOptions = Array.prototype.slice.call(target.selectedOptions);\n            values = selectedOptions.map(function (d) {\n                return d.value;\n            });\n        } else { // IE and other browsers do not support selectedOptions\n            // adapted from this polyfill: https://gist.github.com/brettz9/4212217\n            var options = [].slice.call(d3.event.target.options);\n            values = options.filter(function (option) {\n                return option.selected;\n            }).map(function (option) {\n                return option.value;\n            });\n        }\n        // console.log(values);\n        // check if only prompt option is selected\n        if (values.length === 1 && values[0] === '') {\n            values = _promptValue || null;\n        } else if (!_multiple && values.length === 1) {\n            values = values[0];\n        }\n        _chart.onChange(values);\n    }\n\n    _chart.onChange = function (val) {\n        if (val && _multiple) {\n            _chart.replaceFilter([val]);\n        } else if (val) {\n            _chart.replaceFilter(val);\n        } else {\n            _chart.filterAll();\n        }\n        dc.events.trigger(function () {\n            _chart.redrawGroup();\n        });\n    };\n\n    function setAttributes () {\n        if (_multiple) {\n            _select.attr('multiple', true);\n        } else {\n            _select.attr('multiple', null);\n        }\n        if (_numberVisible !== null) {\n            _select.attr('size', _numberVisible);\n        } else {\n            _select.attr('size', null);\n        }\n    }\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * select menu. By default options are ordered by the group key in ascending\n     * order.\n     * @name order\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {Function} [order]\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     **/\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @name promptText\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {String} [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     **/\n    _chart.promptText = function (_) {\n        if (!arguments.length) {\n            return _promptText;\n        }\n        _promptText = _;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that filters option tags prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @name filterDisplayed\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {function} [filterDisplayed]\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     **/\n    _chart.filterDisplayed = function (filterDisplayed) {\n        if (!arguments.length) {\n            return _filterDisplayed;\n        }\n        _filterDisplayed = filterDisplayed;\n        return _chart;\n    };\n\n    /**\n     * Controls the type of select menu. Setting it to true converts the underlying\n     * HTML tag into a multiple select.\n     * @name multiple\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {boolean} [multiple=false]\n     * @example\n     * chart.multiple(true);\n     **/\n    _chart.multiple = function (multiple) {\n        if (!arguments.length) {\n            return _multiple;\n        }\n        _multiple = multiple;\n\n        return _chart;\n    };\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     * @name promptValue\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {?*} [promptValue=null]\n     **/\n    _chart.promptValue = function (promptValue) {\n        if (!arguments.length) {\n            return _promptValue;\n        }\n        _promptValue = promptValue;\n\n        return _chart;\n    };\n\n    /**\n     * Controls the number of items to show in the select menu, when `.multiple()` is true. This\n     * controls the [`size` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Attributes) of\n     * the `select` element. If `null` (the default), uses the browser's default height.\n     * @name numberItems\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {?number} [numberVisible=null]\n     * @example\n     * chart.numberVisible(10);\n     **/\n    _chart.numberVisible = function (numberVisible) {\n        if (!arguments.length) {\n            return _numberVisible;\n        }\n        _numberVisible = numberVisible;\n\n        return _chart;\n    };\n\n    _chart.size = dc.logger.deprecate(_chart.numberVisible, 'selectMenu.size is ambiguous - use numberVisible instead');\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Text Filter Widget\n *\n * The text filter widget is a simple widget designed to display an input field allowing to filter\n * data that matches the text typed.\n * As opposed to the other charts, this doesn't display any result and doesn't update its display,\n * it's just to input an filter other charts.\n *\n * @class textFilterWidget\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n *\n * var data = [{\"firstName\":\"John\",\"lastName\":\"Coltrane\"}{\"firstName\":\"Miles\",lastName:\"Davis\"}]\n * var ndx = crossfilter(data);\n * var dimension = ndx.dimension(function(d) {\n *     return d.lastName.toLowerCase() + ' ' + d.firstName.toLowerCase();\n * });\n *\n * dc.textFilterWidget('#search')\n *     .dimension(dimension);\n *     // you don't need the group() function\n *\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.textFilterWidget}\n **/\n\ndc.textFilterWidget = function (parent, chartGroup) {\n    var INPUT_CSS_CLASS = 'dc-text-filter-input';\n\n    var _chart = dc.baseMixin({});\n\n    var _normalize = function (s) {\n        return s.toLowerCase();\n    };\n\n    var _filterFunctionFactory = function (query) {\n        query = _normalize(query);\n        return function (d) {\n            return _normalize(d).indexOf(query) !== -1;\n        };\n    };\n\n    var _placeHolder = 'search';\n\n    _chart.group(function () {\n        throw 'the group function on textFilterWidget should never be called, please report the issue';\n    });\n\n    _chart._doRender = function () {\n        _chart.select('input').remove();\n\n        var _input = _chart.root().append('input')\n            .classed(INPUT_CSS_CLASS, true);\n\n        _input.on('input', function () {\n            _chart.dimension().filterFunction(_filterFunctionFactory(this.value));\n            dc.events.trigger(function () {\n                dc.redrawAll();\n            }, dc.constants.EVENT_DELAY);\n        });\n\n        _chart._doRedraw();\n\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        _chart.root().selectAll('input')\n            .attr('placeholder', _placeHolder);\n\n        return _chart;\n    };\n\n    /**\n     * This function will be called on values before calling the filter function.\n     * @name normalize\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * chart.normalize(function (s) {\n     *   return s.toLowerCase();\n     * });\n     * @param {function} [normalize]\n     * @returns {dc.textFilterWidget|function}\n     **/\n    _chart.normalize = function (normalize) {\n        if (!arguments.length) {\n            return _normalize;\n        }\n        _normalize = normalize;\n        return _chart;\n    };\n\n    /**\n     * Placeholder text in the search box.\n     * @name placeHolder\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * chart.placeHolder('type to filter');\n     * @param {function} [placeHolder='search']\n     * @returns {dc.textFilterWidget|string}\n     **/\n    _chart.placeHolder = function (placeHolder) {\n        if (!arguments.length) {\n            return _placeHolder;\n        }\n        _placeHolder = placeHolder;\n        return _chart;\n    };\n\n    /**\n     * This function will be called with the search text, it needs to return a function that will be used to\n     * filter the data. The default function checks presence of the search text.\n     * @name filterFunctionFactory\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * function (query) {\n     *     query = _normalize(query);\n     *     return function (d) {\n     *         return _normalize(d).indexOf(query) !== -1;\n     *     };\n     * };\n     * @param {function} [filterFunctionFactory]\n     * @returns {dc.textFilterWidget|function}\n     **/\n    _chart.filterFunctionFactory = function (filterFunctionFactory) {\n        if (!arguments.length) {\n            return _filterFunctionFactory;\n        }\n        _filterFunctionFactory = filterFunctionFactory;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The cboxMenu is a simple widget designed to filter a dimension by\n * selecting option(s) from a set of HTML `<input />` elements. The menu can be\n * made into a set of radio buttons (single select) or checkboxes (multiple).\n * @class cboxMenu\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a cboxMenu under #cbox-container using the default global chart group\n * var cbox = dc.cboxMenu('#cbox-container')\n *                .dimension(states)\n *                .group(stateGroup);\n * // the option text can be set via the title() function\n * // by default the option text is '`key`: `value`'\n * cbox.title(function (d){\n *     return 'STATE: ' + d.key;\n * })\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\n * Interaction with the widget will only trigger events and redraws within its group.\n * @returns {cboxMenu}\n **/\ndc.cboxMenu = function (parent, chartGroup) {\n    var GROUP_CSS_CLASS = 'dc-cbox-group';\n    var ITEM_CSS_CLASS = 'dc-cbox-item';\n\n    var _chart = dc.baseMixin({});\n\n    var _cbox;\n    var _promptText = 'Select all';\n    var _multiple = false;\n    var _inputType = 'radio';\n    var _promptValue = null;\n    // generate a random number to use as an ID\n    var _randVal = Math.floor(Math.random() * (100000)) + 1;\n    var _order = function (a, b) {\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\n            -1 : 0;\n    };\n\n    var _filterDisplayed = function (d) {\n        return _chart.valueAccessor()(d) > 0;\n    };\n\n    _chart.data(function (group) {\n        return group.all().filter(_filterDisplayed);\n    });\n\n    _chart._doRender = function () {\n        return _chart._doRedraw();\n    };\n    /*\n    // IS THIS NEEDED?\n    // Fixing IE 11 crash when redrawing the chart\n    // see here for list of IE user Agents :\n    // http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer\n    var ua = window.navigator.userAgent;\n    // test for IE 11 but not a lower version (which contains MSIE in UA)\n    if (ua.indexOf('Trident/') > 0 && ua.indexOf('MSIE') === -1) {\n        _chart.redraw = _chart.render;\n    }\n    */\n    _chart._doRedraw = function () {\n        _chart.select('ul').remove();\n        _cbox = _chart.root()\n            .append('ul')\n            .classed(GROUP_CSS_CLASS, true);\n        renderOptions();\n\n        if (_chart.hasFilter() && _multiple) {\n            _cbox.selectAll('input')\n                .property('checked', function (d) {\n                    // adding `false` avoids failing test cases in phantomjs\n                    return d && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0 || false;\n                });\n        } else if (_chart.hasFilter()) {\n            _cbox.selectAll('input')\n                .property('checked', function (d) {\n                    if (!d) {\n                        return false;\n                    }\n                    return _chart.keyAccessor()(d) === _chart.filter();\n                });\n        }\n        return _chart;\n    };\n\n    function renderOptions () {\n        var options = _cbox\n        .selectAll('li.' + ITEM_CSS_CLASS)\n            .data(_chart.data(), function (d) {\n            return _chart.keyAccessor()(d);\n        });\n\n        options.exit().remove();\n\n        options = options.enter()\n                .append('li')\n                .classed(ITEM_CSS_CLASS, true)\n            .merge(options);\n\n        options\n            .append('input')\n            .attr('type', _inputType)\n            .attr('value', function (d) { return _chart.keyAccessor()(d); })\n            .attr('name', 'domain_' + _randVal)\n            .attr('id', function (d, i) {\n                return 'input_' + _randVal + '_' + i;\n            });\n        options\n            .append('label')\n            .attr('for', function (d, i) {\n                return 'input_' + _randVal + '_' + i;\n            })\n            .text(_chart.title());\n\n        // 'all' option\n        if (_multiple) {\n            _cbox\n            .append('li')\n            .append('input')\n            .attr('type', 'reset')\n            .text(_promptText)\n            .on('click', onChange);\n        } else {\n            var li = _cbox.append('li');\n            li.append('input')\n                .attr('type', _inputType)\n                .attr('value', _promptValue)\n                .attr('name', 'domain_' + _randVal)\n                .attr('id', function (d, i) {\n                    return 'input_' + _randVal + '_all';\n                })\n                .property('checked', true);\n            li.append('label')\n                .attr('for', function (d, i) {\n                    return 'input_' + _randVal + '_all';\n                })\n                .text(_promptText);\n        }\n\n        _cbox\n            .selectAll('li.' + ITEM_CSS_CLASS)\n            .sort(_order);\n\n        _cbox.on('change', onChange);\n        return options;\n    }\n\n    function onChange (d, i) {\n        var values,\n            target = d3.select(d3.event.target),\n            options;\n\n        if (!target.datum()) {\n            values = _promptValue || null;\n        } else {\n            options = d3.select(this).selectAll('input')\n            .filter(function (o) {\n                if (o) {\n                    return this.checked;\n                }\n            });\n            values = options.nodes().map(function (option) {\n                return option.value;\n            });\n            // check if only prompt option is selected\n            if (!_multiple && values.length === 1) {\n                values = values[0];\n            }\n        }\n        _chart.onChange(values);\n    }\n\n    _chart.onChange = function (val) {\n        if (val && _multiple) {\n            _chart.replaceFilter([val]);\n        } else if (val) {\n            _chart.replaceFilter(val);\n        } else {\n            _chart.filterAll();\n        }\n        dc.events.trigger(function () {\n            _chart.redrawGroup();\n        });\n    };\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * cbox menu. By default options are ordered by the group key in ascending\n     * order.\n     * @name order\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {Function} [order]\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     **/\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @name promptText\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {String} [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     **/\n    _chart.promptText = function (_) {\n        if (!arguments.length) {\n            return _promptText;\n        }\n        _promptText = _;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that filters options prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @name filterDisplayed\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {function} [filterDisplayed]\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     **/\n    _chart.filterDisplayed = function (filterDisplayed) {\n        if (!arguments.length) {\n            return _filterDisplayed;\n        }\n        _filterDisplayed = filterDisplayed;\n        return _chart;\n    };\n\n    /**\n     * Controls the type of input element. Setting it to true converts\n     * the HTML `input` tags from radio buttons to checkboxes.\n     * @name multiple\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {boolean} [multiple=false]\n     * @example\n     * chart.multiple(true);\n     **/\n    _chart.multiple = function (multiple) {\n        if (!arguments.length) {\n            return _multiple;\n        }\n        _multiple = multiple;\n        if (_multiple) {\n            _inputType = 'checkbox';\n        } else {\n            _inputType = 'radio';\n        }\n        return _chart;\n    };\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     * @name promptValue\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {?*} [promptValue=null]\n     **/\n    _chart.promptValue = function (promptValue) {\n        if (!arguments.length) {\n            return _promptValue;\n        }\n        _promptValue = promptValue;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n// Renamed functions\n\ndc.abstractBubbleChart = dc.bubbleMixin;\ndc.baseChart = dc.baseMixin;\ndc.capped = dc.capMixin;\ndc.colorChart = dc.colorMixin;\ndc.coordinateGridChart = dc.coordinateGridMixin;\ndc.marginable = dc.marginMixin;\ndc.stackableChart = dc.stackMixin;\n\n// Expose d3 and crossfilter, so that clients in browserify\n// case can obtain them if they need them.\ndc.d3 = d3;\ndc.crossfilter = crossfilter;\n\nreturn dc;}\n    if(typeof define === \"function\" && define.amd) {\n        define([\"d3\", \"crossfilter2\"], _dc);\n    } else if(typeof module === \"object\" && module.exports) {\n        var _d3 = require('d3');\n        var _crossfilter = require('crossfilter2');\n        // When using npm + browserify, 'crossfilter' is a function,\n        // since package.json specifies index.js as main function, and it\n        // does special handling. When using bower + browserify,\n        // there's no main in bower.json (in fact, there's no bower.json),\n        // so we need to fix it.\n        if (typeof _crossfilter !== \"function\") {\n            _crossfilter = _crossfilter.crossfilter;\n        }\n        module.exports = _dc(_d3, _crossfilter);\n    } else {\n        this.dc = _dc(d3, crossfilter);\n    }\n}\n)();\n\n//# sourceMappingURL=dc.js.map","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n"]}